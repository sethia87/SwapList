<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Ion.Core.Toolkit.Wpf</name>
    </assembly>
    <members>
        <member name="T:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1">
            <summary>
            Behavior base class that handles a safe unsubscribe and clean up because the default
            behavior class does not always call <see cref="M:System.Windows.Interactivity.Behavior.OnDetaching" />.
            </summary>
            <typeparam name="T">The dependency object this behavior should attach to.</typeparam>
        </member>
        <member name="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.OnAssociatedObjectLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the "AssociatedObject" is loaded.
            </summary>
            <remarks><para>DO NOT CALL THIS FUNCTION EXPLICITLY.</para>
            <para>It is public just to let Silverlight dynamically create a Delegate over it.</para>
            </remarks>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.OnAssociatedObjectUnloaded(System.Object,System.EventArgs)">
            <summary>
            Called when the "AssociatedObject" is unloaded.
            </summary>
            <remarks><para>DO NOT CALL THIS FUNCTION EXPLICITLY.</para>
            <para>It is public just to let Silverlight dynamically create a Delegate over it.</para>
            </remarks>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.CleanUp">
            <summary>
            Actually cleans up the behavior because <see cref="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.OnDetaching" /> is not always called.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>Use the <see cref="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.Initialize" /> function instead.</remarks>
        </member>
        <member name="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>Use the <see cref="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.Uninitialize" /> function instead.</remarks>
        </member>
        <member name="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.Initialize">
            <summary>
            Initializes the behavior. This method is called instead of the <see cref="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.OnAttached" /> which is sealed
            to protect the additional behavior.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.Uninitialize">
            <summary>
            Uninitializes the behavior. This method is called when <see cref="M:Ion.Core.Toolkit.Behaviors.IonBehaviorBase`1.OnDetaching" /> is called, or when the
            AttachedControl is unloaded.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Behaviors.ScrollViewerHoverBehavior.VerticalScrollBarWidthProperty">
            <summary>
            Identifies the VerticalScrollBarWidth dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Behaviors.ScrollViewerHoverBehavior.VerticalScrollBarWidth">
            <summary>
            VerticalScrollBarWidth backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Behaviors.ScrollViewerHoverBehavior.HorizontalScrollBarHeightProperty">
            <summary>
            Identifies the HorizontalScrollBarHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Behaviors.ScrollViewerHoverBehavior.HorizontalScrollBarHeight">
            <summary>
            HorizontalScrollBarHeight backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Behaviors.StoryboardAction">
            <summary>
            Starts a <see cref="T:System.Windows.Media.Animation.Storyboard" /> as a trigger action
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Behaviors.StoryboardAction.StoryboardProperty">
            <summary>
            Identifies the Storyboard dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Behaviors.StoryboardAction.Storyboard">
            <summary>
            Get/set the storyboard to start when the action is triggered
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Collections.CollectionItemPropertyChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Collections.CollectionItemPropertyChangedEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Collections.CollectionItemPropertyChangedEventArgs.Collection">
            <summary>
            Gets the collection.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.CollectionItemPropertyChangedEventArgs.#ctor(System.Collections.IEnumerable,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ion.Core.Toolkit.Collections.CollectionItemPropertyChangedEventArgs" /> class.
            </summary>
            <param name="collection">The collection.</param>
            <param name="item">The item.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Collections.CollectionItemPropertyChangedEventHandler">
            <summary>
            
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Ion.Core.Toolkit.Collections.CollectionItemPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Collections.INotifyCollectionChangedEx">
            <summary>
            
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Collections.INotifyCollectionChangedEx.ItemPropertyChanged">
            <summary>
            Occurs when [item property changed].
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Collections.INotifyCollectionChangedEx.CollectionClearing">
            <summary>
            Occurs when [collection clearing].
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Collections.INotifyCollectionChangedEx.CollectionSorted">
            <summary>
            Occurs when [collection sorted].
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Collections.ObjectPool`1">
            <summary>
            A pool of objects that can be reused.
            </summary>
            <typeparam name="T">The type of object in the pool.</typeparam>
        </member>
        <member name="F:Ion.Core.Toolkit.Collections.ObjectPool`1.DefaultMinimumObjectsInThePool">
            <summary>
            The default minimum number objects to keep in the pool.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Collections.ObjectPool`1._traversing">
            <summary>
            A value indicating whether the pool is being traversed.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Collections.ObjectPool`1._createObject">
            <summary>
            A function which creates objects.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Collections.ObjectPool`1._objects">
            <summary>
            The list of objects.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Collections.ObjectPool`1._currentIndex">
            <summary>
            The index of the current item in the list.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Collections.ObjectPool`1._minimumObjectsInThePool">
            <summary>
            The minimum number of objects to keep in the pool.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObjectPool`1.#ctor(System.Func{`0},System.Int32)">
            <summary>
            Initializes a new instance of the ObjectPool class.
            </summary>
            <param name="minimumObjectsInThePool">The minimum number of objects
            to keep in the pool.</param>
            <param name="createObject">The function that creates the objects.
            </param>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObjectPool`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the ObjectPool class.
            </summary>
            <param name="createObject">The function that creates the objects.
            </param>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObjectPool`1.ForEachRemaining(System.Action{`0})">
            <summary>
            Performs an operation on the subsequent, already-created objects
            in the pool.
            </summary>
            <param name="action">The action to perform on the remaining objects.
            </param>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObjectPool`1.Next">
            <summary>
            Creates a new object or reuses an existing object in the pool.
            </summary>
            <returns>A new or existing object in the pool.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObjectPool`1.Reset">
            <summary>
            Resets the pool of objects.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObjectPool`1.Done">
            <summary>
            Finishes the object creation process.
            </summary>
            <remarks>
            If there are substantially more remaining objects in the pool those
            objects may be removed.
            </remarks>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObjectPool`1.Clear">
            <summary>
            Removes the objects from the pool.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Collections.ObservableCollectionEx`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObservableCollectionEx`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ion.Core.Toolkit.Collections.ObservableCollectionEx`1" /> class.
            </summary>
            <param name="monitorItemPropertyChanged">if set to <c>true</c> [monitor item property changed].</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Collections.ObservableCollectionEx`1.IsMonitoringItemPropertyChanged">
            <summary>
            Gets a value indicating whether this instance is monitoring item property changed.
            </summary>
            <value>
            	<c>true</c> if this instance is monitoring item property changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Ion.Core.Toolkit.Collections.ObservableCollectionEx`1.CollectionSorted">
            <summary>
            Occurs when [collection sorted].
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObservableCollectionEx`1.OnItemPropertyChanged(`0,System.String)">
            <summary>
            Called when [item property changed].
            </summary>
            <param name="item">The item.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="E:Ion.Core.Toolkit.Collections.ObservableCollectionEx`1.ItemPropertyChanged">
            <summary>
            Occurs when [item property changed].
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Collections.ObservableCollectionEx`1.CollectionClearing">
            <summary>
            Occurs when [collection clearing].
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Collections.ObservableCollectionSusp`1">
            <summary>
            An ObservableCollection which supports the collection changed event suspend/resume
            </summary>
            <typeparam name="T">The Type of the item</typeparam>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObservableCollectionSusp`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the the Collection. 
            </summary>
            <param name="items">The collection whose elements should be added to the end of the Collection.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObservableCollectionSusp`1.BeginUpdate">
            <summary>
            Suspends the collection from triggering update events
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Collections.ObservableCollectionSusp`1.EndUpdate">
            <summary>
            Resumes the update events from the collection
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Command.EventToCommand">
            <summary>
            This <see cref="T:System.Windows.Interactivity.TriggerAction" /> can be
            used to bind any event on any FrameworkElement to an <see cref="T:System.Windows.Input.ICommand" />.
            Typically, this element is used in XAML to connect the attached element
            to a command located in a ViewModel. This trigger can only be attached
            to a FrameworkElement or a class deriving from FrameworkElement.
            <para>To access the EventArgs of the fired event, use a RelayCommand&lt;EventArgs&gt;
            and leave the CommandParameter and CommandParameterValue empty!</para>
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Command.EventToCommand.CommandParameterProperty">
            <summary>
            Identifies the <see cref="P:Ion.Core.Toolkit.Command.EventToCommand.CommandParameter" /> dependency property
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Command.EventToCommand.CommandProperty">
            <summary>
            Identifies the <see cref="P:Ion.Core.Toolkit.Command.EventToCommand.Command" /> dependency property
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Command.EventToCommand.MustToggleIsEnabledProperty">
            <summary>
            Identifies the <see cref="P:Ion.Core.Toolkit.Command.EventToCommand.MustToggleIsEnabled" /> dependency property
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Command.EventToCommand.Command">
            <summary>
            Gets or sets the ICommand that this trigger is bound to. This
            is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Command.EventToCommand.CommandParameter">
            <summary>
            Gets or sets an object that will be passed to the <see cref="P:Ion.Core.Toolkit.Command.EventToCommand.Command" />
            attached to this trigger. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Command.EventToCommand.CommandParameterValue">
            <summary>
            Gets or sets an object that will be passed to the <see cref="P:Ion.Core.Toolkit.Command.EventToCommand.Command" />
            attached to this trigger. This property is here for compatibility
            with the Silverlight version. This is NOT a DependencyProperty.
            For databinding, use the <see cref="P:Ion.Core.Toolkit.Command.EventToCommand.CommandParameter" /> property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Command.EventToCommand.MustToggleIsEnabled">
            <summary>
            Gets or sets a value indicating whether the attached element must be
            disabled when the <see cref="P:Ion.Core.Toolkit.Command.EventToCommand.Command" /> property's CanExecuteChanged
            event fires. If this property is true, and the command's CanExecute 
            method returns false, the element will be disabled. If this property
            is false, the element will not be disabled when the command's
            CanExecute method changes. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Command.EventToCommand.MustToggleIsEnabledValue">
            <summary>
            Gets or sets a value indicating whether the attached element must be
            disabled when the <see cref="P:Ion.Core.Toolkit.Command.EventToCommand.Command" /> property's CanExecuteChanged
            event fires. If this property is true, and the command's CanExecute 
            method returns false, the element will be disabled. This property is here for
            compatibility with the Silverlight version. This is NOT a DependencyProperty.
            For databinding, use the <see cref="P:Ion.Core.Toolkit.Command.EventToCommand.MustToggleIsEnabled" /> property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.EventToCommand.OnAttached">
            <summary>
            Called when this trigger is attached to a FrameworkElement.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.EventToCommand.GetAssociatedObject">
            <summary>
            This method is here for compatibility
            with the Silverlight version.
            </summary>
            <returns>The FrameworkElement to which this trigger
            is attached.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.EventToCommand.GetCommand">
            <summary>
            This method is here for compatibility
            with the Silverlight version.
            </summary>
            <returns>The command that must be executed when
            this trigger is invoked.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.EventToCommand.Invoke">
            <summary>
            Provides a simple way to invoke this trigger programatically
            without any EventArgs.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.EventToCommand.Invoke(System.Object)">
            <summary>
            Executes the trigger.
            <para>To access the EventArgs of the fired event, use a RelayCommand&lt;EventArgs&gt;
            and leave the CommandParameter and CommandParameterValue empty!</para>
            </summary>
            <param name="parameter">The EventArgs of the fired event.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Command.RelayCommand">
            <summary>
            A command whose sole purpose is to relay its functionality to other
            objects by invoking delegates. The default return value for the CanExecute
            method is 'true'.  This class does not allow you to accept command parameters in the
            Execute and CanExecute callback methods.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Command.RelayCommand.ExecuteAction">
            <summary>
            Get/set the action to execute.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Command.RelayCommand.ExecuteActionPredicate">
            <summary>
            Get/set the action predicate to check if the action can be executed.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand.#ctor">
            <summary>
            Initializes a new instance of the RelayCommand without action (it should be set during constructor)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the RelayCommand class that 
            can always execute.
            </summary>
            <param name="execute">The execution logic.</param>
            <exception cref="T:System.ArgumentNullException">If the execute argument is null.</exception>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the RelayCommand class.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
            <exception cref="T:System.ArgumentNullException">If the execute argument is null.</exception>
        </member>
        <member name="E:Ion.Core.Toolkit.Command.RelayCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether the command should execute.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand.RaiseCanExecuteChanged">
            <summary>
            Raises the <see cref="E:Ion.Core.Toolkit.Command.RelayCommand.CanExecuteChanged" /> event.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">This parameter will always be ignored.</param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked. 
            </summary>
            <param name="parameter">This parameter will always be ignored.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Command.RelayCommand`1">
            <summary>
            A generic command whose sole purpose is to relay its functionality to other
            objects by invoking delegates. The default return value for the CanExecute
            method is 'true'. This class allows you to accept command parameters in the
            Execute and CanExecute callback methods.
            </summary>
            <typeparam name="T">The type of the command parameter.</typeparam>
        </member>
        <member name="P:Ion.Core.Toolkit.Command.RelayCommand`1.ExecuteAction">
            <summary>
            Get/set the action to execute.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Command.RelayCommand`1.ExecuteActionPredicate">
            <summary>
            Get/set the action predicate to check if the action can be executed.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand`1.#ctor">
            <summary>
            Initializes a new instance of the RelayCommand without action (it should be set during constructor)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of the RelayCommand class that 
            can always execute.
            </summary>
            <param name="execute">The execution logic.</param>
            <exception cref="T:System.ArgumentNullException">If the execute argument is null.</exception>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
            <summary>
            Initializes a new instance of the RelayCommand class.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
            <exception cref="T:System.ArgumentNullException">If the execute argument is null.</exception>
        </member>
        <member name="E:Ion.Core.Toolkit.Command.RelayCommand`1.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether the command should execute.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand`1.RaiseCanExecuteChanged">
            <summary>
            Raises the <see cref="E:Ion.Core.Toolkit.Command.RelayCommand`1.CanExecuteChanged" /> event.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand`1.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data 
            to be passed, this object can be set to a null reference</param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Command.RelayCommand`1.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked. 
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data 
            to be passed, this object can be set to a null reference</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBFavoriteItem.IsFavorite">
            <summary>
            IsFavorite flag
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBFavoriteItem.Category">
            <summary>
            The name of the category this item belongs to
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBFavoriteItem.IconColor">
            <summary>
            The color of the icon
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem">
            <summary>
            Standard IonAutoCompleteBox item
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="key">Key associated to this item</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.GetItem(System.String)">
            <summary>
            Creates a new ACBItem with the given caption
            </summary>
            <param name="caption">Item caption</param>
            <returns>A new ACBItem</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.GetItem(System.String,System.String)">
            <summary>
            Creates a new ACBItem with the given key and caption
            </summary>
            <param name="key">Item key</param>
            <param name="caption">Item caption</param>
            <returns>A new ACBItem</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.GetItem(System.String,System.String,System.String)">
            <summary>
            Creates a new ACBItem with the given key, caption and primary text
            </summary>
            <param name="key">Item key</param>
            <param name="caption">Item caption</param>
            <param name="primaryText">Item primary text</param>
            <returns>A new ACBItem</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.GetItem(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new ACBItem with the given key, caption, primary text and enabled state
            </summary>
            <param name="key">Item key</param>
            <param name="caption">Item caption</param>
            <param name="primaryText">Item primary text</param>
            <param name="isEnabled">Enabled state</param>
            <returns>A new ACBItem</returns>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.IsAlwaysShown">
            <summary>
            IsAlwaysShown state
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.Caption">
            <summary>
            Caption
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.IsEnabled">
            <summary>
            IsEnabled
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.BackColor">
            <summary>
            BackColor
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.ForeColor">
            <summary>
            ForeColor
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.PrimaryText">
            <summary>
            PrimaryText
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.UserData">
            <summary>
            UserData
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.ACBItem.ToString">
            <summary>
            ToString()
            </summary>
            <returns>Item Caption</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator">
            <summary>
            Collects a list of items and permit its navigation and modification
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.ItemsProperty">
            <summary>
            Identifies the Items dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.Items">
            <summary>
            Items backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.ItemsSelectionModeProperty">
            <summary>
            Identifies the ItemsSelectionMode dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.ItemsSelectionMode">
            <summary>
            ItemsSelectionMode backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.AllowDuplicatesProperty">
            <summary>
            Identifies the AllowDuplicates dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.AllowDuplicates">
            <summary>
            AllowDuplicates backing field
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.AddItem(System.Object)">
            <summary>
            Adds an item to the collection
            </summary>
            <param name="item">The object to add as an item</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.AddItem(Ion.Core.Toolkit.Controls.AutoComplete.NavigatorItem)">
            <summary>
            Adds an item to the collection
            </summary>
            <param name="item">The item to add</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.GetItems">
            <summary>
            Returns the list of object mapped into items of the collection
            </summary>
            <returns>A list of objects</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.RemoveItem(System.Object)">
            <summary>
            Removes an item from the collection
            </summary>
            <param name="item">The item to remove</param>
            <returns>True if the item has been found and removed, false otherwise</returns>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigator.IsDisposed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigatorEventArgs.Text">
            <summary>
            Gets/sets the text of the item
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigatorEventArgs.BackgroundColor">
            <summary>
            Gets/sets the background of the item
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigatorEventArgs.ForegroundColor">
            <summary>
            Gets/sets the forekground of the item
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigatorEventArgs.BorderColor">
            <summary>
            Gets/sets the border color
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.AutoCompleteItemsNavigatorEventArgs.Cancel">
            <summary>
            Use this to abort the action
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.FavoriteFlagToggledEventArgs.Item">
            <summary>
            Gets the IFavorite whose IsFavorite property has been toggled
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.FavoriteFlagToggledEventArgs.Cancel">
            <summary>
            Use this to abort the action
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterPredicate`1">
            <summary>
            It's the pradicate used to determine if an item T should
            be shown or not in an AutoCompleteBox object
            </summary>
            <typeparam name="T">Type of the filtering object</typeparam>
            <param name="filter">The filter string</param>
            <param name="item">The item for which should decided to be kept or fitered out</param>
            <returns>TRUE if the item has to be kept, FALSE otherwise</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode">
            <summary>
            Specifies how text in the text box portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox" /> control is used
            to filter items specified by the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.Items" />
            property for display in the drop-down.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.None">
            <summary>
            Specifies that no filter is used. All items are returned.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.StartsWith">
            <summary>
            Specifies a culture-sensitive, case-insensitive filter where the
            returned items start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCultureIgnoreCase" /> as
            the string comparison criteria.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.StartsWithCaseSensitive">
            <summary>
            Specifies a culture-sensitive, case-sensitive filter where the
            returned items start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCulture" /> as the string
            comparison criteria.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.StartsWithOrdinal">
            <summary>
            Specifies an ordinal, case-insensitive filter where the returned
            items start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.OrdinalIgnoreCase" /> as the
            string comparison criteria.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.StartsWithOrdinalCaseSensitive">
            <summary>
            Specifies an ordinal, case-sensitive filter where the returned items
            start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying <see cref="P:System.StringComparer.Ordinal" /> as
            the string comparison criteria.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.Contains">
            <summary>
            Specifies a culture-sensitive, case-insensitive filter where the
            returned items contain the specified text.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.ContainsCaseSensitive">
            <summary>
            Specifies a culture-sensitive, case-sensitive filter where the
            returned items contain the specified text.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.ContainsOrdinal">
            <summary>
            Specifies an ordinal, case-insensitive filter where the returned
            items contain the specified text.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.ContainsOrdinalCaseSensitive">
            <summary>
            Specifies an ordinal, case-sensitive filter where the returned items
            contain the specified text.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.Equals">
            <summary>
            Specifies a culture-sensitive, case-insensitive filter where the
            returned items equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCultureIgnoreCase" /> as
            the search comparison criteria.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.EqualsCaseSensitive">
            <summary>
            Specifies a culture-sensitive, case-sensitive filter where the
            returned items equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCulture" /> as the string
            comparison criteria.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.EqualsOrdinal">
            <summary>
            Specifies an ordinal, case-insensitive filter where the returned
            items equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.OrdinalIgnoreCase" /> as the
            string comparison criteria.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.EqualsOrdinalCaseSensitive">
            <summary>
            Specifies an ordinal, case-sensitive filter where the returned items
            equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying <see cref="P:System.StringComparer.Ordinal" /> as
            the string comparison criteria.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterMode.Custom">
            <summary>
            Specifies that a custom filter is used.
            This will return a null filter.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.IAutoCompleteBoxItem">
            <summary>
            The interface for a standard IonAutoCompleteBox item
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IAutoCompleteBoxItem.Key">
            <summary>
            Gets this item key
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IAutoCompleteBoxItem.Caption">
            <summary>
            Gets/sets the item caption
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IAutoCompleteBoxItem.IsEnabled">
            <summary>
            Gets/sets the item enable state
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IAutoCompleteBoxItem.IsAlwaysShown">
            <summary>
            Determines if this item will be always shown, regardless the applied filtering 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IAutoCompleteBoxItem.PrimaryText">
            <summary>
            Gets/sets this item primary text
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IAutoCompleteBoxItem.BackColor">
            <summary>
            The item back color
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IAutoCompleteBoxItem.ForeColor">
            <summary>
            The item fore color
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IFavorite.IsFavorite">
            <summary>
            Gets/sets the flag indicating whether the item is a favorite or not.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IFavorite.Category">
            <summary>
            Gets/sets the castegory the item belongs to.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IFavorite.IconColor">
            <summary>
            Gets/sets the color of the icon
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.IonACBFilteringInfoEventArgs">
            <summary>
            IonAutoCompleteBox Filtering info arguments
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonACBFilteringInfoEventArgs.ItemsCount">
            <summary>
            Total items count contained in the IonACB
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonACBFilteringInfoEventArgs.ItemsFiltered">
            <summary>
            Filtered items
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonACBFilteringInfoEventArgs.FilterInfo">
            <summary>
            The Filter info text
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox">
            <summary>
            The IonAutoCompleteBox is a revisited version of the Toolkit AutoCompleteBox widget.
            It's able to filter out the items of a given list using a standard or a custom filtering
            algorithm. It can be used as AutoCompleteBox, standard ComboBox or as AutoComplete ComboBox.
            The items of the ACB can be whatever kind of object but using an IAutoCompleteBoxItem
            derived object will gives some useful built-in feature.
            The ACB can be used with a synchronous filtering or a throttled filtering.
            The multiple item selection can be obtained enabling the built-in ItemsNavigator.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox._deferredRebuildFilteredList">
            <summary>
            Flag that identifies a deferred filtered list rebuild
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox._forceImmediateFilteredListRebuild">
            <summary>
            Forces an immediate filtered list rebuild even if the throttled mode has been
            requested; this is useful for those operations that maps a "precise" user operation,
            for example "clicking on an item in the listbox": in that case i don't want to wait
            for a filter operation, I can do it right away.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox._isTemplateApplied">
            <summary>
            Indicates if the control's template has been applied.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TextChanged">
            <summary>
            Triggered when the Text property has changed
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ThrottledTextChanged">
            <summary>
            Triggered when the Text property has changed
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemSelected">
            <summary>
            Triggered when an item has been choosen from the popup list
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.NavigatorItemAdd">
            <summary>
            Triggered when a new item is being added to the NavigatorItem widget
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FavoriteFlagToggled">
            <summary>
            Triggered when the IsFavorite property is toggled for an item
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FilteringInfoChanging">
            <summary>
            Triggered when the FilterInfo is going to change so that it can be customized
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TrimStartSpaces">
            <summary>
            Trim start spaces before filtering
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TrimEndSpaces">
            <summary>
            Trim end spaces before filtering
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.WidgetsCleanUp">
            <summary>
            Called to cleanup all the events registration and to disconnect
            the widgets on template changing or load/unload
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PostApplyTemplate">
            <summary>
            Called right after the visual tree has been loaded by the fw.
            Retrieve widgets and resigister to the necessary events
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserItemsCollectionAssigned">
            <summary>
            Handles the whole collection substitution
            (why did you drop the bomb?!?)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.CheckSelectedItemConsistency">
            <summary>
            [FIX CORESDK-1480]
            This function is used to reset the SelectedItem (-&gt;null)
            In case it is pointing to an item that doesn't exist any more in the Items list.
            When resetting the SelectedItem we don't want to trigger a new search or reset
            the text in the text area. 
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ComboButtonBackgroundProperty">
            <summary>
            Identifies the ComboButtonBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ComboButtonBackground">
            <summary>
            ComboButtonBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ComboButtonForegroundProperty">
            <summary>
            Identifies the ComboButtonForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ComboButtonForeground">
            <summary>
            ComboButtonForeground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsPopupOpenProperty">
            <summary>
            Identifies the IsPopupOpen dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsPopupOpen">
            <summary>
            Gets or sets the status of the popup
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsCategorizedViewProperty">
            <summary>
            Identifies the View type dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsCategorizedView">
            <summary>
            Gets or sets the View Type
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.Text">
            <summary>
            Text backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemTemplateProperty">
            <summary>
            Identifies the ItemTemplate dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate for the items of the dropdown control
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TextFilterModeProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TextFilterMode">
            <summary>
            TextFilterMode backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PopupMaxHeightProperty">
            <summary>
            Identifies the PopupMaxHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PopupMaxHeight">
            <summary>
            PopupMaxHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PopupHeightProperty">
            <summary>
            Identifies the PopupHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PopupHeight">
            <summary>
            PopupHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemsProperty">
            <summary>
            Identifies the Items dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.Items">
            <summary>
            Items backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemsSource">
            <summary>
            ItemsSource backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.Favorites">
            <summary>
            Gets the collection of IFavorite items whose IsFavorite flag is true. 
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.MinimumTextLenghtFilterTriggerProperty">
            <summary>
            Identifies the MinimumTextLenghtFilterTrigger dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.MinimumTextLenghtFilterTrigger">
            <summary>
            MinimumTextLenghtFilterTrigger backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UseACBItemStyleProperty">
            <summary>
            Identifies the UseACBItemStyle dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UseACBItemStyle">
            <summary>
            UseACBItemStyle backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ShowComboButtonProperty">
            <summary>
            Identifies the ShowComboButton dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ShowComboButton">
            <summary>
            ShowComboButton backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ReadOnlyComboProperty">
            <summary>
            Identifies the ReadOnlyCombo dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ReadOnlyCombo">
            <summary>
            ReadOnlyCombo backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserFilterProperty">
            <summary>
            Identifies the UserFilter dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserFilter">
            <summary>
            User filter items filtering purpose; the filter must return TRUE for the
            items that has shown and FALSE for the items that must NOT be shown
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ThrottledFilteringIntervalProperty">
            <summary>
            Identifies the ThrottledFilteringInterval dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ThrottledFilteringInterval">
            <summary>
            ThrottledFilteringInterval backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ShowInfoProperty">
            <summary>
            Identifies the ShowInfo dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ShowInfo">
            <summary>
            ShowInfo backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FilteringInfoProperty">
            <summary>
            Identifies the FilteringInfo dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FilteringInfo">
            <summary>
            FilteringInfo backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TotalFilteringOperationProperty">
            <summary>
            Identifies the TotalFilteringOperation dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TotalFilteringOperation">
            <summary>
            TotalFilteringOperation backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.AvgFilterTimeProperty">
            <summary>
            Identifies the AvgFilterTime dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.AvgFilterTime">
            <summary>
            AvgFilterTime backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.LastFilterTimeProperty">
            <summary>
            Identifies the LastFilterTime dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.LastFilterTime">
            <summary>
            LastFilterTime backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ThrottledTextChangedIntervalProperty">
            <summary>
            Identifies the ThrottledTextChangedInterval dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ThrottledTextChangedInterval">
            <summary>
            ThrottledTextChangedInterval backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FilteringEnabledProperty">
            <summary>
            Identifies the FilteringEnabled dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FilteringEnabled">
            <summary>
            FilteringEnabled backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.SelectedItem">
            <summary>
            SelectedItem backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.AllowNavigatorDuplicatesProperty">
            <summary>
            Identifies the AllowNavigatorDuplicates dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.AllowNavigatorDuplicates">
            <summary>
            AllowNavigatorDuplicates backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.StatusProperty">
            <summary>
            Identifies the Status dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.Status">
            <summary>
            Status backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.StatusBackgroundProperty">
            <summary>
            Identifies the StatusBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.StatusBackground">
            <summary>
            StatusBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.CustomStatusBrushProperty">
            <summary>
            Identifies the CustomStatusBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.CustomStatusBrush">
            <summary>
            CustomStatusBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ClearTextOnItemSelectionProperty">
            <summary>
            Identifies the ClearTextOnItemSelection dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ClearTextOnItemSelection">
            <summary>
            ClearTextOnItemSelection backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemsNavigatorMaxWidthPctProperty">
            <summary>
            Identifies the ItemsNavigatorMaxWidthPct dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemsNavigatorMaxWidthPct">
            <summary>
            The max width (in percentage of the total width) that the ItemsNavigator will occupy
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ShowItemsNavigatorProperty">
            <summary>
            Identifies the ShowItemsNavigator dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ShowItemsNavigator">
            <summary>
            ShowItemsNavigator backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemsNavigatorFontSizeProperty">
            <summary>
            Identifies the ItemsNavigatorFontSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemsNavigatorFontSize">
            <summary>
            ItemsNavigatorFontSize backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemsNavigatorFontFamilyProperty">
            <summary>
            Identifies the ItemsNavigatorFontFamily dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ItemsNavigatorFontFamily">
            <summary>
            ItemsNavigatorFontFamily backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsItemsNavigatorTabStopProperty">
            <summary>
            Identifies the IsItemsNavigatorTabStop dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsItemsNavigatorTabStop">
            <summary>
            IsItemsNavigatorTabStop backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsComboButtonTabStopProperty">
            <summary>
            Identifies the IsComboButtonTabStop dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsComboButtonTabStop">
            <summary>
            IsComboButtonTabStop backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.CustomizeSearchResultProperty">
            <summary>
            Identifies the method to customize search result dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.CustomizeSearchResult">
            <summary>
            CustomizeSearchResult backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.SelectNextNodeProperty">
            <summary>
            Identifies the SelectNextNode dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.SelectNextNode">
            <summary>
            SelectNextNode backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsUserButtonTabStopProperty">
            <summary>
            Identifies the IsUserButtonTabStop dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsUserButtonTabStop">
            <summary>
            IsUserButtonTabStop backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PopupMinWidthProperty">
            <summary>
            Identifies the PopupMinWidth dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PopupMinWidth">
            <summary>
            PopupMinWidth backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PopupMaxWidthProperty">
            <summary>
            Identifies the PopupMaxWidth dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PopupMaxWidth">
            <summary>
            PopupMaxWidth backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FocusTextOnItemSelectedProperty">
            <summary>
            Identifies the FocusTextOnItemSelected dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FocusTextOnItemSelected">
            <summary>
            FocusTextOnItemSelected backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TabSelectionEnabledProperty">
            <summary>
            Identifies the TabSelectionEnabled dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TabSelectionEnabled">
            <summary>
            Allows the selection of a popup item with the TAB key
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.AutoSelectionOnSingleMatchProperty">
            <summary>
            AutoSelectionOnSingleMatch dependency property 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.AutoSelectionOnSingleMatch">
            <summary>
            Automatically select the matched item in case of single match
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserActionProperty">
            <summary>
            Identifies the UserAction dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserAction">
            <summary>
            UserAction backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonIconProperty">
            <summary>
            Identifies the UserButtonIcon dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonIcon">
            <summary>
            UserButtonIcon backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonBackgroundProperty">
            <summary>
            Identifies the UserButtonBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonBackground">
            <summary>
            UserButtonBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonFillProperty">
            <summary>
            Identifies the UserButtonFill dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonFill">
            <summary>
            UserButtonFill backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ShowUserButtonProperty">
            <summary>
            Identifies the ShowUserButton dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ShowUserButton">
            <summary>
            ShowUserButton backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonIconKeyProperty">
            <summary>
            Identifies the UserButtonIconKey dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonIconKey">
            <summary>
            UserButtonIconKey backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonIconTypeProperty">
            <summary>
            Identifies the UserButtonIconType dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonIconType">
            <summary>
            UserButtonIconType backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonIconRotateDegreesProperty">
            <summary>
            Identifies the UserButtonIconRotateDegrees dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonIconRotateDegrees">
            <summary>
            UserButtonIconRotateDegrees backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonWidthProperty">
            <summary>
            Identifies the UserButtonWidth dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonWidth">
            <summary>
            UserButtonWidth backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonHeightProperty">
            <summary>
            Identifies the UserButtonHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonHeight">
            <summary>
            UserButtonHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonToolTipContentProperty">
            <summary>
            Identifies the UserButtonToolTipContent dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UserButtonToolTipContent">
            <summary>
            UserButtonToolTipContent backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TextAlignment">
            <summary>
            Sets the Text alignment of TextBox
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UpdatePopupWidth">
            <summary>
            Updates the Popup width.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.AdjustItemsNavigatorWidth">
            <summary>
            Adjust the ItemsNavigator MaxWidth
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.HandleThrottledFilteringTick(System.Object,System.EventArgs)">
            <summary>
            Timer handler to handle a deferred filtered list rebuild
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.RebuildFilteredListRequest">
            <summary>
            Triggers a listbox items rebuild or schedule a new throttled one
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.RebuildFilteredListPerform">
            <summary>
            Cleanup the internal list and rebuilds it using the current filtering policy
            </summary>
            <returns>True if the filtering has been triggeried, flase otherwise.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ShowTheWholeUserCollection">
            <summary>
            Aligns -with no check or filters- the items in the lsitbox to the user collection
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.DoActualFiltering">
            <summary>
            Executes the real filtering operation
            </summary>
            <returns>True if iltering has bene performed, false otherwise</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.SwitchReadOnlyCombo(System.Boolean)">
            <summary>
            Enables/disables the "readonly combo" mode
            </summary>
            <param name="setValue">true to enable, false otherwise</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FilterItem(System.String,System.Object)">
            <summary>
            Determines if an item should be removed or not from the item popup list
            </summary>
            <param name="text">Fitering text</param>
            <param name="item">Item to filter</param>
            <returns>TRUE if the item must be kept, FALSE otherwise</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.HandleThrottledTextChangedIntervalChanged">
            <summary>
            Throttled text changed interval has changed, align the timer
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.HandleThrottledTextChangeTick(System.Object,System.EventArgs)">
            <summary>
            Determines if a ThrottledTextChanged event must be fired
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PopupSetFocus(System.Boolean)">
            <summary>
            Opens the popup, gives it the focus and selects the first item (if it exists)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.SetText(System.Object,System.Boolean)">
            <summary>
            Set the text in the Text part of the widget using a generic object
            </summary>
            <param name="item">The item that represents the text to be put in the Text widget</param>
            <param name="b"></param>
            <param name="shouldOpenPopup"></param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ResolveTextValue(System.Object)">
            <summary>
            Retrieve the text to show using various possible text source
            </summary>
            <param name="item">Selected item</param>
            <returns>Text to show</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PostSetText(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Called after tht Text has changed
            </summary>
            <param name="newValue">The new text value</param>
            <param name="oldValue">The old text value</param>
            <param name="fromCode">True if the text changed due to a code "SetText()" operation, false otherwise.
            When this parameter is true it means that the function has been called due to a user selection through
            the ListView</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UpdateInfo">
            <summary>
            Updates the info area
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.SwitchFilteringEnable(System.Boolean)">
            <summary>
            Handles the changed in the FilteringEnable property
            </summary>
            <param name="mode">filter mode (enabled/disabled)</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ShowAllItems">
            <summary>
            Shows all the user items in the ListBox
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.AddItemToNavigatorLocal(System.Object)">
            <summary>
            Adds an item to the ItemsNavigator sending a modificatin event to the user
            </summary>
            <param name="item">Object to add as an item</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.InitializeStandardStatusColors">
            <summary>
            Setup standard status colors
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UpdateStatusColor">
            <summary>
            Updates the Background color using the current widget status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.RegisterItemStyle(System.Type,System.Windows.Style)">
            <summary>
            Registers a style to be used for a specific item type
            </summary>
            <param name="type">The type of the item to style</param>
            <param name="style">The style to use</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.UnregisterItemStyle(System.Type)">
            <summary>
            Unregisters a style
            </summary>
            <param name="type">Type of the item which style is to be unregistered</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.PerformFiltering">
            <summary>
            Performs a filtering request.
            The actual filtering operation depends on other properties
            configuration (such as FilteringEnabled, MinimumTextLenghtFilterTrigger)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ForceImmediateFiltering">
            <summary>
            Force a filtering operation, regardless the other configurations of the widget
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FocusTextBox(System.Boolean)">
            <summary>
            Set the focus on the textbox part of the control
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.FocusTextBox">
            <summary>
            Set the focus on the textbox part of the control
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.RedefineStatusBrush(Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxStatus,System.Windows.Media.Brush)">
            <summary>
            Used to redefine standard status coloring.
            Since the "standard status" shouldn't be changed, please consider
            using the CustomStatusBrush and set the Status of the control to "Custom"
            instead of redefining these states.
            </summary>
            <param name="status">The status to redefine</param>
            <param name="brush">The brush to be used for the status</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.RemoveItemFromNavigator(System.Object)">
            <summary>
            Removes from the ItemsNavigator the item related to a given object
            </summary>
            <param name="obj"></param>
            <returns>True if the item containing the object has been found and removed, false otherwise</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.AddItemToNavigator(System.Object,System.Boolean)">
            <summary>
            Adds an item to the ItemsNavigator
            </summary>
            <param name="item">The object to add to the items navigator</param>
            <param name="verifyItem">Verifies that the object being added belongs to the IonAutoCompleteBox collection (default = false)</param>
            <returns>True if the item has bene added, false otherwise</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.GetItemsNavigatorCollection">
            <summary>
            Returns the items contained in the ItemsNavigator
            </summary>
            <returns>A list of object</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.TextSelectAll">
            <summary>
            Selects all the contents of the text editing control.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilterOnCaptionProperty">
            <summary>
            Identifies the ACBItemFilterOnCaption dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilterOnCaption">
            <summary>
            ACBItemFilterOnCaption backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilterOnPrimaryTextProperty">
            <summary>
            Identifies the ACBItemFilterOnPrimaryText dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilterOnPrimaryText">
            <summary>
            ACBItemFilterOnPrimaryText backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilterOnKeyProperty">
            <summary>
            Identifies the ACBItemFilterOnKey dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilterOnKey">
            <summary>
            ACBItemFilterOnKey backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilterOnIsEnabledProperty">
            <summary>
            Identifies the ACBItemFilterOnIsEnabled dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilterOnIsEnabled">
            <summary>
            ACBItemFilterOnIsEnabled backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilterOnToStringProperty">
            <summary>
            Identifies the ACBItemFilterOnToString dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilterOnToString">
            <summary>
            ACBItemFilterOnToString backing field
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemFilter(System.String,Ion.Core.Toolkit.Controls.AutoComplete.IAutoCompleteBoxItem,Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxFilterPredicate{System.String})">
            <summary>
            Filters an IAutoCompleteBoxItem
            </summary>
            <param name="filterText">The text to be used as filter</param>
            <param name="item">Item to filter</param>
            <param name="predicate">The filter predicate</param>
            <returns>TRUE if the item has to be kept, FALSE otherwise</returns>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.ACBItemCustomFilter">
            <summary>
            The standard filter to be used to filter the IAutoCompleteBoxItem
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.DisplayMemberPathProperty">
            <summary>
            Identifies the DisplayMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.DisplayMemberPath">
            <summary>
            DisplayMemberPath backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBox.IsDisposed">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.IonAutoCompleteBoxStatus">
            <summary>
            The current logical status of an IonAutoCompleteBox
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.ItemSelectedEventHandler">
            <summary>
            Handler for AutoCompleteCombobox ItemSelected events
            </summary>
            <param name="sender">Sender</param>
            <param name="args">Arguments</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.ItemSelectedEventArgs">
            <summary>
            ItemSelectedEventArgs
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ItemSelectedEventArgs.IsFromUI">
            <summary>
            True if the item was selected due to a UI activity (mouse or keyboard), false otherwise
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ItemSelectedEventArgs.SelectedItem">
            <summary>
            The newly selected item
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.ListBoxEx">
            <summary>
            Extended ListBox - permits the customization of its items
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoComplete.ListBoxEx.ItemsOrientationProperty">
            <summary>
            Identifies the ItemsOrientation dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoComplete.ListBoxEx.ItemsOrientation">
            <summary>
            ItemsOrientation backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.ListBoxEventHandler">
            <summary>
            Event handler for ListBox
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The arguments.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.ListBoxExEventArgs">
            <summary>
            ListBoxEx event eventArgs
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.NavigatorItem">
            <summary>
            NavigatorItem: it is the 
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoComplete.StringFilter">
            <summary>
            Standard string filtering
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.PartButton">
            <summary>
            Stores the public name of the split element.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase._splitElement">
            <summary>
            Stores a reference to the split element.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase._buttonElement">
            <summary>
            Stores a reference to the button element.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase._contextMenu">
            <summary>
            Stores a reference to the ContextMenu.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase._itemsSource">
            <summary>
            Stores the ItemsSource collection.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase._contextMenuInitialOffset">
            <summary>
            Stores the initial location of the ContextMenu.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase._logicalChild">
            <summary>
            Stores a reference to the ancestor of the ContextMenu added as a logical child.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.#ctor">
            <summary>
            Initializes a new instance of the IonContextMenuButtonBase class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.ContextMenuPopupSideProperty">
            <summary>
            Identifies the ContextMenuPopupSide dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.ContextMenuPopupSide">
            <summary>
            ContextMenuPopupSide backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.ItemsProperty">
            <summary>
            Identifies the Items dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.Items">
            <summary>
            Items backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.ItemsSource">
            <summary>
            ItemsSource backing field
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.HandleButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the Button is clicked.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.HandleButtonMouseRightButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the Button is right-clicked.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.HandleContextMenuClosed(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the ContextMenu is closed.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.HandleContextMenuOpened(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the ContextMenu is opened.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.HandleItemsSourceCollectionChanegd(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Event occurring then the ItemsSource collection changes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.HandleSplitButtonLayoutUpdated(System.Object,System.EventArgs)">
            <summary>
            Called when the ContextMenu is open and layout is updated.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.HandleSplitElementMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse goes over the split element.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.HandleSplitElementMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse goes off the split element.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.IsMouseOverSplitElement">
            <summary>
            Gets or sets a value indicating whether the mouse is over the split element.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.OpenButtonMenu">
            <summary>
            Opens the button menu.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.CopyItemsSourceToItems(System.Collections.IEnumerable)">
            <summary>
            Copies the the provided collection to the Items one.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.ListenToItemsSourceCollectionChanged(System.Boolean)">
            <summary>
            Subscribes/unsubscribes the CollectionChanged event from the _itemSource field.
            </summary>
            <param name="subscribe"></param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.UnhookHandlers">
            <summary>
            Unhook existing handlers.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.UpdateContextMenuOffsets">
            <summary>
            Updates the ContextMenu's Horizontal/VerticalOffset properties to keep it under the SplitButton.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContextMenuButtonBase.IsDisposed">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonMenuButton">
            <summary>
            Implements a "menu button" for Silverlight and WPF.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonMenuButton.#ctor">
            <summary>
            Initializes a new instance of the MenuButton class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonMenuButton.OnClick">
            <summary>
            Called when the button is clicked.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonSplitButton">
            <summary>
            Implements a "split button" for Silverlight and WPF.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonSplitButton.#ctor">
            <summary>
            Initializes a new instance of the SplitButton class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonSplitButton.OnClick">
            <summary>
            Called when the Button is clicked.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonComponentIconMode.StatusBar">
            <summary>
            Triggers the visualization in Market Status Bar mode
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonComponentIconMode.PlatformView">
            <summary>
            Triggers the visualization in System Administrator platform mode
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonComponentIcon.DarkerColorProperty">
            <summary>
            Identifies the BorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonComponentIcon.DarkerColor">
            <summary>
            BorderBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonComponentIcon.LighterColorProperty">
            <summary>
            Identifies the BorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonComponentIcon.LighterColor">
            <summary>
            BorderBrush backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.FittingGrid">
            <summary>
            Implements a scrollviewer that always fits into the screen (RootVisual)
            </summary>
            <summary>
            Implements a scrollviewer that always fits into the screen (RootVisual)
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.FontResource.Family">
            <summary>
            Font family
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.FontResource.CharEncode">
            <summary>
            Character encoding
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Icon.IconLibraryBrowser">
            <summary>
            For icon browsing purpose ONLY!!!
            </summary>
            <summary>
            IconLibraryBrowser
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconLibraryBrowser.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Icon.IconLibraryBrowserVM">
            <summary>
            For icon browsing purpose ONLY!!!
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconLibraryBrowserVM.InsertSorted``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IComparer{``0})">
            <summary>
            Inserts specified element in a sorted list 
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconLibraryBrowserVM.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IComparer{``0})">
            <summary>
            binary search implementation, must work exactly like corresponding List.BinarySearch method
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconManager.GetFont(System.String,System.String)">
            <summary>
            Returns the FontFamily for the specified resource
            </summary>
            <param name="key">The resource to load</param>
            <param name="library">The dictionary containing the resource (optional)</param>
            <returns>The FontFamily with the information of the icon</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconManager.GetItems">
            <summary>
            Returns a list of descriptors for all the icons contained in the libraries
            </summary>
            <returns>List of descriptors</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconManager.RegisterCustomFontResources(System.String,System.Windows.Media.FontFamily,System.Reflection.Assembly,System.String)">
            <summary>
            Register custom font
            </summary>
            <param name="fontKey">Font key name</param>
            <param name="family">Font Family</param>
            <param name="assembly">Font Assembly source</param>
            <param name="fontUri">Json font uri</param>
            <returns>Function result</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconManager.GetPath(System.String,System.String)">
            <summary>
            Returns the PathDefinition for the specified resource
            </summary>
            <param name="resourceKey">The resource to load</param>
            <param name="dictionaryName">The dictionary containing the resource (optional)</param>
            <returns>The PathDefinition with the information of the icon (Path, UseStroke, UseFill, ...)</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconManager.RegisterCustomResources(System.Windows.ResourceDictionary)">
            <summary>
            Merge a resoures custom dictionary with resources compatible with the IonIcon object
            (strings that are Data usable to create Paths)
            </summary>
            <param name="dictionary">The dictionary to register</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconManager.RegisterCustomResources(System.Windows.ResourceDictionary,System.String)">
            <summary>
            Merge a resoures custom dictionary with resources compatible with the IonIcon object
            (strings that are Data usable to create Paths)
            </summary>
            <param name="dictionary">The dictionary to register</param>
            <param name="dictionaryName">The resourceKey of the dictionary</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconManager.RegisterCustomResources(System.Windows.ResourceDictionary,System.String,System.Boolean)">
            <summary>
            Merge a resoures custom dictionary with resources compatible with the IonIcon object
            (strings that are Data usable to create Paths)
            </summary>
            <param name="dictionary">The dictionary to register</param>
            <param name="dictionaryName">The resourceKey of the dictionary (optional)</param>
            <param name="showIcons">True if the icons of this library should be returned in an Icon Browser tool, false otherwise</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconManager.GetResourceNames(System.String)">
            <summary>
            Collects all the names of the resources of a given resource dictionary
            </summary>
            <param name="library">The library name</param>
            <returns>A list of resource names</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconManager.GetLibraries">
            <summary>
            Returns the list of available icon libraries
            </summary>
            <returns>A list of dictionary names</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Icon.IconManagerEventArgs">
            <summary>
            For Icon Browsing purpose ONLY!
            Do not use!
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Icon.IconManagerItemDescriptor">
            <summary>
            Describes an IconManager item
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IconManagerItemDescriptor._library">
            <summary>
            Name of the library
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Icon.IconsBrowser">
            <summary>
            For icon browsing purpose ONLY!!!
            </summary>
            <summary>
            IconsBrowser
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconsBrowser.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.PrivateIconHeightProperty">
            <summary>
            Identifies the PrivateIconHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.PrivateIconHeight">
            <summary>
            PrivateIconHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.PrivateIconWidthProperty">
            <summary>
            Identifies the PrivateIconWidth dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.PrivateIconWidth">
            <summary>
            PrivateIconWidth backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.PrivateOverlayHeightProperty">
            <summary>
            Identifies the PrivateOverlayHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.PrivateOverlayHeight">
            <summary>
            PrivateOverlayHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.PrivateOverlayWidthProperty">
            <summary>
            Identifies the PrivateOverlayWidth dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.PrivateOverlayWidth">
            <summary>
            PrivateOverlayWidth backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.UseThemesProperty">
            <summary>
            Identifies the UseThemes dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.UseThemes">
            <summary>
            UseThemes backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconKeyProperty">
            <summary>
            Identifies the IconKey dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconKey">
            <summary>
            The IconKey used to load the desired path from the known icon libraries
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.CommandProperty">
            <summary>
            Identifies the Command dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.Command">
            <summary>
            An optional command to invoke when the icon is clicked
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.FillProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.Fill">
            <summary>
            Fill proprty of the IonIcon
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.Stroke">
            <summary>
            Stroke property of the IonIcon
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.StrokeThickness">
            <summary>
            StrokeThickness backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.StretchProperty">
            <summary>
            Identifies the Stretch dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.Stretch">
            <summary>
            The IonIcon stretch mode
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.TypeProperty">
            <summary>
            Identifies the Type dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.Type">
            <summary>
            The icon type to use
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.IonIconTypeProperty">
            <summary>
            Identifies the IonIconType dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.IonIconType">
            <summary>
            IonIconType backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconLibraryProperty">
            <summary>
            Identifies the IconLibrary dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconLibrary">
            <summary>
            The specific IconLibrary to use to load the icon, using IconKey
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.BorderPaddingProperty">
            <summary>
            Identifies the BorderPadding dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.BorderPadding">
            <summary>
            The padding to use between the icon and its border
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.BorderMarginProperty">
            <summary>
            Identifies the BorderMargin dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.BorderMargin">
            <summary>
            BorderMargin backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.BorderCornerRadiusProperty">
            <summary>
            Identifies the BorderCornerRadius dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.BorderCornerRadius">
            <summary>
            The corner radius of the icon border
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconHorizontalAlignmentProperty">
            <summary>
            Identifies the IconHorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconHorizontalAlignment">
            <summary>
            IconHorizontalAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconVerticalAlignmentProperty">
            <summary>
            Identifies the IconVerticalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconVerticalAlignment">
            <summary>
            IconVerticalAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconRatioProperty">
            <summary>
            Identifies the IconRatio dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconRatio">
            <summary>
            IconRatio backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.RotateOnRenderProperty">
            <summary>
            Identifies the RotateOnRender dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.RotateOnRender">
            <summary>
            RotateOnRender backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.RotateDegreesProperty">
            <summary>
            Identifies the RotateDegrees dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.RotateDegrees">
            <summary>
            RotateDegrees backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.IsEnabledByCommandProperty">
            <summary>
            Identifies the IsEnabledByCommand dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.IsEnabledByCommand">
            <summary>
            IsEnabledByCommand backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayFillProperty">
            <summary>
            Identifies the OverlayFill dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayFill">
            <summary>
            OverlayFill backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayStrokeProperty">
            <summary>
            Identifies the OverlayStroke dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayStroke">
            <summary>
            OverlayStroke backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayStrokeThicknessProperty">
            <summary>
            Identifies the OverlayStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayStrokeThickness">
            <summary>
            OverlayStrokeThickness backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayStretchProperty">
            <summary>
            Identifies the OverlayStretch dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayStretch">
            <summary>
            OverlayStretch backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayTypeProperty">
            <summary>
            Identifies the OverlayType dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayType">
            <summary>
            OverlayType backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayIconKeyProperty">
            <summary>
            Identifies the OverlayIconKey dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayIconKey">
            <summary>
            OverlayIconKey backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayIconLibraryProperty">
            <summary>
            Identifies the OverlayIconLibrary dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayIconLibrary">
            <summary>
            OverlayIconLibrary backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayMarginProperty">
            <summary>
            Identifies the OverlayMargin dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayMargin">
            <summary>
            OverlayMargin backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayBackgroundProperty">
            <summary>
            Identifies the OverlayBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayBackground">
            <summary>
            OverlayBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayHorizontalAlignmentProperty">
            <summary>
            Identifies the OverlayHorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayHorizontalAlignment">
            <summary>
            OverlayHorizontalAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayVerticalAlignmentProperty">
            <summary>
            Identifies the OverlayVerticalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayVerticalAlignment">
            <summary>
            OverlayVerticalAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayRatioProperty">
            <summary>
            Identifies the OverlayRatio dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayRatio">
            <summary>
            OverlayRatio backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayRotateAngleProperty">
            <summary>
            Identifies the OverlayRotateAngle dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayRotateAngle">
            <summary>
            OverlayRotateAngle backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayIsVisibleProperty">
            <summary>
            Identifies the OverlayIsVisible dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.OverlayIsVisible">
            <summary>
            OverlayIsVisible backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.AutomaticHighlightProperty">
            <summary>
            Identifies the AutomaticHighlight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.AutomaticHighlight">
            <summary>
            AutomaticHighlight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.IconSourceProperty">
            <summary>
            Identifies the IconSource dependency property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.MouseOverBrushProperty">
            <summary>
            Identifies the MouseOverBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.MouseOverBrush">
            <summary>
            MouseOverBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.MouseDownBrushProperty">
            <summary>
            Identifies the MouseDownBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.MouseDownBrush">
            <summary>
            MouseDownBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.MouseOverStrokeProperty">
            <summary>
            Identifies the MouseOverStroke dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.MouseOverStroke">
            <summary>
            MouseOverStroke backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIcon.MouseDownStrokeProperty">
            <summary>
            Identifies the MouseDownStroke dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIcon.MouseDownStroke">
            <summary>
            MouseDownStroke backing field
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IonIcon.Clone">
            <summary>
            Clones the IonIcon
            </summary>
            <returns>A copy of this IonIcon</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IonIcon.CloneFrom(Ion.Core.Toolkit.Controls.Icon.IonIcon)">
            <summary>
            Copies in this icon all the properties of the given icon
            </summary>
            <param name="icon">Icon to clone</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IonIconMemControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Icon.IonIconSource">
            <summary>
            Provides an object source type for <see cref="T:Ion.Core.Toolkit.Controls.Icon.IonIcon" />.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.Background">
            <summary>
            Background backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.BorderBrushProperty">
            <summary>
            Identifies the BorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.BorderBrush">
            <summary>
            BorderBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.BorderThicknessProperty">
            <summary>
            Identifies the BorderThickness dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.BorderThickness">
            <summary>
            BorderThickness backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.RotateDegreesProperty">
            <summary>
            Identifies the RotateDegrees dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.RotateDegrees">
            <summary>
            The rotation angle in degress of the main icon
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IconKeyProperty">
            <summary>
            Identifies the IconKey dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IconKey">
            <summary>
            The IconKey used to load the desired path from the known icon libraries, if <see cref="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IconType" /> is <see cref="F:Ion.Core.Toolkit.Controls.Icon.IconType.Null" />.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IconLibraryProperty">
            <summary>
            Identifies the IconLibrary dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IconLibrary">
            <summary>
            The specific Icon Library name to use to load the icon specified by <see cref="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IconKey" />.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IconTypeProperty">
            <summary>
            Identifies the IconType dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IconType">
            <summary>
            The icon type to use (by default is <see cref="F:Ion.Core.Toolkit.Controls.Icon.IconType.Null" />), it will override the <see cref="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IconKey" />.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IonIconTypeProperty">
            <summary>
            Identifies the IonIconType dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IonIconType">
            <summary>
            The ion icon type to use (by default is <see cref="F:Ion.Core.Toolkit.Controls.Icon.IonIconType.Null" />), it will override the <see cref="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.IconType" />.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.FillProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.Fill">
            <summary>
            The brush to fill the icon region
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.Stroke">
            <summary>
            The brush to stroke the icon path
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.StretchProperty">
            <summary>
            Identifies the Stretch dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.Stretch">
            <summary>
            The icon stretch mode
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.BorderPaddingProperty">
            <summary>
            Identifies the BorderPadding dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.BorderPadding">
            <summary>
            The padding to use between the icon and its border
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.BorderCornerRadiusProperty">
            <summary>
            Identifies the BorderCornerRadius dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.BorderCornerRadius">
            <summary>
            The corner radius of the icon border
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayTypeProperty">
            <summary>
            Identifies the OverlayType dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayType">
            <summary>
            The icon type to use for the overlay icon (by default is <see cref="F:Ion.Core.Toolkit.Controls.Icon.IconType.Null" />), it will override the <see cref="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayIconKey" />.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayIconKeyProperty">
            <summary>
            Identifies the OverlayIconKey dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayIconKey">
            <summary>
            The icon key used to load the desired path of the overlay icon from the known icon libraries, if <see cref="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayType" /> is <see cref="F:Ion.Core.Toolkit.Controls.Icon.IconType.Null" />.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayIconLibraryProperty">
            <summary>
            Identifies the OverlayIconLibrary dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayIconLibrary">
            <summary>
            The specific Icon Library name to use to load the overlay icon specified by <see cref="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayIconKey" />.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayFillProperty">
            <summary>
            Identifies the OverlayFill dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayFill">
            <summary>
            The brush to fill the overlay icon region
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayBackgroundProperty">
            <summary>
            Identifies the OverlayBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayBackground">
            <summary>
            The brush to fill the overlay background
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayRatioProperty">
            <summary>
            Identifies the OverlayRatio dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayRatio">
            <summary>
            OverlayRatio backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayHorizontalAlignmentProperty">
            <summary>
            Identifies the OverlayHorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayHorizontalAlignment">
            <summary>
            The horizontal alignment of the overlay icon
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayVerticalAlignmentProperty">
            <summary>
            Identifies the OverlayVerticalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayVerticalAlignment">
            <summary>
            The vertical alignment of the overlay icon
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayMarginProperty">
            <summary>
            Identifies the OverlayMargin dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayMargin">
            <summary>
            The margin for the overlay icon
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayRotateDegreesProperty">
            <summary>
            Identifies the OverlayRotateDegrees dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayRotateDegrees">
            <summary>
            The rotation angle of the overlay icon, in degrees
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayVisibilityProperty">
            <summary>
            Identifies the OverlayVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayVisibility">
            <summary>
            The visibility of the overlay icon (default: Collapsed)
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.StrokeThickness">
            <summary>
            StrokeThickness backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayStrokeThicknessProperty">
            <summary>
            Identifies the OverlayStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.IonIconSource.OverlayStrokeThickness">
            <summary>
            OverlayStrokeThickness backing field
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Icon.IconTypeExt.GetIconProperties(Ion.Core.Toolkit.Controls.Icon.IonIconType)">
            <summary>
            Returns the icon properties, given an IonIconType
            </summary>
            <param name="type">The ionIconType to resolve</param>
            <returns>A Tuple with libraryName, iconName and rotate degrees</returns>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.PathDefinition.Path">
            <summary>
            The Path
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.PathDefinition.OriginalData">
            <summary>
            The Data string of the Path
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.PathDefinition.UseStroke">
            <summary>
            True if the Stroke property of this Path should be used, false otherwise
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.PathDefinition.UseFill">
            <summary>
            True if the Fill property of this Path should be set, false otherwise
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.PathDefinition.Key">
            <summary>
            The name of the resource
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.PathDefinition.UserStrokeFillDefinition">
            <summary>
            User definition of use Stroke and use Fill
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Icon.PathDefinition.Canvas">
            <summary>
            The Canvas
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonBackgroundBorder.BaseBackgroundProperty">
            <summary>
            Identifies the BaseBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonBackgroundBorder.BaseBackground">
            <summary>
            BaseBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonBackgroundBorder.ReferralForegroundProperty">
            <summary>
            Identifies the ReferralForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonBackgroundBorder.ReferralForeground">
            <summary>
            ReferralForeground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonBackgroundBorder.ReferralBackgroundProperty">
            <summary>
            Identifies the ReferralBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonBackgroundBorder.ReferralBackground">
            <summary>
            ReferralBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonBackgroundBorder.UserBackgroundMouseOverProperty">
            <summary>
            Identifies the UserBackgroundMouseOver dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonBackgroundBorder.UserBackgroundMouseOver">
            <summary>
            UserBackgroundMouseOver backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonBackgroundBorder.UserBackgroundMousePressedProperty">
            <summary>
            Identifies the UserBackgroundMousePressed dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonBackgroundBorder.UserBackgroundMousePressed">
            <summary>
            UserBackgroundMousePressed backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonBackgroundBorder.StateProperty">
            <summary>
            Identifies the State dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonBackgroundBorder.State">
            <summary>
            State backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControlDebugController.DebugModeProperty">
            <summary>
            Identifies the DebugMode dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControlDebugController.DebugMode">
            <summary>
            DebugMode backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonContentControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonContentControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControl.CaptionProperty">
            <summary>
            Identifies the Caption dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControl.Caption">
            <summary>
            Caption backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControl.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControl.Orientation">
            <summary>
            Orientation backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControl.CaptionGroupProperty">
            <summary>
            Identifies the CaptionGroup dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControl.CaptionGroup">
            <summary>
            CaptionGroup backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControl.IsDebugModeProperty">
            <summary>
            Identifies the IsDebugMode dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControl.IsDebugMode">
            <summary>
            IsDebugMode backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControl.TopSpaceVisibilityProperty">
            <summary>
            Identifies the TopSpaceVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControl.TopSpaceVisibility">
            <summary>
            TopSpaceVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControl.BottomSpaceVisibilityProperty">
            <summary>
            Identifies the BottomSpaceVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControl.BottomSpaceVisibility">
            <summary>
            BottomSpaceVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControl.LeftSpaceVisibilityProperty">
            <summary>
            Identifies the LeftSpaceVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControl.LeftSpaceVisibility">
            <summary>
            LeftSpaceVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControl.RightSpaceVisibilityProperty">
            <summary>
            Identifies the RightSpaceVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControl.RightSpaceVisibility">
            <summary>
            RightSpaceVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControl.CaptionHorizontalAlignmentProperty">
            <summary>
            Identifies the CaptionHorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControl.CaptionHorizontalAlignment">
            <summary>
            CaptionHorizontalAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonContentControl.CaptionVerticalAlignmentProperty">
            <summary>
            Identifies the CaptionVerticalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonContentControl.CaptionVerticalAlignment">
            <summary>
            CaptionVerticalAlignment backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonDataGrid">
            <exclude />
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButton">
            <summary>
            Special rendering of <see cref="T:System.Windows.Controls.DataGridTextColumn" /> with explicit button to enter in edit
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButton.TooltipSourceElementProperty">
            <summary>
            Identifies the TooltipSourceElement dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButton.TooltipSourceElement">
            <summary>
            TooltipSourceElement backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButton.FontWeightBinding">
            <summary>
            Overrides FontWeight with an item binding
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButton.FontStyleBinding">
            <summary>
            Overrides FontStyle with an item binding
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButtonElement">
            <summary>
            Not for direct usage
            </summary>
            <exclude />
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButtonElement.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButtonElement.Text">
            <summary>
            Text backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButtonElement.CanEditProperty">
            <summary>
            Identifies the CanEdit dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButtonElement.CanEdit">
            <summary>
            CanEdit backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonDropDownPupupHandler">
            <summary>
            Delegate for popup events
            </summary>
            <param name="sender">Sender</param>
            <param name="args">Args</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonDropDownPupupEventArgs">
            <summary>
            ION Popup event properties
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonDropDownPupupEventArgs.Popup">
            <summary>
            The ION Popup
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonDropDownPupupEventArgs.Handle">
            <summary>
            The popup handle (can be 0)
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonDropDownPopup">
            <summary>
            Extended Popup
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonDropDownPopup.PopupOpened">
            <summary>
            Popup open event
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonDropDownPopup.PopupClosed">
            <summary>
            Popup close event
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonDropDownPopup.Id">
            <summary>
            Popup unique id
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonDropDownPopup.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonIconToggleButton.UncheckedIconKeyProperty">
            <summary>
            Identifies the UncheckedIconKey dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonIconToggleButton.UncheckedIconKey">
            <summary>
            UncheckedIconKey backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonIconToggleButton.CheckedIconKeyProperty">
            <summary>
            Identifies the CheckedIconKey dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonIconToggleButton.CheckedIconKey">
            <summary>
            CheckedIconKey backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonIconToggleButton.RotateIconAngleProperty">
            <summary>
            Identifies the RotateIconAngle dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonIconToggleButton.RotateIconAngle">
            <summary>
            RotateIconAngle backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonIconToggleButton.IconWidthProperty">
            <summary>
            Identifies the IconWidth dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonIconToggleButton.IconWidth">
            <summary>
            IconWidth backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonIconToggleButton.IconHeightProperty">
            <summary>
            Identifies the IconHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonIconToggleButton.IconHeight">
            <summary>
            IconHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonIconToggleButton.IconTypeProperty">
            <summary>
            Identifies the IconType dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonIconToggleButton.IconType">
            <summary>
            IconType backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonIconToggleButton.UncheckedIconTypeProperty">
            <summary>
            Identifies the UncheckedIconType dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonIconToggleButton.UncheckedIconType">
            <summary>
            UncheckedIconType backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonIconToggleButton.CheckedIconTypeProperty">
            <summary>
            Identifies the CheckedIconType dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonIconToggleButton.CheckedIconType">
            <summary>
            CheckedIconType backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonIconButton.HorizontalTextAlignmentProperty">
            <summary>
            Identifies the HorizontalTextAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonIconButton.HorizontalTextAlignment">
            <summary>
            HorizontalTextAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonIconButton.TextMarginProperty">
            <summary>
            Identifies the TextMargin dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonIconButton.TextMargin">
            <summary>
            TextMargin backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.ButtonSpinnerLayout">
            <summary>
            Spinner layouting on an IonNumericUpDown widget
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ButtonSpinnerLayout.ButtonsOnTheLeft">
            <summary>
            Both buttons are on the left
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ButtonSpinnerLayout.ButtonsOnTheRight">
            <summary>
            Both buttons are on the right
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ButtonSpinnerLayout.ButtonsWrapHorizontal">
            <summary>
            Buttons are splitted horizontally
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ButtonSpinnerLayout.ButtonsWrapVertical">
            <summary>
            Buttons are splitted vertically
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.InputAppliedEventArgs">
            <summary>
            describe the reason for which the value typed by the user has been applied
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.InputAppliedEventArgs.Reason">
            <summary>
            describe the reason for which the value typed by the user has been applied
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.InputAppliedReason">
            <summary>
            describe the reason for which the text typed by the user has been applied
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.InputAppliedReason.KeyDown">
            <summary>
            the user pressed enter
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.InputAppliedReason.FocusLost">
            <summary>
            the focus has been lost
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.InputAppliedReason.Custom">
            <summary>
            the input is applied as per custom logic.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonButtonSpinner">
            <exclude />
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.BorderModeProperty">
            <summary>
            Identifies the BorderMode dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.BorderMode">
            <summary>
            BorderMode backing field
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonButtonSpinner.OnValidSpinDirectionChanged(System.Windows.Controls.ValidSpinDirections,System.Windows.Controls.ValidSpinDirections)">
            <summary>
            Called when valid spin direction changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonSeparatorProperty">
            <summary>
            Identifies the ButtonSeparator dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonSeparator">
            <summary>
            ButtonSeparator backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.SpinnerVisibleProperty">
            <summary>
            Identifies the SpinnerVisible dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.SpinnerVisible">
            <summary>
            SpinnerVisible backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.SpinnerLayout">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.SpinnerLayoutProperty">
            <summary>
            SpinnerLayout Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonMinWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonMinWidthProperty">
            <summary>
            ButtonMinWidth Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonMinHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonMinHeightProperty">
            <summary>
            ButtonMinHeight Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonMaxHeightProperty">
            <summary>
            Identifies the ButtonMaxHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonMaxHeight">
            <summary>
            ButtonMaxHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonMaxWidthProperty">
            <summary>
            Identifies the ButtonMaxWidth dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonMaxWidth">
            <summary>
            ButtonMaxWidth backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonSizeProperty">
            <summary>
            Identifies the ButtonWidth dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonSize">
            <summary>
            The size of the spin buttons.
            "0" hides the buttons
            A negative or a null value resets the size to the default one
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.SquaredButtonsProperty">
            <summary>
            Identifies the SquaredButtons dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.SquaredButtons">
            <summary>
            SquaredButtons backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ArrowsBrushProperty">
            <summary>
            Identifies the ArrowsBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ArrowsBrush">
            <summary>
            ArrowsBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.IconKeyDownProperty">
            <summary>
            Identifies the IconKeyDown dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.IconKeyDown">
            <summary>
            IconKeyDown backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner._resolvedIconKeyUpProperty">
            <summary>
            Identifies the _resolvedIconKeyUp dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner._resolvedIconKeyUp">
            <summary>
            _resolvedIconKeyUp backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner._resolvedIconKeyDownProperty">
            <summary>
            Identifies the _resolvedIconKeyDown dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner._resolvedIconKeyDown">
            <summary>
            _resolvedIconKeyDown backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.KeysShapeProperty">
            <summary>
            Identifies the KeysShape dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.KeysShape">
            <summary>
            KeysShape backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.SpinnerBorderVisibleProperty">
            <summary>
            Identifies the SpinnerVisible dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.SpinnerBorderVisible">
            <summary>
            SpinnerVisible backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.DisableSpinnerProperty">
            <summary>
            Identifies the DisableSpinner dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.DisableSpinner">
            <summary>
            DisableSpinner backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.SpinnerButtonsScaleFactorProperty">
            <summary>
            Identifies the SpinnerButtonsScaleFactor dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.SpinnerButtonsScaleFactor">
            <summary>
            SpinnerButtonsScaleFactor backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonBackgroundMouseOverBrushProperty">
            <summary>
            Identifies the ButtonBackgroundMouseOverBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonBackgroundMouseOverBrush">
            <summary>
            ButtonBackgroundMouseOverBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonForegroundMouseOverBrushProperty">
            <summary>
            Identifies the ButtonForegroundMouseOverBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonForegroundMouseOverBrush">
            <summary>
            ButtonForegroundMouseOverBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonBackgroundMousePressedBrushProperty">
            <summary>
            Identifies the ButtonBackgroundMousePressedBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonBackgroundMousePressedBrush">
            <summary>
            ButtonBackgroundMousePressedBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonForegroundMousePressedBrushProperty">
            <summary>
            Identifies the ButtonForegroundMousePressedBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonForegroundMousePressedBrush">
            <summary>
            ButtonForegroundMousePressedBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonColorProperty">
            <summary>
            Identifies the ButtonColor dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonColor">
            <summary>
            ButtonColor backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonBorderBrushProperty">
            <summary>
            Identifies the ButtonBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonBorderBrush">
            <summary>
            ButtonBorderBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonBorderThicknessProperty">
            <summary>
            Identifies the ButtonBorderThickness dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinner.ButtonBorderThickness">
            <summary>
            ButtonBorderThickness backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.MouseOverForegroundProperty">
            <summary>
            Identifies the MouseOverForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.MouseOverForeground">
            <summary>
            MouseOverForeground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.MouseOverBackgroundProperty">
            <summary>
            Identifies the MouseOverBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.MouseOverBackground">
            <summary>
            MouseOverBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.MousePressedForegroundProperty">
            <summary>
            Identifies the MousePressedForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.MousePressedForeground">
            <summary>
            MousePressedForeground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.MousePressedBackgroundProperty">
            <summary>
            Identifies the MousePressedBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.MousePressedBackground">
            <summary>
            MousePressedBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.SpinnerBorderVisibilityProperty">
            <summary>
            Identifies the SpinnerBorderVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.SpinnerBorderVisibility">
            <summary>
            SpinnerBorderVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.IconKeyProperty">
            <summary>
            Identifies the IconKey dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.IconKey">
            <summary>
            IconKey backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.ScaleFactorProperty">
            <summary>
            Identifies the ScaleFactor dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonButtonSpinnerRepeatButton.ScaleFactor">
            <summary>
            ScaleFactor backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.SpinSource">
            <summary>
            Source of a spin (up/down) operation
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.SpinSource.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.SpinSource.KeyboardArrows">
            <summary>
            Keyboard
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.SpinSource.SpinnerButtons">
            <summary>
            Spinner up/down buttons
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.SpinSource.MouseWheel">
            <summary>
            Mouse wheel
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.SpinSource.ToolbarButton">
            <summary>
            Toolbar button
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonNumericUpDownCancelEventArgs">
            <summary>
            IonNUD Cancellable event argument
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDownCancelEventArgs.Value">
            <summary>
            <para>The value used to increment (or decrement) the Numeric UpDown value</para>
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDownCancelEventArgs.Source">
            <summary>
            Operation source
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDownCancelEventArgs.ToolbarButton">
            <summary>
            <para>Optional ToolbarButton in case the event is related to a Toolbar source</para>
            <para>(Can be null)</para>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDownTextBox.BorderVisibilityProperty">
            <summary>
            Identifies the BorderVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDownTextBox.BorderVisibility">
            <summary>
            BorderVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDownTextBox.TextMarginProperty">
            <summary>
            Identifies the TextMargin dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDownTextBox.TextMargin">
            <summary>
            TextMargin backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDownTextBox.EnablePersistentFocusProperty">
            <summary>
            Identifies the EnablePersistentFocus dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDownTextBox.EnablePersistentFocus">
            <summary>
            EnablePersistentFocus backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ToolButtonCollectionProperty">
            <summary>
            Identifies the ToolButtonCollection dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ToolButtonCollection">
            <summary>
            ToolButtonCollection backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ColumnsProperty">
            <summary>
            Identifies the Columns dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.Columns">
            <summary>
            Columns backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.RowsProperty">
            <summary>
            Identifies the Rows dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.Rows">
            <summary>
            Rows backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ToolBarHeightProperty">
            <summary>
            Identifies the ToolBarHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ToolBarHeight">
            <summary>
            ToolBarHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ArrowBrushProperty">
            <summary>
            Identifies the ArrowBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ArrowBrush">
            <summary>
            ArrowBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ButtonsForegroundProperty">
            <summary>
            Identifies the ToolBarButtonForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ButtonsForeground">
            <summary>
            ToolBarButtonForeground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.SelectedButtonProperty">
            <summary>
            Identifies the ArrowBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.SelectedButton">
            <summary>
            ArrowBrush backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.SpinnerLayout">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.SpinnerLayoutProperty">
            <summary>
            SpinnerLayout Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ItemTemplateProperty">
            <summary>
            Identifies the ItemTemplate dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ItemTemplate">
            <summary>
            ItemTemplate backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.CmdButtonClickProperty">
            <summary>
            Identifies the CmdButtonClick dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.CmdButtonClick">
            <summary>
            CmdButtonClick backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.CmdToggleButtonClickProperty">
            <summary>
            Identifies the CmdToggleButtonClick dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.CmdToggleButtonClick">
            <summary>
            CmdToggleButtonClick backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.CmdTickProperty">
            <summary>
            Identifies the CmdTick dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.CmdTick">
            <summary>
            CmdTick backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ToolBarLayoutProperty">
            <summary>
            Identifies the ToolBarLayout dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ToolBarLayout">
            <summary>
            ToolBarLayout backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ToolbarButtonsBorderBrushProperty">
            <summary>
            Identifies the ToolbarButtonsBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumUpDownToolbar.ToolbarButtonsBorderBrush">
            <summary>
            ToolbarButtonsBorderBrush backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.ToolBarButton">
            <summary>
            A butotn used by the IonNumericupDown for its toolbars
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ToolBarButton.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.ToolBarButton.Value">
            <summary>
            The value associated with this button
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ToolBarButton.TextToDisplayProperty">
            <summary>
            Identifies the TextToDisplay dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.ToolBarButton.TextToDisplay">
            <summary>
            Text to display in the button
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ToolBarButton.IsToggledProperty">
            <summary>
            Identifies the IsToggled dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.ToolBarButton.IsToggled">
            <summary>
            True if toggled, false otherwise
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ToolBarButton.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.ToolBarButton.Background">
            <summary>
            Button background brush
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonPopup.ActualPlacementPositionProperty">
            <summary>
            Identifies the ActualPlacementPosition dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonPopup.ActualPlacementPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonPopup.PlacementPositionProperty">
            <summary>
            Identifies the PlacementPosition dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonPopup.PlacementPosition">
            <summary>
            PlacementPosition backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonPopup.TargetProperty">
            <summary>
            Identifies the Target dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonPopup.Target">
            <summary>
            Target backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonPopup.IsDelayedProperty">
            <summary>
            Identifies the IsDelayed dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonPopup.IsDelayed">
            <summary>
            IsDelayed backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonPopup.FollowTargetProperty">
            <summary>
            Identifies the FollowTarget dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonPopup.FollowTarget">
            <summary>
            FollowTarget backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonPopup.StaysOpenProperty">
            <summary>
            Identifies the StaysOpen dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonPopup.StaysOpen">
            <summary>
            StaysOpen backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonPopup.OwnerProperty">
            <summary>
            Identifies the Owner dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonPopup.Owner">
            <summary>
            Owner backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonPopup.InitialVisibility">
            <summary>
            Initial visibility state
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonPopup.IsManualMode">
            <summary>
            It enables/disables the Manual Mode. In Automatic mode the popup is shown when the mouse enter the target.
            In manual mode the customer must use the function Show and Hide to manage the visibility
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonScrollViewer">
            <summary>
            A customized ScrollViewer
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonScrollViewer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonScrollViewer.VerticalScrollBarWidthProperty">
            <summary>
            Identifies the VerticalScrollBarWidth dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonScrollViewer.VerticalScrollBarWidth">
            <summary>
            VerticalScrollBarWidth backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonScrollViewer.HorizontalScrollBarHeightProperty">
            <summary>
            Identifies the HorizontalScrollBarHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonScrollViewer.HorizontalScrollBarHeight">
            <summary>
            HorizontalScrollBarHeight backing field
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonTabControl.DragOut">
            <summary>
            Event raised when the drag operation goes out of the Tab control border
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonTabControl.TabRightClick">
            <summary>
            Raised on Tab right click event
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonTabControl.TabItemDoubleClick">
            <summary>
            Raised on Tab item double click event
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonTabControl.TabMovingStart">
            <summary>
            Event raised when a Tab Item is starting to move
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonTabControl.TabMovingEnd">
            <summary>
            Event raised when the Tab Item stops to move
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabControl.IsHomeEndKeyEnable">
            <summary>
            Enables/Disables the Home/end keys. It is enabled by default
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonTabControl.UpdateScrollBar">
            <summary>
            Updates the scroll bar layout
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonTabControl.SetTabIndex(Ion.Core.Toolkit.Controls.IonTabItem,System.Int32)">
            <summary>
            Gets the Tab index
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonTabControl.SetTabIndex(System.Object,System.Int32)">
            <summary>
            Gets the Tab index
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonTabControl.GetTabIndex(Ion.Core.Toolkit.Controls.IonTabItem)">
            <summary>
            Gets the Tab index
            </summary>
            <param name="item">Item</param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonTabControl.GetTabIndex(System.Object)">
            <summary>
            Gets the Tab index
            </summary>
            <param name="item">Generic Item</param>
            <returns></returns>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabControl.UseModernProperty">
            <summary>
            Identifies the UseModern dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabControl.UseModern">
            <summary>
            UseModern backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabControl.IsTabItemMinimizedProperty">
            <summary>
            Identifies the IsTabItemMinimized dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabControl.IsTabItemMinimized">
            <summary>
            IsTabItemMinimized backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabControl.TabVisibilityProperty">
            <summary>
            Identifies the TabVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabControl.TabVisibility">
            <summary>
            TabVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabControl.IsContainerSelectedProperty">
            <summary>
            Identifies the IsContainerSelected dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabControl.IsContainerSelected">
            <summary>
            IsContainerSelected backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabControl.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonTabControl.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonTabControl.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabItem.UseModernProperty">
            <summary>
            Identifies the EnableModern dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabItem.UseModern">
            <summary>
            UseModern backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabItem.UserBackgroundProperty">
            <summary>
            Identifies the UserBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabItem.UserBackground">
            <summary>
            UserBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabItem.SmallItemHeightProperty">
            <summary>
            Identifies the SmallItemHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabItem.SmallItemHeight">
            <summary>
            SmallItemHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabItem.LargeItemHeightProperty">
            <summary>
            Identifies the LargeItemHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabItem.LargeItemHeight">
            <summary>
            LargeItemHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabItem.IsTabSizeMinimizedProperty">
            <summary>
            Identifies the IsTabSizeMinimized dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabItem.IsTabSizeMinimized">
            <summary>
            IsTabSizeMinimized backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabItem.SmallTabFontSizeProperty">
            <summary>
            Identifies the SmallTabFontSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabItem.SmallTabFontSize">
            <summary>
            SmallTabFontSize backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonTabItem.LargeTabFontSizeProperty">
            <summary>
            Identifies the LargeTabFontSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabItem.LargeTabFontSize">
            <summary>
            LargeTabFontSize backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonTabItem.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonTabItem.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonTabItem.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonToggleSwitchButton">
            <summary>
            A ToggleSwitch button
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonToggleSwitchButton.OnStateCaptionProperty">
            <summary>
            Identifies the OnStateCaption dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonToggleSwitchButton.OnStateCaption">
            <summary>
            OnStateCaption backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonToggleSwitchButton.OffStateCaptionProperty">
            <summary>
            Identifies the OffStateCaption dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonToggleSwitchButton.OffStateCaption">
            <summary>
            OffStateCaption backing field
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.LoadingSpinner.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.LoadingSpinner.IsSpinningProperty">
            <summary>
            Identifies the IsSpinning dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.LoadingSpinner.IsSpinning">
            <summary>
            IsSpinning backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.LoadingSpinner.FillProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.LoadingSpinner.Fill">
            <summary>
            Fill backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.LoadingSpinner.CommandProperty">
            <summary>
            Identifies the Command dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.LoadingSpinner.Command">
            <summary>
            Command backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon">
            <summary>
            The four-dot inside a big circle icon
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.Background">
            <summary>
            Background backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.MainCircleProperty">
            <summary>
            Identifies the MainCircle dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.MainCircle">
            <summary>
            MainCircle backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.TopDotProperty">
            <summary>
            Identifies the TopDot dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.TopDot">
            <summary>
            TopDot backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.BottomDotsProperty">
            <summary>
            Identifies the BottomDots dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.BottomDots">
            <summary>
            BottomDots backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.HiddenDotProperty">
            <summary>
            Identifies the HiddenDot dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandIcon.HiddenDot">
            <summary>
            HiddenDot backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Logo.IonBrandMode">
            <summary>
            How the Brand Logo is rendered
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo">
            <summary>
            The ION brand logo
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OverrideConfigurationRequest">
            <summary>
            <para>This static event is used to gather an override configuration</para>
            <para>for the ION Brand Logo colors; it can be called multiple times</para>
            <para>from various threads.</para>
            <para>You MUST return a new valid IonBrandLogoDefaults instance every time</para>
            <para>this event is raised</para>
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.AnimateOnClickProperty">
            <summary>
            Identifies the AnimateOnClick dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.AnimateOnClick">
            <summary>
            AnimateOnClick backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.IsActiveProperty">
            <summary>
            Identifies the IsActive dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.IsActive">
            <summary>
            IsActive backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.IsPausedProperty">
            <summary>
            Identifies the IsPaused dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.IsPaused">
            <summary>
            IsPaused backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.IonCirclesVisibleProperty">
            <summary>
            Identifies the IonCirclesVisible dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.IonCirclesVisible">
            <summary>
            IonCirclesVisible backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.Color1Property">
            <summary>
            Identifies the Color1 dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.Color1">
            <summary>
            Color1 backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.Color2Property">
            <summary>
            Identifies the Color2 dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.Color2">
            <summary>
            Color2 backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.Color3Property">
            <summary>
            Identifies the Color3 dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.Color3">
            <summary>
            Color3 backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.NucleusColorProperty">
            <summary>
            Identifies the NucleusColor dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.NucleusColor">
            <summary>
            NucleusColor backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OrbitsVisibilityProperty">
            <summary>
            Identifies the OrbitsVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OrbitsVisibility">
            <summary>
            OrbitsVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OrbitsBrushProperty">
            <summary>
            Identifies the OrbitsBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OrbitsBrush">
            <summary>
            OrbitsBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OrbitsThicknessProperty">
            <summary>
            Identifies the OrbitsThickness dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OrbitsThickness">
            <summary>
            OrbitsThickness backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OrbitsDashArrayProperty">
            <summary>
            Identifies the OrbitsDashArray dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OrbitsDashArray">
            <summary>
            OrbitsDashArray backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OrbitsDashCapProperty">
            <summary>
            Identifies the OrbitsDashCap dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.OrbitsDashCap">
            <summary>
            OrbitsDashCap backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.DotsBorderBrushProperty">
            <summary>
            Identifies the DotsBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.DotsBorderBrush">
            <summary>
            DotsBorderBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.DotsStrokeThicknessProperty">
            <summary>
            Identifies the DotsStrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.DotsStrokeThickness">
            <summary>
            DotsStrokeThickness backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.CutMarginsVisibilityProperty">
            <summary>
            Identifies the CutMarginsVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.CutMarginsVisibility">
            <summary>
            CutMarginsVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.CutMarginsBrushProperty">
            <summary>
            Identifies the CutMarginsBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.CutMarginsBrush">
            <summary>
            CutMarginsBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.CutMarginsThicknessProperty">
            <summary>
            Identifies the CutMarginsThickness dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.CutMarginsThickness">
            <summary>
            CutMarginsThickness backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.CutMarginsDashArrayProperty">
            <summary>
            Identifies the CutMarginsDashArray dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.CutMarginsDashArray">
            <summary>
            CutMarginsDashArray backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.CutMarginsDashCapProperty">
            <summary>
            Identifies the CutMarginsDashCap dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.CutMarginsDashCap">
            <summary>
            CutMarginsDashCap backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.ModeProperty">
            <summary>
            Identifies the Mode dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandLogo.Mode">
            <summary>
            Mode backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Logo.IonBrandNucleus">
            <summary>
            The "nucleus" of the ION brand logo
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.Logo.IonBrandNucleus.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IonBrandNucleus.NucleusColorProperty">
            <summary>
            Identifies the NucleusColor dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IonBrandNucleus.NucleusColor">
            <summary>
            NucleusColor backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.Logo.IONLogo">
            <summary>
            The ION Logo as a control.
            The native aspect ratio is 350x280
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IONLogo.PointBrush">
            <summary>
            The brush of the DOT
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IONLogo.MainBrush">
            <summary>
            The brush of the "ION" part
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IONLogo.UniformBrush">
            <summary>
            Set/get a uniform brush for the whole logo
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IONLogo.MaintainRatioProperty">
            <summary>
            Identifies the MaintainRatio dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IONLogo.MaintainRatio">
            <summary>
            MaintainRatio backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.Logo.IONLogo.SizeOrientationProperty">
            <summary>
            Identifies the SizeOrientation dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.Logo.IONLogo.SizeOrientation">
            <summary>
            SizeOrientation backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoCompleteBox">
            <summary>
            Represents a control that provides a text box for user input and a
            drop-down that contains possible matches based on the input in the text
            box.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.ElementSelectionAdapter">
            <summary>
            Specifies the name of the selection adapter TemplatePart.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.ElementSelector">
            <summary>
            Specifies the name of the Selector TemplatePart.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.ElementPopup">
            <summary>
            Specifies the name of the Popup TemplatePart.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.ElementTextBox">
            <summary>
            The name for the text box part.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.ElementTextBoxStyle">
            <summary>
            The name for the text box style.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.ElementItemContainerStyle">
            <summary>
            The name for the adapter's item container style.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._items">
            <summary>
            Gets or sets a local cached copy of the items data.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._view">
            <summary>
            Gets or sets the observable collection that contains references to 
            all of the items in the generated view of data that is provided to 
            the selection-style control adapter.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._ignoreTextPropertyChange">
            <summary>
            Gets or sets a value to ignore a number of pending change handlers. 
            The value is decremented after each use. This is used to reset the 
            value of properties without performing any of the actions in their 
            change handlers.
            </summary>
            <remarks>The int is important as a value because the TextBox 
            TextChanged event does not immediately fire, and this will allow for
            nested property changes to be ignored.</remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._ignorePropertyChange">
            <summary>
            Gets or sets a value indicating whether to ignore calling a pending 
            change handlers. 
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._ignoreTextSelectionChange">
            <summary>
            Gets or sets a value indicating whether to ignore the selection 
            changed event.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._skipSelectedItemTextUpdate">
            <summary>
            Gets or sets a value indicating whether to skip the text update 
            processing when the selected item is updated.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._textSelectionStart">
            <summary>
            Gets or sets the last observed text box selection start location.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._userCalledPopulate">
            <summary>
            Gets or sets a value indicating whether the user initiated the 
            current populate call.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._popupHasOpened">
            <summary>
            A value indicating whether the popup has been opened at least once.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._delayTimer">
            <summary>
            Gets or sets the DispatcherTimer used for the MinimumPopulateDelay 
            condition for auto completion.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._allowWrite">
            <summary>
            Gets or sets a value indicating whether a read-only dependency 
            property change handler should allow the value to be set.  This is 
            used to ensure that read-only properties cannot be changed via 
            SetValue, etc.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality. Making it internal for subclass access.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._valueBindingEvaluator">
            <summary>
            Gets or sets the BindingEvaluator, a framework element that can
            provide updated string values from a single binding.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._collectionChangedWeakEventListener">
            <summary>
            A weak event listener for the collection changed event.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.MinimumPrefixLength">
            <summary>
            Gets or sets the minimum number of characters required to be entered
            in the text box before the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> displays
            possible matches.
            matches.
            </summary>
            <value>
            The minimum number of characters to be entered in the text box
            before the <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" />
            displays possible matches. The default is 1.
            </value>
            <remarks>
            If you set MinimumPrefixLength to -1, the AutoCompleteBox will
            not provide possible matches. There is no maximum value, but
            setting MinimumPrefixLength to value that is too large will
            prevent the AutoCompleteBox from providing possible matches as well.
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.MinimumPrefixLengthProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.MinimumPrefixLength" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.MinimumPrefixLength" />
            dependency property.</value>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnMinimumPrefixLengthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumPrefixLengthProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its MinimumPrefixLength.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.MinimumPopulateDelay">
            <summary>
            Gets or sets the minimum delay, in milliseconds, after text is typed
            in the text box before the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control
            populates the list of possible matches in the drop-down.
            </summary>
            <value>The minimum delay, in milliseconds, after text is typed in
            the text box, but before the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> populates
            the list of possible matches in the drop-down. The default is 0.</value>
            <exception cref="T:System.ArgumentException">The set value is less than 0.</exception>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.MinimumPopulateDelayProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.MinimumPopulateDelay" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.MinimumPopulateDelay" />
            dependency property.</value>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnMinimumPopulateDelayPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumPopulateDelayProperty property changed handler. Any current 
            dispatcher timer will be stopped. The timer will not be restarted 
            until the next TextUpdate call by the user.
            </summary>
            <param name="d">AutoCompleteTextBox that changed its 
            MinimumPopulateDelay.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsTextCompletionEnabled">
            <summary>
            Gets or sets a value indicating whether the first possible match
            found during the filtering process will be displayed automatically
            in the text box.
            </summary>
            <value>
            True if the first possible match found will be displayed
            automatically in the text box; otherwise, false. The default is
            false.
            </value>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsTextCompletionEnabledProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsTextCompletionEnabled" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsTextCompletionEnabled" />
            dependency property.</value>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate" /> used
            to display each item in the drop-down portion of the control.
            </summary>
            <value>The <see cref="T:System.Windows.DataTemplate" /> used to
            display each item in the drop-down. The default is null.</value>
            <remarks>
            You use the ItemTemplate property to specify the visualization 
            of the data objects in the drop-down portion of the AutoCompleteBox 
            control. If your AutoCompleteBox is bound to a collection and you 
            do not provide specific display instructions by using a 
            DataTemplate, the resulting UI of each item is a string 
            representation of each object in the underlying collection. 
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemTemplateProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemTemplate" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemTemplate" />
            dependency property.</value>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemContainerStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> that is
            applied to the selection adapter contained in the drop-down portion
            of the <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" />
            control.
            </summary>
            <value>The <see cref="T:System.Windows.Style" /> applied to the
            selection adapter contained in the drop-down portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.
            The default is null.</value>
            <remarks>
            The default selection adapter contained in the drop-down is a 
            ListBox control. 
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemContainerStyleProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemContainerStyle" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemContainerStyle" />
            dependency property.</value>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextBoxStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> applied to
            the text box portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.
            </summary>
            <value>The <see cref="T:System.Windows.Style" /> applied to the text
            box portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.
            The default is null.</value>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextBoxStyleProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextBoxStyle" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextBoxStyle" />
            dependency property.</value>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum height of the drop-down portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.
            </summary>
            <value>The maximum height of the drop-down portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.
            The default is <see cref="F:System.Double.PositiveInfinity" />.</value>
            <exception cref="T:System.ArgumentException">The specified value is less than 0.</exception>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.MaxDropDownHeightProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.MaxDropDownHeight" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.MaxDropDownHeight" />
            dependency property.</value>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnMaxDropDownHeightPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaxDropDownHeightProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteTextBox that changed its MaxDropDownHeight.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsDropDownOpen">
            <summary>
            Gets or sets a value indicating whether the drop-down portion of
            the control is open.
            </summary>
            <value>
            True if the drop-down is open; otherwise, false. The default is
            false.
            </value>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsDropDownOpenProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsDropDownOpen" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsDropDownOpen" />
            dependency property.</value>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnIsDropDownOpenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsDropDownOpenProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteTextBox that changed its IsDropDownOpen.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the items for the
            drop-down portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.
            </summary>
            <value>The collection that is used to generate the items of the
            drop-down portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.</value>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSourceProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource" />
            dependency property.</value>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSourceProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its ItemsSource.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.SelectedItem">
            <summary>
            Gets or sets the selected item in the drop-down.
            </summary>
            <value>The selected item in the drop-down.</value>
            <remarks>
            If the IsTextCompletionEnabled property is true and text typed by 
            the user matches an item in the ItemsSource collection, which is 
            then displayed in the text box, the SelectedItem property will be 
            a null reference.
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.SelectedItemProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.SelectedItem" />
            dependency property.
            </summary>
            <value>The identifier the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.SelectedItem" />
            dependency property.</value>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItemProperty property changed handler. Fires the 
            SelectionChanged event. The event data will contain any non-null
            removed items and non-null additions.
            </summary>
            <param name="d">AutoCompleteBox that changed its SelectedItem.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnSelectedItemChanged(System.Object)">
            <summary>
            Called when the selected item is changed, updates the text value
            that is displayed in the text box part.
            </summary>
            <param name="newItem">The new item.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.Text">
            <summary>
            Gets or sets the text in the text box portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.
            </summary>
            <value>The text in the text box portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.</value>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.Text" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.Text" />
            dependency property.</value>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TextProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its Text.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.SearchText">
            <summary>
            Gets the text that is used to filter items in the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource" />
            item collection.
            </summary>
            <value>The text that is used to filter items in the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource" />
            item collection.</value>
            <remarks>
            The SearchText value is typically the same as the 
            Text property, but is set after the TextChanged event occurs 
            and before the Populating event.
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.SearchTextProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.SearchText" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.SearchText" />
            dependency property.</value>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnSearchTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OnSearchTextProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its SearchText.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.FilterMode">
            <summary>
            Gets or sets how the text in the text box is used to filter items
            specified by the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource" />
            property for display in the drop-down.
            </summary>
            <value>One of the
            <see cref="T:System.Windows.Controls.AutoCompleteFilterMode" />
            values The default is
            <see cref="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWith" />.</value>
            <exception cref="T:System.ArgumentException">The specified value is
            not a valid
            <see cref="T:System.Windows.Controls.AutoCompleteFilterMode" />.</exception>
            <remarks>
            Use the FilterMode property to specify how possible matches are 
            filtered. For example, possible matches can be filtered in a 
            predefined or custom way. The search mode is automatically set to 
            Custom if you set the ItemFilter property. 
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.FilterModeProperty">
            <summary>
            Gets the identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.FilterMode" />
            dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnFilterModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FilterModeProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its FilterMode.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemFilter">
            <summary>
            Gets or sets the custom method that uses user-entered text to filter
            the items specified by the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource" />
            property for display in the drop-down.
            </summary>
            <value>The custom method that uses the user-entered text to filter
            the items specified by the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource" />
            property. The default is null.</value>
            <remarks>
            The filter mode is automatically set to Custom if you set the 
            ItemFilter property. 
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemFilterProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemFilter" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemFilter" />
            dependency property.</value>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnItemFilterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemFilterProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its ItemFilter.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextFilter">
            <summary>
            Gets or sets the custom method that uses the user-entered text to
            filter items specified by the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource" />
            property in a text-based way for display in the drop-down.
            </summary>
            <value>The custom method that uses the user-entered text to filter
            items specified by the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource" />
            property in a text-based way for display in the drop-down.</value>
            <remarks>
            The search mode is automatically set to Custom if you set the 
            TextFilter property. 
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextFilterProperty">
            <summary>
            Identifies the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextFilter" />
            dependency property.
            </summary>
            <value>The identifier for the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextFilter" />
            dependency property.</value>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.DropDownPopup">
            <summary>
            Gets or sets the drop down popup control.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._text">
            <summary>
            The TextBox template part.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteBox._adapter">
            <summary>
            The SelectionAdapter.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextBox">
            <summary>
            Gets or sets the Text template part.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.SelectionAdapter">
            <summary>
            Gets or sets the selection adapter used to populate the drop-down
            with a list of selectable items.
            </summary>
            <value>The selection adapter used to populate the drop-down with a
            list of selectable items.</value>
            <remarks>
            You can use this property when you create an automation peer to 
            use with AutoCompleteBox or deriving from AutoCompleteBox to 
            create a custom control.
            </remarks>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextChanged">
            <summary>
            Occurs when the text in the text box portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> changes.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoCompleteBox.Populating">
            <summary>
            Occurs when the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> is
            populating the drop-down with possible matches based on the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.Text" />
            property.
            </summary>
            <remarks>
            If the event is canceled, by setting the PopulatingEventArgs.Cancel 
            property to true, the AutoCompleteBox will not automatically 
            populate the selection adapter contained in the drop-down. 
            In this case, if you want possible matches to appear, you must 
            provide the logic for populating the selection adapter.
            </remarks>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoCompleteBox.Populated">
            <summary>
            Occurs when the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> has
            populated the drop-down with possible matches based on the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.Text" />
            property.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoCompleteBox.DropDownOpening">
            <summary>
            Occurs when the value of the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsDropDownOpen" />
            property is changing from false to true.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoCompleteBox.DropDownOpened">
            <summary>
            Occurs when the value of the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsDropDownOpen" />
            property has changed from false to true and the drop-down is open.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoCompleteBox.DropDownClosing">
            <summary>
            Occurs when the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsDropDownOpen" />
            property is changing from true to false.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoCompleteBox.DropDownClosed">
            <summary>
            Occurs when the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.IsDropDownOpen" />
            property was changed from true to false and the drop-down is open.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoCompleteBox.SelectionChanged">
            <summary>
            Occurs when the selected item in the drop-down portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> has
            changed.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ValueMemberBinding">
            <summary>
            Gets or sets the  <see cref="T:System.Windows.Data.Binding" /> that
            is used to get the values for display in the text portion of
            the <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" />
            control.
            </summary>
            <value>The <see cref="T:System.Windows.Data.Binding" /> object used
            when binding to a collection property.</value>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ValueMemberPath">
            <summary>
            Gets or sets the property path that is used to get values for
            display in the text portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.
            </summary>
            <value>The property path that is used to get values for display in
            the text portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.</value>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.#cctor">
            <summary>
            Initializes the static members of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges and sizes the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" />
            control and its contents.
            </summary>
            <param name="finalSize">The size allowed for the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.</param>
            <returns>The <paramref name="finalSize" />, unchanged.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control
            when a new template is applied.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.ClosingDropDown(System.Boolean)">
            <summary>
            Begin closing the drop-down.
            </summary>
            <param name="oldValue">The original value.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OpeningDropDown(System.Boolean)">
            <summary>
            Begin opening the drop down by firing cancelable events, opening the
            drop-down or reverting, depending on the event argument values.
            </summary>
            <param name="oldValue">The original value, if needed for a revert.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            Raise an expand/collapse event through the automation peer.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnTextBoxPreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the PreviewKeyDown event on the TextBox for WPF. This method
            is not implemented for Silverlight.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnCreateAutomationPeer">
            <summary>
            Creates an
            <see cref="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer" />
            </summary>
            <returns>A
            <see cref="T:System.Windows.Automation.Peers.AutoCompleteBoxAutomationPeer" />
            for the <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" />
            object.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.FocusChanged(System.Boolean)">
            <summary>
            Handles the FocusChanged event.
            </summary>
            <param name="hasFocus">A value indicating whether the control 
            currently has the focus.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.HasFocus">
            <summary>
            Determines whether the text box or drop-down portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control has
            focus.
            </summary>
            <returns>true to indicate the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> has focus;
            otherwise, false.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.GotFocus" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles change of keyboard focus, which is treated differently than control focus
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.LostFocus" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.ControlIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle the change of the IsEnabled property.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.GetSelectionAdapterPart">
            <summary>
            Returns the
            <see cref="T:System.Windows.Controls.ISelectionAdapter" /> part, if
            possible.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.ISelectionAdapter" /> object,
            if possible. Otherwise, null.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.PopulateDropDown(System.Object,System.EventArgs)">
            <summary>
            Handles the timer tick when using a populate delay.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnPopulating(System.Windows.Controls.PopulatingEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.Controls.PopulatingEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnPopulated(System.Windows.Controls.PopulatedEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populated" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.Controls.PopulatedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.SelectionChanged" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnDropDownOpening(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Boolean})">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownOpening" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" />
            that contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnDropDownOpened(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownOpened" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
            that contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnDropDownClosing(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Boolean})">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownClosing" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" />
            that contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnDropDownClosed(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.DropDownClosed" />
            event.
            </summary>
            <param name="e">A
            <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
            which contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.FormatValue(System.Object,System.Boolean)">
            <summary>
            Formats an Item for text comparisons based on Converter 
            and ConverterCulture properties.
            </summary>
            <param name="value">The object to format.</param>
            <param name="clearDataContext">A value indicating whether to clear
            the data context after the lookup is performed.</param>
            <returns>Formatted Value.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.FormatValue(System.Object)">
            <summary>
            Converts the specified object to a string by using the
            <see cref="P:System.Windows.Data.Binding.Converter" /> and
            <see cref="P:System.Windows.Data.Binding.ConverterCulture" /> values
            of the binding object specified by the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ValueMemberBinding" />
            property.
            </summary>
            <param name="value">The object to format as a string.</param>
            <returns>The string representation of the specified object.</returns>
            <remarks>
            Override this method to provide a custom string conversion.
            </remarks>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnTextChanged(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.TextChanged" />
            event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnTextBoxTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handle the TextChanged event that is directly attached to the 
            TextBox part. This ensures that only user initiated actions will 
            result in an AutoCompleteBox suggestion and operation.
            </summary>
            <param name="sender">The source TextBox object.</param>
            <param name="e">The TextChanged event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnTextBoxSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When selection changes, save the location of the selection start.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.UpdateTextValue(System.String)">
            <summary>
            Updates both the text box value and underlying text dependency 
            property value if and when they change. Automatically fires the 
            text changed events when there is a change.
            </summary>
            <param name="value">The new string value.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.UpdateTextValue(System.String,System.Nullable{System.Boolean})">
            <summary>
            Updates both the text box value and underlying text dependency 
            property value if and when they change. Automatically fires the 
            text changed events when there is a change.
            </summary>
            <param name="value">The new string value.</param>
            <param name="userInitiated">A nullable bool value indicating whether
            the action was user initiated. In a user initiated mode, the 
            underlying text dependency property is updated. In a non-user 
            interaction, the text box value is updated. When user initiated is 
            null, all values are updated.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.TextUpdated(System.String,System.Boolean)">
            <summary>
            Handle the update of the text for the control from any source, 
            including the TextBox part and the Text dependency property.
            </summary>
            <param name="newText">The new text.</param>
            <param name="userInitiated">A value indicating whether the update 
            is a user-initiated action. This should be a True value when the 
            TextUpdated method is called from a TextBox event handler.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.PopulateComplete">
            <summary>
            Notifies the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> that the
            <see cref="P:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSource" />
            property has been set and the data can be filtered to provide
            possible matches in the drop-down.
            </summary>
            <remarks>
            Call this method when you are providing custom population of 
            the drop-down portion of the AutoCompleteBox, to signal the control 
            that you are done with the population process. 
            Typically, you use PopulateComplete when the population process 
            is a long-running process and you want to cancel built-in filtering
             of the ItemsSource items. In this case, you can handle the 
            Populated event and set PopulatingEventArgs.Cancel to true. 
            When the long-running process has completed you call 
            PopulateComplete to indicate the drop-down is populated.
            </remarks>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.UpdateTextCompletion(System.Boolean)">
            <summary>
            Performs text completion, if enabled, and a lookup on the underlying
            item values for an exact match. Will update the SelectedItem value.
            </summary>
            <param name="userInitiated">A value indicating whether the operation
            was user initiated. Text completion will not be performed when not 
            directly initiated by the user.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.TryGetMatch(System.String,System.Collections.ObjectModel.ObservableCollection{System.Object},System.Windows.Controls.AutoCompleteFilterPredicate{System.String})">
            <summary>
            Attempts to look through the view and locate the specific exact 
            text match.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="view">The view reference.</param>
            <param name="predicate">The predicate to use for the partial or 
            exact match.</param>
            <returns>Returns the object or null.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.ClearView">
            <summary>
            A simple helper method to clear the view and ensure that a view 
            object is always present and not null.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.RefreshView">
            <summary>
            Walks through the items enumeration. Performance is not going to be 
            perfect with the current implementation.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Handle any change to the ItemsSource dependency property, update 
            the underlying ObservableCollection view, and set the selection 
            adapter's ItemsSource to the view if appropriate.
            </summary>
            <param name="oldValue">The old enumerable reference.</param>
            <param name="newValue">The new enumerable reference.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.ItemsSourceCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method that handles the ObservableCollection.CollectionChanged event for the ItemsSource property.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnAdapterSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the SelectionChanged event of the selection adapter.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The selection changed event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnAdapterSelectionComplete(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Commit event on the selection adapter.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnAdapterSelectionCanceled(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Cancel event on the selection adapter.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OpenDropDown(System.Boolean,System.Boolean)">
            <summary>
            Private method that directly opens the popup, checks the expander 
            button, and then fires the Opened event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.CloseDropDown(System.Boolean,System.Boolean)">
            <summary>
            Private method that directly closes the popup, flips the Checked 
            value, and then fires the Closed event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.Ion#Core#Toolkit#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteBox.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.SelectionModeToVisibilityValueConverter">
            <summary>
            For internal use only.
            </summary>
            <exclude />
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoCompleteComboBox">
            <summary>
            Auto complete ComboBox
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.TextBox">
            <summary>
            The TextBox component of the combo box
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.#ctor">
            <summary>
            Auto complete ComboBox
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.MyIsTextCompletionEnabledProperty">
            <summary>
            MyIsTextCompletionEnabled Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.SelectedItemExProperty">
            <summary>
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.SelectedItemEx">
            <summary>
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.AcceptFreeTextProperty">
            <summary>
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.AcceptFreeText">
            <summary>
             Determines if the ComboBox should accept free
             text or only items in the ItemsSource set
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.IsMultipleSelectionEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.IsMultipleSelectionEnabledProperty">
            <summary>
            IsMultipleSelectionEnabled Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.IsListBoxEnabledProperty">
            <summary>
            Identifies the IsListBoxEnabled dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.IsListBoxEnabled">
            <summary>
            IsListBoxEnabled backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.PopupCustomContentVisibilityProperty">
            <summary>
            Identifies the PopupCustomContentVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.PopupCustomContentVisibility">
            <summary>
            PopupCustomContentVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.PopupCustomContentProperty">
            <summary>
            Identifies the PopupCustomContent dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.PopupCustomContent">
            <summary>
            PopupCustomContent backing field
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.FreeTextCommit">
            <summary>
            Cast when the Combo is losing focus and the user shoud decide
            which item should be kept (free text, previous, SelectedItem...)
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.FreeText">
            <summary>
            Give access to the free text property of the combo.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.FilterMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBox.FilterModeProperty">
            <summary>
            FilterMode Dependency Property.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoCompleteComboBoxEventHandler">
            <summary>
            AutoCompleteComboBox event
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoCompleteComboBoxDriveItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBoxDriveItem.FreeText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBoxDriveItem.PreviousItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBoxDriveItem.SelectedItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.AutoCompleteComboBoxEventArgs">
            <summary>
            Brings infoprmation on an AutoCompleteComboBox event
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBoxEventArgs.CurrentText">
            <summary>
            The current value of the text field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBoxEventArgs.PreviousSelection">
            <summary>
            The previously selected object --&gt; SelectedItemEx
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.AutoCompleteComboBoxEventArgs.SelectedItem">
            <summary>
            Currently selected Item --&gt; SelectedItem
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.AutoCompleteComboBoxEventArgs.DriveItem">
            <summary>
            What to use to drive current item
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.BindingEvaluator`1">
            <summary>
            A framework element that permits a binding to be evaluated in a new data
            context leaf node.
            </summary>
            <typeparam name="T">The type of dynamic binding to return.</typeparam>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.BindingEvaluator`1._binding">
            <summary>
            Gets or sets the string value binding used by the control.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.BindingEvaluator`1.Value">
            <summary>
            Gets or sets the data item string value.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.BindingEvaluator`1.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.BindingEvaluator`1.ValueBinding">
            <summary>
            Gets or sets the value binding.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BindingEvaluator`1.#ctor">
            <summary>
            Initializes a new instance of the BindingEvaluator class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BindingEvaluator`1.#ctor(System.Windows.Data.Binding)">
            <summary>
            Initializes a new instance of the BindingEvaluator class,
            setting the initial binding to the provided parameter.
            </summary>
            <param name="binding">The initial string value binding.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BindingEvaluator`1.ClearDataContext">
            <summary>
            Clears the data context so that the control does not keep a
            reference to the last-looked up item.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BindingEvaluator`1.GetDynamicValue(System.Object,System.Boolean)">
            <summary>
            Updates the data context of the framework element and returns the 
            updated binding value.
            </summary>
            <param name="o">The object to use as the data context.</param>
            <param name="clearDataContext">If set to true, this parameter will
            clear the data context immediately after retrieving the value.</param>
            <returns>Returns the evaluated T value of the bound dependency
            property.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BindingEvaluator`1.GetDynamicValue(System.Object)">
            <summary>
            Updates the data context of the framework element and returns the 
            updated binding value.
            </summary>
            <param name="o">The object to use as the data context.</param>
            <returns>Returns the evaluated T value of the bound dependency
            property.</returns>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.NotificationsProperty">
            <summary>
            Identifies the Notifications dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.Notifications">
            <summary>
            Notifications backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.MessagesCountProperty">
            <summary>
            Identifies the MessagesCount dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.MessagesCount">
            <summary>
            MessagesCount backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.ForceVisibilityProperty">
            <summary>
            Identifies the ForceVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.ForceVisibility">
            <summary>
            ForceVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.IsPopupOpenProperty">
            <summary>
            Identifies the IsPopupOpen dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.IsPopupOpen">
            <summary>
            IsPopupOpen backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.SummaryNotificationTypeProperty">
            <summary>
            Identifies the SummaryNotificationType dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.SummaryNotificationType">
            <summary>
            SummaryNotificationType backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.MessageCountLimitProperty">
            <summary>
            Identifies the MessageCountLimit dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.MessageCountLimit">
            <summary>
            MessageCountLimit backing field
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.AddMessage(Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessageBase)">
            <summary>
            Adds a message
            </summary>
            <param name="message">The message to add</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.RemoveMessage(Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessageBase)">
            <summary>
            Removes a message
            </summary>
            <param name="message">The message to remove</param>
            <returns>True if the message has bene found and removed, false otherwise</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.ClearAllMessages">
            <summary>
            Removes all the messages
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.PopAllMessages">
            <summary>
            Remove and returns all the messages
            </summary>
            <returns>The messagees list</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.CanClearMessagesExecute">
            <summary>
            Called to check if the ClearMessages command can be executed
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.ClearMessagesAction">
            <summary>
            Called when the AutoGenerateAction is invoked
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.BundledMessagesNotifier.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.BundledNotifications.Interaction.InteractionRequest">
            <summary>
            Interaction request event
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.BundledNotifications.Interaction.InteractionHost">
            <summary>
            The object that is asking for the request
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.Interaction.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="interactionSender">The interaction host</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.Interaction.CanCommandShowDetailsExecute">
            <summary>
            Called to check if the CommandShowDetails command can be executed
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.Interaction.CommandShowDetailsAction">
            <summary>
            Called when the AutoGenerateAction is invoked
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.Interaction.CanCommandDismissExecute">
            <summary>
            Called to check if the CommandDismiss command can be executed
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.BundledNotifications.Interaction.CommandDismissAction">
            <summary>
            Called when the AutoGenerateAction is invoked
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.SelectedColorEventArgs">
            <summary>
            Event data for the SelectedColorChanged event.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.SelectedColorEventArgs.SelectedColor">
            <summary>
            The currently selected color.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.SelectedColorEventArgs.#ctor(System.Windows.Media.Color)">
            <summary>
            Create a new instance of the SelectedColorEventArgs class.
            </summary>
            <param name="color">The currently selected color.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.ColorPicker">
            <summary>
            Represents a Color Picker control which allows a user to select a color.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.ColorPicker.#ctor">
            <summary>
            Create a new instance of the ColorPicker control.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.ColorPicker.OnApplyTemplate">
            <summary>
            Builds the visual tree for the ColorPicker control when the template is applied. 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.ColorPicker.ShowColorCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ColorPicker.ShowColorCodeProperty">
            <summary>
            ShowColorCode Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.ColorPicker.SelectedColor">
            <summary>
            Gets or sets the currently selected color in the Color Picker.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ColorPicker.SelectedColorProperty">
            <summary>
            SelectedColor Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.ColorPicker.SelectedSolidBrush">
            <summary>
            Gets or sets the currently selected color in the Color Picker as a Brush.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ColorPicker.SelectedSolidBrushProperty">
            <summary>
            SelectedSolidBrush Dependency Property.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.ColorPicker.SelectedColorChanged">
            <summary>
            Event fired when the selected color changes.  This event occurs when the 
            left-mouse button is lifted after clicking.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.ColorPicker.SelectedColorChanging">
            <summary>
            Event fired when the selected color is changing.  This event occurs when the 
            left-mouse button is pressed and the user is moving the mouse.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.CompactColorPicker.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.TextProperty">
            <summary>
            Text Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.CompactColorPicker.ShowOpacityController">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.ShowOpacityControllerProperty">
            <summary>
            ShowOpacityController Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.CompactColorPicker.SelectedPalette">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.SelectedPaletteProperty">
            <summary>
            SelectedPalette Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.CompactColorPicker.IonPalette">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.IonPaletteProperty">
            <summary>
            SelectedPalette Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.CompactColorPicker.SelectedPaletteBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.SelectedPaletteBrushProperty">
            <summary>
            SelectedPaletteBrush Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.CompactColorPicker.SelectedCustomColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.SelectedCustomColorProperty">
            <summary>
            SelectedCustomColor Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.CompactColorPicker.SelectedIonPaletteBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.SelectedIonPaletteBrushProperty">
            <summary>
            SelectedPaletteBrush Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.CompactColorPicker.ValueOpacity">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.ValueOpacityProperty">
            <summary>
            ValueOpacity Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.CompactColorPicker.Value">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.ValueProperty">
            <summary>
            Value Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.ShowColorCodeProperty">
            <summary>
            ShowOpacityController Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.ShowNoColorProperty">
            <summary>
            ShowOpacityController Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.CompactColorPicker.ColorCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.CompactColorPicker.ColorCodeProperty">
            <summary>
            Color Code Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ColorPickerMode.Indirect">
            <summary>
            Picker is shown on clicking the selector toggle
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.ColorPickerMode.Direct">
            <summary>
            Picker itself is main control
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonDatePicker">
            <summary>
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonDatePicker.IsCompactProperty">
            <summary>
            Identifies the IsCompact dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonDatePicker.IsCompact">
            <summary>
            IsCompact backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.InteractionHelper">
            <summary>
            The InteractionHelper provides controls with support for all of the
            common interactions like mouse movement, mouse clicks, key presses,
            etc., and also incorporates proper event semantics when the control is
            disabled.
            </summary>
            <exclude />
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.InteractionHelper.SequentialClickThresholdInMilliseconds">
            <summary>
            The threshold used to determine whether two clicks are temporally
            local and considered a double click (or triple, quadruple, etc.).
            500 milliseconds is the default double click value on Windows.
            This value would ideally be pulled form the system settings.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.InteractionHelper.SequentialClickThresholdInPixelsSquared">
            <summary>
            The threshold used to determine whether two clicks are spatially
            local and considered a double click (or triple, quadruple, etc.)
            in pixels squared.  We use pixels squared so that we can compare to
            the distance delta without taking a square root.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.InteractionHelper.Control">
            <summary>
            Gets the control the InteractionHelper is targeting.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.InteractionHelper.IsFocused">
            <summary>
            Gets a value indicating whether the control has focus.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.InteractionHelper.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the control.
            </summary> 
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.InteractionHelper.IsReadOnly">
            <summary>
            Gets a value indicating whether the read-only property is set.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.InteractionHelper.IsPressed">
            <summary>
            Gets a value indicating whether the mouse button is pressed down
            over the control.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.InteractionHelper.LastClickTime">
            <summary>
            Gets or sets the last time the control was clicked.
            </summary>
            <remarks>
            The value is stored as Utc time because it is slightly more
            performant than converting to local time.
            </remarks>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.InteractionHelper.LastClickPosition">
            <summary>
            Gets or sets the mouse position of the last click.
            </summary>
            <remarks>The value is relative to the control.</remarks>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.InteractionHelper.ClickCount">
            <summary>
            Gets the number of times the control was clicked.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.InteractionHelper._updateVisualState">
            <summary>
            Reference used to call UpdateVisualState on the base class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the InteractionHelper class.
            </summary>
            <param name="control">Control receiving interaction.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
            <remarks>
            UpdateVisualState works differently than the rest of the injected
            functionality.  Most of the other events are overridden by the
            calling class which calls Allow, does what it wants, and then calls
            Base.  UpdateVisualState is the opposite because a number of the
            methods in InteractionHelper need to trigger it in the calling
            class.  We do this using the IUpdateVisualState internal interface.
            </remarks>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.UpdateVisualStateBase(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the control's Loaded event.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the control's IsEnabled property.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.OnIsReadOnlyChanged(System.Boolean)">
            <summary>
            Handles changes to the control's IsReadOnly property.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.OnApplyTemplateBase">
            <summary>
            Update the visual state of the control when its template is changed.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.AllowGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's GotFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.OnGotFocusBase">
            <summary>
            Base implementation of the virtual GotFocus event handler.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.AllowLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's LostFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.OnLostFocusBase">
            <summary>
            Base implementation of the virtual LostFocus event handler.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.AllowMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseEnter event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.OnMouseEnterBase">
            <summary>
            Base implementation of the virtual MouseEnter event handler.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.AllowMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseLeave event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.OnMouseLeaveBase">
            <summary>
            Base implementation of the virtual MouseLeave event handler.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.AllowMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.OnMouseLeftButtonDownBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonDown event
            handler.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.AllowMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.OnMouseLeftButtonUpBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonUp event handler.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.AllowKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.AllowKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.InteractionHelper.GetLogicalKey(System.Windows.FlowDirection,System.Windows.Input.Key)">
            <summary>
            Translates keys for proper RightToLeft mode support.
            </summary>
            <param name="flowDirection">Control's flow direction mode.</param>
            <param name="originalKey">Original key.</param>
            <returns>
            A translated key code, indicating how the original key should be interpreted.
            </returns>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
            <exclude />
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.IonNumericUpDown">
            <summary>
            Represents a control that enables single value selection from a numeric
            range of values through a Spinner and TextBox.
            </summary>
            <QualityBand>Stable</QualityBand>
            <exclude />
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonNumericUpDown.Incrementing">
            <summary>
            Event raised before the increment operation occurs
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonNumericUpDown.Incremented">
            <summary>
            Event raised after the increment operation has occurred
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonNumericUpDown.Decrementing">
            <summary>
            Event raised before the decrement operation occurs
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.IonNumericUpDown.Decremented">
            <summary>
            Event raised after the decrement operation has occurred
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.Minimum">
            <summary>
            Gets or sets the Minimum possible Value.
            </summary>
            <remarks>
            The default value is zero.
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the Minimum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Minimum property.</param>
            <param name="newValue">New value of the Minimum property.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.Maximum">
            <summary>
            Gets or sets the Maximum possible Value.
            </summary>
            <remarks>
            The default values is one.
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the Maximum property value has changed.
            </summary>
            <param name="oldValue">Old value of the Maximum property.</param>
            <param name="newValue">New value of the Maximum property.</param>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.DisableSpinnerProperty">
            <summary>
            Identifies the DisableSpinner dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.DisableSpinner">
            <summary>
            DisableSpinner backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.Increment">
            <summary>
            Gets or sets a value added or subtracted from the value property.
             </summary>
            <remarks>
            The default values is one.
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.IncrementProperty">
            <summary>
            Identifies the Increment dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnIncrementPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IncrementProperty property changed handler.
            </summary>
            <param name="d">NumericUpDown that changed its Increment property.</param>
            <param name="e">DependencyPropertyChangedEventArgs for Increment property.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnIncrementChanged(System.Double,System.Double)">
            <summary>
            Called when the Increment property value has changed.
            </summary>
            <param name="oldValue">Old value of the Increment property.</param>
            <param name="newValue">New value of the Increment property.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.FormatInfo">
            <summary>
            Specifies a custom FormatInfo. This has precedence over <see cref="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.DecimalPlaces" /> and <see cref="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.FormatMode" />.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.FormatInfoProperty">
            <summary>
            FormatInfo Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextBoxBackgroundProperty">
            <summary>
            Identifies the TexBoxBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextBoxBackground">
            <summary>
            TexBoxBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextBoxMarginProperty">
            <summary>
            Identifies the TextBoxMargin dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextBoxMargin">
            <summary>
            TextBoxMargin backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolbarsMarginProperty">
            <summary>
            Identifies the ToolbarsMargin dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolbarsMargin">
            <summary>
            ToolbarsMargin backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.UpToolbarBackgroundProperty">
            <summary>
            Identifies the UpToolbarBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.UpToolbarBackground">
            <summary>
            UpToolbarBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.DownToolbarBackgroundProperty">
            <summary>
            Identifies the DownToolbarBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.DownToolbarBackground">
            <summary>
            DownToolbarBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextBoxBorderProperty">
            <summary>
            Identifies the TextBoxBorder dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextBoxBorder">
            <summary>
            TextBoxBorder backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextBoxVerticalAlignmentProperty">
            <summary>
            Identifies the TextBoxVerticalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextBoxVerticalAlignment">
            <summary>
            TextBoxVerticalAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextBoxHorizontalAlignmentProperty">
            <summary>
            Identifies the TextBoxHorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextBoxHorizontalAlignment">
            <summary>
            TextBoxHorizontalAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextVerticalAlignmentProperty">
            <summary>
            Identifies the TextVerticalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextVerticalAlignment">
            <summary>
            TextVerticalAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextHorizontalAlignmentProperty">
            <summary>
            Identifies the TextHorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextHorizontalAlignment">
            <summary>
            TextHorizontalAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextWrappingProperty">
            <summary>
            Identifies the TextWrapping dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextWrapping">
            <summary>
            TextWrapping backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextAlignmentProperty">
            <summary>
            Identifies the TextAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextAlignment">
            <summary>
            TextAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.BorderModeProperty">
            <summary>
            Identifies the BorderMode dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.BorderMode">
            <summary>
            BorderMode backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places that are displayed in the 
            NumericUpDown. 
            </summary>
            <remarks>
            The default value is zero.
            
            DecimalPlaces decides output format of Value property.
            It is implemented via _formatString field and FormatValue override.
            </remarks>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.DecimalPlacesProperty">
            <summary>
            Identifies the DecimalPlaces dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnDecimalPlacesPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DecimalPlacesProperty property changed handler.
            </summary>
            <param name="d">NumericUpDown that changed its DecimalPlaces.</param>
            <param name="e">DependencyPropertyChangedEventArgs for DecimalPlaces property.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnDecimalPlacesChanged(System.Int32,System.Int32)">
            <summary>
            Called when the DecimalPlaces property value has changed.
            </summary>
            <param name="oldValue">Old value of the DecimalPlaces property.</param>
            <param name="newValue">New value of the DecimalPlaces property.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.FormatMode">
            <summary>
            Gets or sets the format mode, i.e. the way the value should be interpreted.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.FormatModeProperty">
            <summary>
            FormatMode Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.NaNValueRepresentation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.NaNValueRepresentationProperty">
            <summary>
            NaNValueRepresentation Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerVisibleProperty">
            <summary>
            Identifies the SpinnerVisible dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerVisible">
            <summary>
            SpinnerVisible backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerLayout">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerLayoutProperty">
            <summary>
            SpinnerLayout Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerBorderVisibleProperty">
            <summary>
            Identifies the SpinnerVisible dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerBorderVisible">
            <summary>
            SpinnerVisible backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinIconsShapeProperty">
            <summary>
            Identifies the IconsTemplatetype dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinIconsShape">
            <summary>
            IconsTemplatetype backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerUpButtonShapeProperty">
            <summary>
            Identifies the ButtonShape dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerUpButtonShape">
            <summary>
            ButtonShape backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerDownButtonShapeProperty">
            <summary>
            Identifies the DownButtonShape dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerDownButtonShape">
            <summary>
            DownButtonShape backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonMinWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonMinWidthProperty">
            <summary>
            SpinnerButtonMinWidth Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonMinHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonMinHeightProperty">
            <summary>
            SpinnerButtonMinHeight Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonMaxWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonMaxWidthProperty">
            <summary>
            SpinnerButtonMaxWidth Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonMaxHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonMaxHeightProperty">
            <summary>
            SpinnerButtonMaxHeight Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonSizeProperty">
            <summary>
            Identifies the SpinnerButtonSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonSize">
            <summary>
            The size of the spin buttons.
            "0" hides the buttons
            A negative or a null value resets the size to the default one
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SquaredButtonsProperty">
            <summary>
            Identifies the SquaredButtons dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SquaredButtons">
            <summary>
            SquaredButtons backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonColorProperty">
            <summary>
            Identifies the ButtonColor dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonColor">
            <summary>
            ButtonColor backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonBorderBrushProperty">
            <summary>
            Identifies the ButtonBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonBorderBrush">
            <summary>
            ButtonBorderBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonSeparatorProperty">
            <summary>
            Identifies the ButtonSeparator dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonSeparator">
            <summary>
            ButtonSeparator backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ArrowsBrushProperty">
            <summary>
            Identifies the ArrowsBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ArrowsBrush">
            <summary>
            ArrowsBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ExternalToolbarProperty">
            <summary>
            Identifies the ExternalToolbar dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ExternalToolbar">
            <summary>
            ExternalToolbar backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolBarLayoutProperty">
            <summary>
            Identifies the ToolBarLayout dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolBarLayout">
            <summary>
            ToolBarLayout backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolBarVisibleProperty">
            <summary>
            Identifies the ToolBarVisible dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolBarVisible">
            <summary>
            ToolBarVisible backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.UpToolbarButtonsProperty">
            <summary>
            Identifies the UpToolbarButtons dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.UpToolbarButtons">
            <summary>
            UpToolbarButtons backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.DownToolbarButtonsProperty">
            <summary>
            Identifies the DownToolbarButtons dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.DownToolbarButtons">
            <summary>
            DownToolbarButtons backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolBarHeightProperty">
            <summary>
            Identifies the ToolBarHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolBarHeight">
            <summary>
            ToolBarHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolBarFontSizeProperty">
            <summary>
            Identifies the ToolBoxFontSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolBarFontSize">
            <summary>
            ToolBoxFontSize backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolBarButtonForegroundProperty">
            <summary>
            Identifies the ToolBarButtonForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolBarButtonForeground">
            <summary>
            ToolBarButtonForeground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SelectedItemUpProperty">
            <summary>
            Identifies the ArrowBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SelectedItemUp">
            <summary>
            ArrowBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SelectedItemDownProperty">
            <summary>
            Identifies the ArrowBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SelectedItemDown">
            <summary>
            ArrowBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.CmdToolbarTickProperty">
            <summary>
            Identifies the CmdToolbarTick dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.CmdToolbarTick">
            <summary>
            CmdToolbarTick backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolbarButtonsBorderBrushProperty">
            <summary>
            Identifies the ToolbarButtonsBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ToolbarButtonsBorderBrush">
            <summary>
            ToolbarButtonsBorderBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.InnerGridMarginProperty">
            <summary>
            Identifies the InnerGridMargin dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.InnerGridMargin">
            <summary>
            InnerGridMargin backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonsScaleFactorProperty">
            <summary>
            Identifies the SpinnerButtonsScaleFactor dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.SpinnerButtonsScaleFactor">
            <summary>
            SpinnerButtonsScaleFactor backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayTextProperty">
            <summary>
            Identifies the OverlayText dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayText">
            <summary>
            OverlayText backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayOpacityProperty">
            <summary>
            Identifies the OverlayOpacity dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayOpacity">
            <summary>
            OverlayOpacity backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayVisibilityProperty">
            <summary>
            Identifies the OverlayVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayVisibility">
            <summary>
            OverlayVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayFontFamilyProperty">
            <summary>
            Identifies the OverlayFontFamily dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayFontFamily">
            <summary>
            OverlayFontFamily backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayForegroundProperty">
            <summary>
            Identifies the OverlayForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayForeground">
            <summary>
            OverlayForeground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayFontSizeProperty">
            <summary>
            Identifies the OverlayFontSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayFontSize">
            <summary>
            OverlayFontSize backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayFontWeightProperty">
            <summary>
            Identifies the OverlayFontWeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayFontWeight">
            <summary>
            OverlayFontWeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayFontStyleProperty">
            <summary>
            Identifies the OverlayFontStyle dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayFontStyle">
            <summary>
            OverlayFontStyle backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayMarginProperty">
            <summary>
            Identifies the OverlayMargin dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayMargin">
            <summary>
            OverlayMargin backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayCustomActionProperty">
            <summary>
            Identifies the OverlayCustomAction dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayCustomAction">
            <summary>
            OverlayCustomAction backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayActionProperty">
            <summary>
            Identifies the OverlayAction dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.OverlayAction">
            <summary>
            OverlayAction backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonBackgroundMouseOverBrushProperty">
            <summary>
            Identifies the ButtonBackgroundMouseOverBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonBackgroundMouseOverBrush">
            <summary>
            ButtonBackgroundMouseOverBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonForegroundMouseOverBrushProperty">
            <summary>
            Identifies the ButtonForegroundMouseOverBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonForegroundMouseOverBrush">
            <summary>
            ButtonForegroundMouseOverBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonBackgroundMousePressedBrushProperty">
            <summary>
            Identifies the ButtonBackgroundMousePressedBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonBackgroundMousePressedBrush">
            <summary>
            ButtonBackgroundMousePressedBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonForegroundMousePressedBrushProperty">
            <summary>
            Identifies the ButtonForegroundMousePressedBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.ButtonForegroundMousePressedBrush">
            <summary>
            ButtonForegroundMousePressedBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.EnablePersistentFocusProperty">
            <summary>
            Identifies the EnablePersistentFocus dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.EnablePersistentFocus">
            <summary>
            EnablePersistentFocus backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.IsMouseWheelEnabledProperty">
            <summary>
            Identifies the IsMouseWheelEnabled dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.IsMouseWheelEnabled">
            <summary>
            IsMouseWheelEnabled backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonVisibilityProperty">
            <summary>
            Identifies the UserButtonVisibility dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonVisibility">
            <summary>
            UserButtonVisibility backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonIconKeyProperty">
            <summary>
            Identifies the UserButtonIconKey dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonIconKey">
            <summary>
            UserButtonIconKey backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonForegroundProperty">
            <summary>
            Identifies the UserButtonForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonForeground">
            <summary>
            UserButtonForeground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonCommandProperty">
            <summary>
            Identifies the USerButtonCommand dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonCommand">
            <summary>
            USerButtonCommand backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonSizeProperty">
            <summary>
            Identifies the UserButtonSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonSize">
            <summary>
            UserButtonSize backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonMarginProperty">
            <summary>
            Identifies the UserButtonMargin dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonMargin">
            <summary>
            UserButtonMargin backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonVerticalAlignmentProperty">
            <summary>
            Identifies the UserButtonVerticalAlignment dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonVerticalAlignment">
            <summary>
            UserButtonVerticalAlignment backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonBackgroundProperty">
            <summary>
            Identifies the UserButtonBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.UserButtonBackground">
            <summary>
            UserButtonBackground backing field
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.#ctor">
            <summary>
            Initializes a new instance of the NumericUpDown class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.SetValidSpinDirection">
            <summary>
            Sets the valid spin direction based on current value, minimum and maximum.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnApplyTemplate">
            <summary>
            Builds the visual tree for the NumericUpDown control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnValueChanging(System.Windows.Controls.RoutedPropertyChangingEventArgs{System.Double})">
            <summary>
            Override UpDownBase&lt;T&gt;.OnValueChanging to do validation and coercion.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            Override UpDownBase&lt;T&gt;.OnValueChanged to raise value changed automation event and 
            determine if a maximum or minimum has been reached.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnParseError(System.Windows.Controls.UpDownParseErrorEventArgs)">
            <summary>
            Parse error override
            </summary>
            <param name="e">PArse Error event Args</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.ParseValue(System.String)">
            <summary>
            Called by ApplyValue to parse user input as a decimal number.
            </summary>
            <param name="text">User input.</param>
            <returns>Value parsed from user input.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.FormatValue">
            <summary>
            Provides decimal specific value formatting for the value property.
            </summary>
            <returns>Formatted Value.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnIncrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.OnDecrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Decrease.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown._levelsFromRootCall">
            <summary>
            Levels from root call.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown._initialInc">
            <summary>
            Initial Increment value.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown._initialMin">
            <summary>
            Initial Minimum value.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown._initialMax">
            <summary>
            Initial Maximum value.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown._initialVal">
            <summary>
            Initial Minimum value.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown._requestedInc">
            <summary>
            Requested Increment value.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown._requestedMin">
            <summary>
            Requested Minimum value.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown._requestedMax">
            <summary>
            Requested Maximum value.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown._requestedVal">
            <summary>
            Requested Value value.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.CoerceMaximum">
            <summary>
            Ensure the Maximum is greater than or equal to the Minimum.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.CoerceMinimum">
            <summary>
            Ensure the Maximum is greater than or equal to the Minimum.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.IsValidDoubleValue(System.Double)">
            <summary>
            Check if an object value is a valid double value.
            </summary>
            <param name="value">The value to be checked.</param>
            <returns>true if a valid double; false otherwise.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.EnsureValidDoubleValue(System.Windows.DependencyProperty,System.Double,System.Double,System.Boolean)">
            <summary>
            Ensure the new value of a dependency property change is a valid double value, 
            or revert the change and throw an exception.
            </summary>
            <param name="property">The DependencyObject whose DependencyProperty is changed.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <param name="allowNaN"></param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.IonNumericUpDown.IsValueNaN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.IonNumericUpDown.IsValueNaNProperty">
            <summary>
            IsValueNaN Dependency Property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.EnsureValidIncrementValue(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Ensure the new value of Increment dependency property change is valid, 
            or revert the change and throw an exception.
            </summary>
            <param name="d">The DependencyObject whose DependencyProperty is changed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.EnsureValidDecimalPlacesValue(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Ensure the new value of DecimalPlaces dependency property change is valid, 
            or revert the change and throw an exception.
            </summary>
            <param name="d">The DependencyObject whose DecimalPlaces DependencyProperty is changed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.Ion#Core#Toolkit#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">A value indicating whether to automatically generate transitions to the new state, or instantly transition to the new state.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.TextUpdateAndFormat">
            <summary>
            Triggers a text update (including a re-format)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.IonNumericUpDown.HighlightText(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Highlight the text in the IonNumericupDown starting from the end of the string 
            and proceding backward. if the parameter getFocus is set to true it give focus
            to the IonNumericUpDown controller
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.TkUpDownBase">
            <summary>
            Base class for all controls that provide value manipulation with a 
            Spinner and a text box.
            </summary>
            <remarks>
            This non generic base class is used to specify default template,
            and simulate covariance among sub classes of UpDownBase&lt;T&gt;.
            </remarks>
            <QualityBand>Stable</QualityBand>
            <exclude />
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase.ElementTextName">
            <summary>
            Name constant for Text template part.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase.ElementSpinnerName">
            <summary>
            Name constant for Spinner template part.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase.SpinnerStyleName">
            <summary>
            Name constant for SpinnerStyle property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase.SpinnerStyle">
            <summary>
            Gets or sets the Style that is applied to the spinner.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase.SpinnerStyleProperty">
            <summary>
            Identifies the SpinnerStyle dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase.OnSpinnerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed callback for SpinnerStyleProperty.
            </summary>
            <param name="d">UpDownBase whose SpinnerStyleProperty changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase.#ctor">
            <summary>
            Initializes a new instance of the UpDownBase class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase.OnSpinnerStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Called when SpinnerStyle property value has changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase.GetValue">
            <summary>
            GetValue method for returning UpDownBase&lt;T&gt;.Value as object.
            </summary>
            <returns>Value as object type.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase.SetValue(System.Object)">
            <summary>
            SetValue method for setting UpDownBase&lt;T&gt;.Value through object type parameter.
            </summary>
            <param name="value">New value in object type.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality. Making it internal for subclass access.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase.UpdateVisualState(System.Boolean)">
            <summary>
            Update current visual state.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.TkUpDownBase`1">
            <summary>
            Base class for all controls that provide value manipulation with a 
            Spinner and a text box.
            </summary>
            <typeparam name="T">Type of Value property.</typeparam>
            <QualityBand>Stable</QualityBand>
            <exclude />
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase`1._textBox">
            <summary>
            Private field for Text template part.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase`1._textBoxEventHandler">
            <summary>
            Private field for TextBox key down event
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.TextBox">
            <summary>
            Gets the Text template part.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.FocusText">
            <summary>
            move the focus onto the text part
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase`1._spinner">
            <summary>
            Private field for Spinner template part.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.Spinner">
            <summary>
            Gets the Spinner template part.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.Value">
            <summary>
            Gets or sets the Value property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase`1.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase`1._ignoreValueChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.IsEditable">
            <summary>
            Gets or sets a value indicating whether the value can be manually 
            edited by the end-user.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase`1.IsEditableProperty">
            <summary>
            Identifies the IsEditable dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnIsEditablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsEditableProperty property changed handler.
            </summary>
            <param name="d">UpDownBase that changed its IsEditable.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TkUpDownBase`1.EnableMouseWheelEventOnHoverProperty">
            <summary>
            Identifies the EnableMouseWheelEventOnHover dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.EnableMouseWheelEventOnHover">
            <summary>
            EnableMouseWheelEventOnHover backing field
            </summary>
            
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.TkUpDownBase`1.ValueChanging">
            <summary>
            Occurs when Value property is changing.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.TkUpDownBase`1.ValueChanged">
            <summary>
            Occurs when Value property has changed.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.TkUpDownBase`1.Formatting">
            <summary>
            Occurs when a value is being formatted and allows custom formatting.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.TkUpDownBase`1.Parsing">
            <summary>
            Occurs when a value is being parsed and allows custom parsing.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.TkUpDownBase`1.ParseError">
            <summary>
            Occurs when there is an error in parsing user input and allows adding parsing logic.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.#ctor">
            <summary>
            Initializes a new instance of the UpDownBase(of T) class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.GetValue">
            <summary>
            GetValue override to return Value property as object type.
            </summary>
            <returns>The Value property as object type.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.SetValue(System.Object)">
            <summary>
            SetValue override to set value to Value property.
            </summary>
            <param name="value">New value.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnApplyTemplate">
            <summary>
            Builds the visual tree for the UpDownBase(of T) control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event.
            </summary>
            <remarks>
            Only support up and down arrow keys.
            </remarks>
            <param name="e">Key event args.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.MouseWheelEnabled">
            <summary>
            Internal logic to enable/disable mouse wheel spin
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Provides handling for the MouseWheel event.
            </summary>
            <param name="e">Mouse wheel event args.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.DoDecrement(Ion.Core.Toolkit.Controls.SpinSource)">
            <summary>
            Performs an increment if conditions allow it.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.DoIncrement(Ion.Core.Toolkit.Controls.SpinSource)">
            <summary>
            Performs a decrement if conditions allow it.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnTextLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for Text template part's LostFocus event.
            We use this event to compare current TextBox.Text with cached previous 
            value to decide whether user has typed in a new value. 
            </summary>
            <param name="sender">The Text template part.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.ProcessUserInput(Ion.Core.Toolkit.Controls.InputAppliedReason,System.Boolean)">
            <summary>
            Called OnLostFocus and OnKeyDown(Key.Enter) to process user input.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.TkUpDownBase`1.InputApplied">
            <summary>
            notify the user input has been applied
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.UpdateTextBoxText">
            <summary>
            Display current value in Text template part.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnFormatting(System.Windows.Controls.UpDownFormatEventArgs{`0})">
            <summary>
            Raises the <see cref="E:Ion.Core.Toolkit.Controls.TkUpDownBase`1.Formatting" /> event, to allow easily hooking
            into the formatting logic.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Controls.UpDownFormatEventArgs`1" /> 
            instance containing the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnSpinnerSpin(System.Object,System.Windows.Controls.SpinEventArgs)">
            <summary>
            Event handler for Spinner template part's Spin event.
            </summary>
            <param name="sender">The Spinner template part.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.ApplyValue(System.String)">
            <summary>
            Processes user input when the TextBox.TextChanged event occurs.
            </summary>
            <param name="text">User input.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.IsValueValid">
            <summary>
            If the <see cref="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.Value" /> property is valid, i.e. the value matches the current <see cref="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.Text" /> value.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TkUpDownBase`1.RevertToPreviousValueOnParsingError">
            <summary>
            Allow to automatically restore previous value after a parsing error of user input (default is false).
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnParseError(System.Windows.Controls.UpDownParseErrorEventArgs)">
            <summary>
            Raises the ParserError event when there is an error in parsing user input.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnParsing(System.Windows.Controls.UpDownParsingEventArgs{`0})">
            <summary>
            Raises the <see cref="E:Parsing" /> event, to allow easily hooking
            into the parse logic.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Controls.UpDownParsingEventArgs`1" /> 
            instance containing the event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnSpin(System.Windows.Controls.SpinEventArgs)">
            <summary>
            Occurs when the spinner spins.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnValueChanging(System.Windows.Controls.RoutedPropertyChangingEventArgs{`0})">
            <summary>
            Raises the ValueChanging event when Value property is changing.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnValueChanged(System.Windows.RoutedPropertyChangedEventArgs{`0})">
            <summary>
            Raises the ValueChanged event when Value property has changed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnIsEditableChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsEditable property value changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.SelectAllText">
            <summary>
            Selects all text.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.ParseValue(System.String)">
            <summary>
            Called by ApplyValue to parse user input.
            </summary>
            <param name="text">User input.</param>
            <returns>Value parsed from user input.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.FormatValue">
            <summary>
            Renders the value property into the textbox text.
            </summary>
            <returns>Formatted Value.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnIncrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnDecrement">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnIncrement(Ion.Core.Toolkit.Controls.SpinSource)">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TkUpDownBase`1.OnDecrement(Ion.Core.Toolkit.Controls.SpinSource)">
            <summary>
            Called by OnSpin when the spin direction is SpinDirection.Increase.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
            <exclude />
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateReadOnly">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupValidation">
            <summary>
            ValidationStates state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateValid">
            <summary>
            The valid state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateInvalidFocused">
            <summary>
            Invalid, focused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            Invalid, unfocused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupIncrease">
            <summary>
            Increment state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateIncreaseEnabled">
            <summary>
            State enabled for increment group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateIncreaseDisabled">
            <summary>
            State disabled for increment group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupDecrease">
            <summary>
            Decrement state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateDecreaseEnabled">
            <summary>
            State enabled for decrement group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateDecreaseDisabled">
            <summary>
            State disabled for decrement group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupInteractionMode">
            <summary>
            InteractionMode state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupLocked">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateLocked">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateUnlocked">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateActive">
            <summary>
            Active state.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupActive">
            <summary>
            Active state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Non-watermarked state.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateBusy">
            <summary>
            Busy state for BusyIndicator.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateIdle">
            <summary>
            Idle state for BusyIndicator.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupBusyStatus">
            <summary>
            Busyness group name.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateVisible">
            <summary>
            Visible state name for BusyIndicator.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.StateHidden">
            <summary>
            Hidden state name for BusyIndicator.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.VisualStates.GroupVisibility">
            <summary>
            BusyDisplay group.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.PopupMenus.MenuBehavior">
            <summary>
            Behavior to trigger the menu
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.PopupMenus.MenuBehavior.RightButtonDown">
            <summary>
            Using the right click (default). The popup menu will appear at the mouse pointer.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.PopupMenus.MenuBehavior.LeftButtonDown">
            <summary>
            On the left click (used for example for buttons). The popup menu will appear underneath the target element.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenu.OwnerProperty">
            <summary>
            Identifies the Owner dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenu.Owner">
            <summary>
            Owner backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenu.Location">
            <summary>
            Get/set the location of the popup (when opened)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenu.Open(System.Double,System.Double,System.Double,System.Double,System.Windows.UIElement)">
            <summary>
            Open the menu at the given coordinates giving it the keyboard focus
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenu.Closed">
            <summary>
            Event raised when the popup menu is closed
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when keyboard key is pressed while the element has focus.
            </summary>
            <param name="e">The KeyEventArgs that contains the event data.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenuItem.Header">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenuItem.HeaderProperty">
            <summary>
            Header Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenuItem.PvtIsEnabledProperty">
            <summary>
            Fake DP used to intercept IsEnabled property change.
            Goddamn Silverlight.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenuItem.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenuItem.IconProperty">
            <summary>
            Icon Dependency Property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenuItem.CollapseSeparators(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
            <summary>
            TODO: In common with <see cref="T:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenu" />
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenuService.MenuBehaviorProperty">
            <summary>
            Identifies the MenuBehavior dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenuService.GetMenuBehavior(System.Windows.UIElement)">
            <summary>
            MenuBehavior backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenuProcessor">
            <summary>
            Fills the graphical instance of a popup menu starting from a context menu descriptor
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupMenus.PopupMenuProcessor.Populate(Ion.Core.Toolkit.Controls.PopupMenus.PopupMenu,Ion.Core.Toolkit.Foundation.MenuDescriptors.MenuDescriptor)">
            <summary>
            Creates the graphical instance of a popup menu starting from a context menu descriptor
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.Popups.PopupWithOverlay.Shown">
            <summary>
            The popup was shown
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.Popups.PopupWithOverlay.Hidden">
            <summary>
            The popup was hidden
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.PopupHelper">
            <summary>
            PopupHelper is a simple wrapper type that helps abstract platform
            differences out of the Popup.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.PopupHelper.UsesClosingVisualState">
            <summary>
            Gets a value indicating whether a visual popup state is being used
            in the current template for the Closed state. Setting this value to
            true will delay the actual setting of Popup.IsOpen to false until
            after the visual state's transition for Closed is complete.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.PopupHelper.Parent">
            <summary>
            Gets or sets the parent control.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.PopupHelper.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum drop down height value.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.PopupHelper.Popup">
            <summary>
            Gets the Popup control instance.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.PopupHelper.IsOpen">
            <summary>
            Gets or sets a value indicating whether the actual Popup is open.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.PopupHelper.PopupChild">
            <summary>
            Gets or sets the popup child framework element. Can be used if an
            assumption is made on the child type.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.PopupHelper.Closed">
            <summary>
            The Closed event is fired after the Popup closes.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.PopupHelper.FocusChanged">
            <summary>
            Fired when the popup children have a focus event change, allows the
            parent control to update visual states or react to the focus state.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Controls.PopupHelper.UpdateVisualStates">
            <summary>
            Fired when the popup children intercept an event that may indicate
            the need for a visual state update by the parent control.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the PopupHelper class.
            </summary>
            <param name="parent">The parent control.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.#ctor(System.Windows.Controls.Control,System.Windows.Controls.Primitives.Popup)">
            <summary>
            Initializes a new instance of the PopupHelper class.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="popup">The Popup template part.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.Arrange">
            <summary>
            Arrange the popup.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.OnClosed(System.EventArgs)">
            <summary>
            Fires the Closed event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.OnPopupClosedStateChanged(System.Object,System.Windows.VisualStateChangedEventArgs)">
            <summary>
            Actually closes the popup after the VSM state animation completes.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.BeforeOnApplyTemplate">
            <summary>
            Should be called by the parent control before the base
            OnApplyTemplate method is called.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.AfterOnApplyTemplate">
            <summary>
            Should be called by the parent control after the base
            OnApplyTemplate method is called.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.PopupChild_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            The size of the popup child has changed.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.OutsidePopup_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            The mouse has clicked outside of the popup.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.Popup_Closed(System.Object,System.EventArgs)">
            <summary>
            Connected to the Popup Closed event and fires the Closed event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.OnFocusChanged(System.EventArgs)">
            <summary>
            Connected to several events that indicate that the FocusChanged 
            event should bubble up to the parent control.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.OnUpdateVisualStates(System.EventArgs)">
            <summary>
            Fires the UpdateVisualStates event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.PopupChild_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The popup child has received focus.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.PopupChild_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The popup child has lost focus.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.PopupChild_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            The popup child has had the mouse enter its bounds.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.PopupHelper.PopupChild_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            The mouse has left the popup child's bounds.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.OverlayContainer.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TabUtility.OverlayContainer.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TabUtility.OverlayContainer.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.PositionProperty">
            <summary>
            Identifies the Position dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.Position">
            <summary>
            Position backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.SmallItemHeightProperty">
            <summary>
            Identifies the SmallItemHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.SmallItemHeight">
            <summary>
            SmallItemHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.Title">
            <summary>
            Title backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.SmallTabFontSizeProperty">
            <summary>
            Identifies the SmallTabFontSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.SmallTabFontSize">
            <summary>
            SmallTabFontSize backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.LargeItemHeightProperty">
            <summary>
            Identifies the LargeItemHeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.LargeItemHeight">
            <summary>
            LargeItemHeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.LargeTabFontSizeProperty">
            <summary>
            Identifies the LargeTabFontSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.LargeTabFontSize">
            <summary>
            LargeTabFontSize backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.IsTabSizeMinimizedProperty">
            <summary>
            Identifies the IsTabSizeMinimized dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.IsTabSizeMinimized">
            <summary>
            IsTabSizeMinimized backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.TabUtility.OverlayTabItem.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.TabItemEventArgs.Item">
            <summary>
            Tab Item 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.TabItemUndockEventArgs.MouseCoords">
            <summary>
            Gets/ Sets the mouse position
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.TabItemUndockEventArgs.EventArg">
            <summary>
            Gets/ Sets the original Event args
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.TabUtility.TabItemUndockEventArgs.Item">
            <summary>
            Tab Item 
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Controls.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Controls.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButtonEditElement.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.DataGridTextColumnWithButtonEditElement.Text">
            <summary>
            Text backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.FontPicker.SelectedFontFamilyProperty">
            <summary>
            Identifies the SelectedFontFamily dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.FontPicker.SelectedFontFamily">
            <summary>
            SelectedFontFamily backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.FontPicker.SelectedFontWeightProperty">
            <summary>
            Identifies the SelectedFontWeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.FontPicker.SelectedFontWeight">
            <summary>
            SelectedFontWeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.FontPicker.SelectedFontStyleProperty">
            <summary>
            Identifies the SelectedFontStyle dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.FontPicker.SelectedFontStyle">
            <summary>
            SelectedFontStyle backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.FontPicker.MinFontSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.FontPicker.MinFontSizeProperty">
            <summary>
            MinFontSize Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.FontPicker.MaxFontSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.FontPicker.MaxFontSizeProperty">
            <summary>
            MaxFontSize Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.FontPicker.SelectedFontSizeProperty">
            <summary>
            Identifies the SelectedFontSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.FontPicker.SelectedFontSize">
            <summary>
            SelectedFontSize backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.HeaderPanel.HeaderBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.HeaderPanel.HeaderBackgroundProperty">
            <summary>
            HeaderBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Controls.HeaderPanel.HeaderPadding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Controls.HeaderPanel.HeaderPaddingProperty">
            <summary>
            HeaderPadding Dependency Property.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Data.HslColor">
            <summary>
            A Color represented as Hue, Saturation and Luminosity
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Data.HslColor.Hue">
            <summary>
            Hue value, ranging from 0 to 360
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Data.HslColor.Saturation">
            <summary>
            Saturation value, ranging from 0.0 to 1.0
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Data.HslColor.Luminosity">
            <summary>
            Luminosity value, ranging from 0.0 to 1.0
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Data.HslColor.Color">
            <summary>
            The RGB Color
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Data.HslColor.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Creates an HslColor
            </summary>
            <param name="h">Hue</param>
            <param name="s">Saturation</param>
            <param name="l">Luminosity</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Data.HslColor.#ctor(System.Windows.Media.Color)">
            <summary>
            Creates an HslColor starting from a <see cref="T:System.Windows.Media.Color" />
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:Ion.Core.Toolkit.Data.HslColor.ToRGB">
            <summary>
            Converts the HSL color into a RGB Color
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Color" /></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Data.HslColor.#ctor(System.Drawing.Color)">
            <summary>
            Creates an HslColor starting from a <see cref="T:System.Drawing.Color" />
            </summary>
            <param name="c">Color</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Data.HslColor.ToWinFormsRGB">
            <summary>
            Converts the HSL color into a WinForms Color
            </summary>
            <returns>A <see cref="T:System.Drawing.Color" /></returns>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.DragDropAdapter">
            <summary>
            The base class to manage Drag and Drop for a specific class. Register types using the <see cref="F:Ion.Core.Toolkit.DragDrop.DragDrop.AdapterProperty" />.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragStart(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Called when Drag is about to start.
            </summary>
            <param name="context">The shared context.</param>
            <returns>The allowed dragdrop effects. <see cref="F:Ion.Core.Toolkit.DragDrop.DragDropEffects.None" /> 
            if the dragdrop operation should be cancelled.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragEnter(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Called when the drop target associated with this adapter is entered.
            </summary>
            <param name="context">The shared context.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragLeave(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Called when the drop target associated with this adapter is left.
            </summary>
            <param name="context">The shared context.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragOver(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Called when drag occurs over the drop target associated with this adapter.
            </summary>
            <param name="context">The shared context.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDrop(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Called when drop occurs over the drop target associated with this adapter.
            </summary>
            <param name="context">The shared context.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.SafeTransformToVisual(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            This method performs a transform to visual operation but traps exceptions that occur.
            </summary>
            <param name="that">The element to transform to.</param>
            <param name="element">The element to transform from.</param>
            <returns>A general transform.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.GetSize(System.Windows.UIElement)">
            <summary>
            Returns the size of an element.
            </summary>
            <remarks>
            Note that this method only exists because there is a Silverlight bug that
            causes elements inside of a Canvas to return (0,0) for their RenderSize.
            This is a workaround that attempts to downcast to a FrameworkElement and
            if the cast is successful it uses the ActualWidth and ActualHeight 
            properties.
            </remarks>
            <param name="that">The element for which to retrieve the size.</param>
            <returns>The size of the element.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.GetScrollHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the ScrollViewer that contains the containers of an
            ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The ScrollViewer that contains the containers of an ItemsControl, or
            null if a ScrollViewer could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.GetBoundsRelativeTo(System.Windows.FrameworkElement,System.Windows.UIElement)">
            <summary>
            Get the bounds of an element relative to another element.
            </summary>
            <param name="element">The element.</param>
            <param name="otherElement">
            The element relative to the other element.
            </param>
            <returns>
            The bounds of the element relative to another element, or null if
            the elements are not related.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="otherElement" /> is null.
            </exception>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.ScrollIntoView(System.Windows.Controls.ScrollViewer,System.Windows.FrameworkElement,System.Double,System.Double,System.Windows.Duration)">
            <summary>
            Scroll the desired element into the ScrollViewer's viewport.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="element">The element to scroll into view.</param>
            <param name="horizontalMargin">The margin to add on the left or right.
            </param>
            <param name="verticalMargin">The margin to add on the top or bottom.
            </param>
            <param name="duration">The duration of the animation.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="viewer" /> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is null.
            </exception>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.GetVerticalOffset(System.Windows.Controls.ScrollViewer)">
            <summary>
            Gets the value of the VerticalOffset attached property for a specified ScrollViewer.
            </summary>
            <param name="element">The ScrollViewer from which the property value is read.</param>
            <returns>The VerticalOffset property value for the ScrollViewer.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.SetVerticalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Sets the value of the VerticalOffset attached property to a specified ScrollViewer.
            </summary>
            <param name="element">The ScrollViewer to which the attached property is written.</param>
            <param name="value">The needed VerticalOffset value.</param>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.Extensions.VerticalOffsetProperty">
            <summary>
            Identifies the VerticalOffset dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.OnVerticalOffsetPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            VerticalOffsetProperty property changed handler.
            </summary>
            <param name="dependencyObject">ScrollViewer that changed its VerticalOffset.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.GetHorizontalOffset(System.Windows.Controls.ScrollViewer)">
            <summary>
            Gets the value of the HorizontalOffset attached property for a specified ScrollViewer.
            </summary>
            <param name="element">The ScrollViewer from which the property value is read.</param>
            <returns>The HorizontalOffset property value for the ScrollViewer.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.SetHorizontalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Sets the value of the HorizontalOffset attached property to a specified ScrollViewer.
            </summary>
            <param name="element">The ScrollViewer to which the attached property is written.</param>
            <param name="value">The needed HorizontalOffset value.</param>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.Extensions.HorizontalOffsetProperty">
            <summary>
            Identifies the HorizontalOffset dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.OnHorizontalOffsetPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HorizontalOffsetProperty property changed handler.
            </summary>
            <param name="dependencyObject">ScrollViewer that changed its HorizontalOffset.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.GetItemsHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the Panel that contains the containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The Panel that contains the containers of an ItemsControl, or null
            if the Panel could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.GetVisualAncestors(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree ancestors of the element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element" /> is null.
            </exception>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.GetVisualAncestorsAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree ancestors of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree ancestors of an element and the element itself.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.Extensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Prepend an item to a sequence.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to append the item to.</param>
            <param name="value">The item to append to the sequence.</param>
            <returns>A new sequence.</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1">
            <summary>
            A base class for ItemsControl adapters.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.FindItemAtPosition(System.Windows.Point)">
            <summary>
            Retrieve which item is under the specified host (absolute) coordinates
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.ScrollIntoView(System.Windows.Controls.ItemsControl,System.Windows.FrameworkElement)">
            <summary>
            Scrolls a given item container into the view.
            </summary>
            <param name="container">The items control that contains
            the item container.</param>
            <param name="element">The item to scroll into
            view.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.ClipFeedback(System.Windows.Point,System.Windows.Size,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            clip get the desired rectangle with the available space
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.FindItemAtPosition(System.Windows.UIElement,System.Windows.Point,System.Windows.UIElement@,System.Object@)">
            <summary>
            Retrieve which item is under the specified screen coordinates
            </summary>
            <param name="source">The parent control</param>
            <param name="position">The host (absolute) coordinates</param>
            <param name="item">The item at the given coordinates, or null if none</param>
            <param name="dataItem">The DataContext</param>
            <returns>True if a control is found at the given coordinates</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.RemoveDataItemFromSource(System.Windows.UIElement,System.Object)">
            <summary>
            Remove an item from the item collection
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.CreateDragPreviewFeedback(System.Windows.UIElement)">
            <summary>
            Creates the drag preview ghosting feedback
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.ItemFromContainer(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)">
            <summary>
            Gets the item from an item container.
            </summary>
            <param name="itemsControlAncestor">The items control.</param>
            <param name="itemsControl">The item container.</param>
            <returns>The data contained by the item container.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.OnDragStart(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Called when Drag is about to start.
            </summary>
            <param name="context">The <see cref="T:Ion.Core.Toolkit.DragDrop.DragContext" />.</param>
            <returns>The allowed dragdrop effects. <see cref="F:Ion.Core.Toolkit.DragDrop.DragDropEffects.None" /> 
            if the dragdrop operation should be cancelled.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.OnDragOver(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Called when drag occurs over the drop target associated with this adapter.
            </summary>
            <param name="context">The <see cref="T:Ion.Core.Toolkit.DragDrop.DragContext" />.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.CanDrop(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Check if the current context can be dropped
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.AddDataItemToSource(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Add an item to the item collection
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.NotifySuccessfulDropToSource(Ion.Core.Toolkit.DragDrop.DragContext,System.Object)">
            <summary>
            Drop end with success
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.OnDrop(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Called when drop occurs over the drop target associated with this adapter.
            </summary>
            <param name="context">The <see cref="T:Ion.Core.Toolkit.DragDrop.DragContext" />.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.AutomaticallyReorderDropItem(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Reorder the source list
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.GetOrientation(System.Windows.Controls.ItemsControl)">
            <summary>
            Retrieves the orientation of the items host in the items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <returns>The orientation of the items host in the items control.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.FindAncestors(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            navigate the visual tree of the startingPoint and return TRUE in case the searched control is found
            </summary>
            <param name="searchedControl"></param>
            <param name="startingPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.LookForItem(System.Windows.Rect,System.Windows.Point)">
            <summary>
            check the closest item of the mouse position
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.LookForItem(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            check the closest item of the mouse position moving along the given delta
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.UpdateDropPreviewFeedback(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Check if the current context should show the drop feedback
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.FindLastVisibleRootItem(System.Windows.Controls.ItemsControl,System.Windows.Controls.ItemCollection)">
            <summary>
            returns the last visible ROOT item in case the mouse is placed below the last item
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.FindLastVisibleItem(System.Windows.Controls.ItemsControl,System.Windows.Controls.ItemCollection)">
            <summary>
            returns the last visible item in case the mouse is placed below the last item
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.IsAfterLastVisibleItem(System.Windows.Controls.ItemsControl,System.Windows.Point,System.Windows.Controls.Orientation)">
            <summary>
            returns the last visible item in case the mouse is placed below
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1.CalculateInsertRelationship(System.Windows.FrameworkElement,System.Windows.Controls.Orientation,System.Windows.Point)">
            <summary>
            calculate the target drop location, based on the ratio - pass null to discard the check
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData">
            <summary>
            Used to carry <see cref="T:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapter`1" /> specific data.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData.InsertRelationship">
            <summary>
            The insert relationship between current target sub-item and the one being dragged.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData.InsertRelationship.None">
            <summary>
            No insert
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData.InsertRelationship.Before">
            <summary>
            Insert before the target item
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData.InsertRelationship.After">
            <summary>
            Insert after the target item
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData.InsertRelationship.Nested">
            <summary>
            Insert within the target item
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData.SourceDataItem">
            <summary>
            The source data item
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData.SourceItem">
            <summary>
            The Source Item
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData.TargetDataItem">
            <summary>
            The target data item
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData.TargetItem">
            <summary>
            The target item
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.ItemsControlDragDropAdapterData.Insert">
            <summary>
            The insert relationship between current target sub-item and the one being dragged.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.TreeViewDragDropAdapter">
            <summary>
            A <see cref="T:Ion.Core.Toolkit.DragDrop.DragDropAdapter" /> used to deal with <see cref="T:System.Windows.Controls.TreeView" />s. 
            This is one of the default adapters automatically registered by the Dnd infrastructure.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.TreeViewDragDropAdapter.GetItemRectangle(System.Windows.FrameworkElement)">
            <summary>
            Retrieves the location and dimensions of a TreeViewItem excluding
            its children.
            </summary>
            <param name="item">The tree view item.</param>
            <returns>The location and dimensions of the TreeViewItem excluding
            its children.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.TreeViewDragDropAdapter.FindItemAtPosition(System.Windows.UIElement,System.Windows.Point,System.Windows.UIElement@,System.Object@)">
            <summary>
            Retrieve which item is under the specified screen coordinates
            </summary>
            <param name="source">The parent control</param>
            <param name="position">The host (absolute) coordinates</param>
            <param name="item">The item at the given coordinates, or null if none</param>
            <param name="dataItem">The DataContext</param>
            <returns>True if a control is found at the given coordinates</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.TreeViewDragDropAdapter.OnDrop(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Called when drop occurs over the drop target associated with this adapter.
            </summary>
            <param name="context">The <see cref="T:Ion.Core.Toolkit.DragDrop.DragContext" />.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.TreeViewDragDropAdapter.FindLastVisibleItem(System.Windows.Controls.ItemsControl,System.Windows.Controls.ItemCollection)">
            <summary>
            returns the last visible item in case the mouse is placed below
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.TreeViewDragDropAdapter.FindLastVisibleTreeViewItem(System.Windows.Controls.ItemCollection,System.Windows.Controls.ItemsControl)">
            <summary>
            returns the last visible item in case the mouse is placed below
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.TreeViewDragDropAdapter.CanDrop(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Check if the current context can be dropped
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.TreeViewDragDropAdapter.GetDataCollection(System.Windows.Controls.ItemsControl)">
            <summary>
            retrieve the source collection that is actually driven the control
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.TreeViewDragDropAdapter.CalculateInsertRelationship(System.Windows.FrameworkElement,System.Windows.Controls.Orientation,System.Windows.Point)">
            <summary>
            calculate the target drop location, based on the ratio - pass null to discard the check
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.TreeViewDragDropAdapter.GetItemsControlAncestor(System.Windows.DependencyObject)">
            <summary>
            Returns the items control ancestor of a dependency object.
            </summary>
            <param name="dependencyObject">The dependency object to retrieve the
            element for.</param>
            <returns>The items control ancestor of the dependency object.
            </returns>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.CollectionHelper">
            <summary>
            A set of extension methods for manipulating collections.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.CollectionHelper.IsReadOnly(System.Collections.IEnumerable)">
            <summary>
            Returns a value indicating whether a collection is read-only.
            </summary>
            <param name="collection">The collection to examine.</param>
            <returns>A value indicating whether a collection is read-only.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.CollectionHelper.CanInsert(System.Collections.IEnumerable,System.Object)">
            <summary>
            Returns a value Indicating whether an item can be inserted in a 
            collection.
            </summary>
            <param name="collection">The collection.</param>
            <param name="item">The item to be inserted.</param>
            <returns>A value Indicating whether an item can be inserted in a 
            collection.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.CollectionHelper.Insert(System.Collections.IEnumerable,System.Int32,System.Object)">
            <summary>
            Inserts an item into the collection at an index.
            </summary>
            <param name="collection">The collection.</param>
            <param name="index">The index at which to insert the item.</param> 
            <param name="item">The item to be inserted.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.CollectionHelper.Count(System.Collections.IEnumerable)">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <param name="collection">The collection.</param>
            <returns>The number of items in the collection.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.CollectionHelper.Add(System.Collections.IEnumerable,System.Object)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="collection">The collection.</param>
            <param name="item">The item to be added.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.CollectionHelper.Remove(System.Collections.IEnumerable,System.Object)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="collection">The collection.</param>
            <param name="item">The item to be removed.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.CollectionHelper.RemoveAt(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Removes an item at a given index from the collection.
            </summary>
            <param name="collection">The collection.</param>
            <param name="index">The index of the item to be removed.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.DataObject">
            <summary>
            A simple implementation of Microsoft's standard <see cref="T:System.Windows.IDataObject" /> interface.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.#ctor">
            <summary>
            Initializes a new instance of the DataObject class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.GetData(System.String)">
            <summary>
            Returns data in a format specified by a string.
            </summary>
            <param name="format">A string that specifies the format for the 
            data.</param>
            <returns>An object that contains the data in the specified format, 
            or null if the data is unavailable in the specified format.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.GetData(System.Type)">
            <summary>
            Returns a data object in a format specified by a System.Type object.
            </summary>
            <param name="format">A System.Type that specifies the format for the data.</param>
            <returns>A data object with the data in the specified format, or null if the data
            is unavailable in the specified format.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.GetData(System.String,System.Boolean)">
            <summary>
            Returns data in a format specified by a string.
            </summary>
            <param name="format">A string that specifies the format for the 
            data.</param>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
            <returns>An object that contains the data in the specified format, 
            or null if the data is unavailable in the specified format.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.GetDataPresent(System.String)">
            <summary>
            Determines whether the data is available in, or can be converted to, a format
            specified by a string.
            </summary>
            <param name="format">A string that specifies the format for the data.</param>
            <returns>True if the data is in, or can be converted to, the specified format; otherwise,
            false.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.GetDataPresent(System.Type)">
            <summary>
            Determines whether the data is available in, or can be converted to, a format
            specified by a string.
            </summary>
            <param name="format">A string that specifies the format for the data.</param>
            <returns>True if the data is in, or can be converted to, the specified format; otherwise,
            false.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.GetDataPresent(System.String,System.Boolean)">
            <summary>
            Determines whether the data is available in, or can be converted to, a format
            specified by a System.Type object.
            </summary>
            <param name="format">A System.Type that specifies the format for the data.</param>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
            <returns>An object that contains the data in the specified format, 
            or null if the data is unavailable in the specified format.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.GetFormats">
            <summary>
            Returns a list of formats in which the data in this data object is stored,
            or can be converted to.
            </summary>
            <returns>An array of strings, with each string specifying the name of a format that
            this data object supports.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.GetFormats(System.Boolean)">
            <summary>
            Returns a list of formats in which the data in this data object is stored.
            A Boolean flag indicates whether to also include formats that the data can
            be automatically converted to.
            </summary>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
            <returns>An array of strings, with each string specifying the name of a format that
            this data object supports.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.SetData(System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.SetData(System.String,System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="format">A string that specifies the format for the data.</param>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.SetData(System.Type,System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="format">A System.Type that specifies the format for the data.</param>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DataObject.SetData(System.String,System.Object,System.Boolean)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="format">A string that specifies the format for the data.</param>
            <param name="data">An object that represents the data to store in this data object.</param>
            <param name="autoConvert">True to attempt to automatically convert 
            the data to the specified format; false for no data format conversion.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.DragContext">
            <summary>
            The DragContext carries data describing the Drag and Drop operation currently in progress.
            </summary>
            <remarks>
            The instance is shared between all the Drag and Drop events of the same drag and drop session.
            In case of drag coming from a different AppDomain, only the <see cref="P:Ion.Core.Toolkit.DragDrop.DragContext.Data" /> property is valid.
            In case of drop happening outside the current AppDomain, no drop events will be raised.
            </remarks>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DragContext.DragFeedback">
            <summary>
            Get the drag feedback data
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DragContext.DropFeedback">
            <summary>
            Get the drop feedback data
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DragContext.Source">
            <summary>
            The UIElement designated as a drag source from which the DnD operation was started.
            </summary>
            <remarks>
            Can be null if the drag started from a different AppDomain
            </remarks>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DragContext.Data">
            <summary>
            Get/set the <see cref="T:System.Windows.IDataObject" /> used to carry user data in custom DnD operations.
            </summary>
            <remarks>
            Can be only set during a start operation. By default set to a default implementation.
            </remarks>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DragContext.Position">
            <summary>
            The current mouse position
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DragContext.Target">
            <summary>
            The current UIElement designated as a drop target, if any.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.DragDecorator">
            <summary>
            A content control that visually indicates what actions are available
            during a drag operation.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DragDecorator.IconPosition">
            <summary>
            Gets or sets the icon position.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDecorator.IconPositionProperty">
            <summary>
            Identifies the icon position dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DragDecorator.Effects">
            <summary>
            Gets or sets the drag drop effects.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDecorator.EffectsProperty">
            <summary>
            Identifies the Effects dependency property.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDecorator.OnEffectsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            EffectsProperty property changed handler.
            </summary>
            <param name="d">DragContainer that changed its Effects.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDecorator.OnEffectsPropertyChanged">
            <summary>
            Changes the appearance of the DragDecorator when the effects 
            property is changed.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDecorator.Update">
            <summary>
            Updates the visual state of the DragContainer.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDecorator.#ctor">
            <summary>
            Initializes a new instance of the DragDecorator.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.DragDrop">
            <summary>
            The static class that contains all the XAML attached property about drag and drop.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.AdapterProperty">
            <summary>
            The property that will be used to customize the drag-and-drop operations with an <see cref="T:Ion.Core.Toolkit.DragDrop.DragDropAdapter" /> instance.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDrop.GetAdapter(System.Windows.UIElement)">
            <summary>
            Get the adapter instance for the given target element.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDrop.SetAdapter(System.Windows.UIElement,Ion.Core.Toolkit.DragDrop.DragDropAdapter)">
            <summary>
            Set the adapter instance for the given target element.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.DragDrop.DragDrop.DragStart">
            <summary>
            Event raised when a <see cref="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragStart(Ion.Core.Toolkit.DragDrop.DragContext)" /> mehod is called
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.IsDragSourceProperty">
            <summary>
            The "IsDragSource" attached property. If set to <c>true</c> it will enable the <see cref="T:System.Windows.UIElement" /> to which it's attached
            to behave as a source of data in Drag and Drop operations.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.FallbackToDefaultVisualFeedbackProperty">
            <summary>
            The FallbackToDefaultVisualFeedback attached property. 
            If set to <c>true</c> and no Visual Feedback is provided during DnD oprations a default one will be generated.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.AllowSelfDropProperty">
            <summary>
            The AllowSelfDrop attached property. If set to <c>true</c> allows a DragSource 
            to receive drop events on itself (provided that the <see cref="F:Ion.Core.Toolkit.DragDrop.DragDrop.IsDropTargetProperty" /> is set to true as well).
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.RemoveDataItemOnSuccessfulDropProperty">
            <summary>
            The RemoveDataItemOnSuccessfulDrop attached property. If set to <c>true</c> 
            the Drag and Drop infrastructure will try to remove from the source item collection
            any data item succesfully dropped on a target and originated from this DragSource.
            This of course only makes sense when dragging and dropping from and to controls directly supported by
            the Dnd infrastructure.
            </summary>
            <seealso cref="F:Ion.Core.Toolkit.DragDrop.DragDrop.AutomaticallyInsertDropItemsProperty" />
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.SourceGroupsProperty">
            <summary>
            A collection of groups. If any of these groups are contained in the drop target, the drop operation can take place.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.DragStartCommandProperty">
            <summary>
            The command that will be executed when the <see cref="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragStart(Ion.Core.Toolkit.DragDrop.DragContext)" /> method is called.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.DragDrop.DragDrop.Drop">
            <summary>
            Event raised when a <see cref="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDrop(Ion.Core.Toolkit.DragDrop.DragContext)" /> mehod is called
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.DragDrop.DragDrop.DragEnter">
            <summary>
            Event raised when a <see cref="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragEnter(Ion.Core.Toolkit.DragDrop.DragContext)" /> mehod is called
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.DragDrop.DragDrop.DragOver">
            <summary>
            Event raised when a <see cref="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragOver(Ion.Core.Toolkit.DragDrop.DragContext)" /> mehod is called
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.DragDrop.DragDrop.DragLeave">
            <summary>
            Event raised when a <see cref="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragLeave(Ion.Core.Toolkit.DragDrop.DragContext)" /> mehod is called
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.TargetGroupsProperty">
            <summary>
            A collection of groups. If any of these groups are contained in the source target, the drop operation can take place.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.IsDropTargetProperty">
            <summary>
            The "IsDropTarget" attached property. If set to <c>true</c> it will enable the <see cref="T:System.Windows.UIElement" /> to which it's attached
            to behave as a drop target in Drag and Drop operations.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.AutomaticallyInsertDropItemsProperty">
            <summary>
            The AutomaticallyInsertDropItems attached property. If set to <c>true</c> 
            the Drag and Drop infrastructure will try to insert to the target item collection
            any data item succesfully dragged from a target.
            This of course only makes sense when dragging and dropping from and to controls directly supported by
            the Dnd infrastructure. 
            </summary>
            <seealso cref="F:Ion.Core.Toolkit.DragDrop.DragDrop.RemoveDataItemOnSuccessfulDropProperty" />
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.DropCommandProperty">
            <summary>
            The command that will be executed when the <see cref="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDrop(Ion.Core.Toolkit.DragDrop.DragContext)" /> method is called.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.DragOverCommandProperty">
            <summary>
            The command that will be executed when the <see cref="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragOver(Ion.Core.Toolkit.DragDrop.DragContext)" /> method is called.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.DragEnterCommandProperty">
            <summary>
            The command that will be executed when the <see cref="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragEnter(Ion.Core.Toolkit.DragDrop.DragContext)" /> method is called.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDrop.DragLeaveCommandProperty">
            <summary>
            The command that will be executed when the <see cref="M:Ion.Core.Toolkit.DragDrop.DragDropAdapter.OnDragLeave(Ion.Core.Toolkit.DragDrop.DragContext)" /> method is called.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.DragDropEffects">
            <summary>
            Specifies the effects of a drag-and-drop operation.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDropEffects.None">
            <summary>
            The drop target does not accept the data.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDropEffects.Copy">
            <summary>
            The data is copied to the drop target.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDropEffects.Move">
            <summary>
            The data from the drag source is moved to the drop target.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDropEffects.All">
            <summary>
            Any effect is valid.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.DragDrop.DragDropHelper.s_roots">
            <summary>
            Root subscribed for key handling
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDropHelper.GetRoots">
            <summary>
            Get all SILVERLIGHT roots
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.DragDropHelper.DragCancel">
            <summary>
            Cancel the current drag and drop operation and release resources
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.DragDropEventArgs">
            <summary>
            Arguemnts for the <see cref="T:Ion.Core.Toolkit.DragDrop.DragDrop" /> static events.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.DragFeedback">
            <summary>
            Contains all the drag operation details
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DragFeedback.DraggedContentPreview">
            <summary>
            Get/set a copy of the original source as a preview
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DragFeedback.AllowedEffects">
            <summary>
            Get/set the allowed drag effects
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.DropFeedback">
            <summary>
            Holds drop feedback related information.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DropFeedback.DropInsertionPreview">
            <summary>
            Get/set the visual preview of the insertion point
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DropFeedback.Effects">
            <summary>
            Gets/sets the intended effect for a droptarget.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.DropFeedback.Position">
            <summary>
            The drop feedback position.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.EnumerableExtensions">
            <summary>
            A set of extension methods for the sequence class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.EnumerableExtensions.Iterate``1(``0,System.Func{``0,``0})">
            <summary>
            Produces a sequence of items using a seed value and iteration 
            method.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="value">The initial value.</param>
            <param name="next">The iteration function.</param>
            <returns>A sequence of items using a seed value and iteration 
            method.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.EnumerableExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Prepend an item to a sequence.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to append the item to.</param>
            <param name="value">The item to append to the sequence.</param>
            <returns>A new sequence.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.EnumerableExtensions.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            Accepts two sequences and applies a function to the corresponding 
            values in the two sequences.
            </summary>
            <typeparam name="T0">The type of the first sequence.</typeparam>
            <typeparam name="T1">The type of the second sequence.</typeparam>
            <typeparam name="R">The return type of the function.</typeparam>
            <param name="enumerable0">The first sequence.</param>
            <param name="enumerable1">The second sequence.</param>
            <param name="func">The function to apply to the corresponding values
            from the two sequences.</param>
            <returns>A sequence of transformed values from both sequences.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.EnumerableExtensions.MaxOrNull``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.IComparable})">
            <summary>
            Returns the maximum value in the stream based on the result of a
            project function.
            </summary>
            <typeparam name="T">The stream type.</typeparam>
            <param name="that">The stream.</param>
            <param name="projectionFunction">The function that transforms the
            item.</param>
            <returns>The maximum value or null.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.EnumerableExtensions.MaxOrNullable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the maximum value or null if sequence is empty.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to retrieve the maximum value from.
            </param>
            <returns>The maximum value or null.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.EnumerableExtensions.MinOrNullable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the minimum value or null if sequence is empty.
            </summary>
            <typeparam name="T">The type of the sequence.</typeparam>
            <param name="that">The sequence to retrieve the minimum value from.
            </param>
            <returns>The minimum value or null.</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.Group">
            <summary>
            Groups are identified by an unique name. See <see cref="F:Ion.Core.Toolkit.DragDrop.DragDrop.TargetGroupsProperty" /> and <see cref="F:Ion.Core.Toolkit.DragDrop.DragDrop.SourceGroupsProperty" />
            for usage.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.DragDrop.Group.Id">
            <summary>
            Get/set the ID of the group
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.GroupCollection">
            <summary>
            A collection of <see cref="T:Ion.Core.Toolkit.DragDrop.Group" /> items.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.ListBoxDragDropAdapter">
            <summary>
            A <see cref="T:Ion.Core.Toolkit.DragDrop.DragDropAdapter" /> used to deal with <see cref="T:System.Windows.Controls.ListBox" />es. 
            This is one of the default adapters automatically registered by the Dnd infrastructure.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ListBoxDragDropAdapter.RemoveDataItemFromSource(System.Windows.UIElement,System.Object)">
            <summary>
            Remove an item from the item collection
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ListBoxDragDropAdapter.CanDrop(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Check if the current context can be dropped
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ListBoxDragDropAdapter.AddDataItemToSource(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Add an item to the item collection
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ListBoxDragDropAdapter.AutomaticallyReorderDropItem(Ion.Core.Toolkit.DragDrop.DragContext)">
            <summary>
            Reorder the source list
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ListBoxDragDropAdapter.GetItemsControlAncestor(System.Windows.DependencyObject)">
            <summary>
            Returns the items control ancestor of a dependency object.
            </summary>
            <param name="dependencyObject">The dependency object to retrieve the
            element for.</param>
            <returns>The items control ancestor of the dependency object.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.DragDrop.ListBoxDragDropAdapter.FindLastVisibleItem(System.Windows.Controls.ItemsControl,System.Windows.Controls.ItemCollection)">
            <summary>
            returns the last visible item in case the mouse is placed below
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.DragDrop.StringToGroupsConverter">
            <summary>
            For internal use only
            </summary>
            <exclude />
        </member>
        <member name="T:Ion.Core.Toolkit.Extensions.System.DateTimeExtensions">
            <summary>
            Extensions for the <see cref="T:System.DateTime" /> type.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DateTimeExtensions.IsRegular(System.Nullable{System.DateTime})">
            <summary>
            Returns true only if the nullable DateTime has a value and that value 
            <see cref="M:Ion.Core.Toolkit.Extensions.System.DateTimeExtensions.IsRegular(System.DateTime)" />.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DateTimeExtensions.IsRegular(System.DateTime)">
            <summary>
            Returns true only if the value is not <see cref="F:System.DateTime.MinValue" /> nor 
            <see cref="F:System.DateTime.MaxValue" />.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DateTimeExtensions.GetSecond(System.DateTime)">
            <summary>
            Gets the "Second" part of the date expressed as a double.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DateTimeExtensions.GetMinute(System.DateTime)">
            <summary>
            Gets the "Minute" part of the date expressed as a double.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DateTimeExtensions.GetHour(System.DateTime)">
            <summary>
            Gets the "Hour" part of the date expressed as a double.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DateTimeExtensions.GetDay(System.DateTime)">
            <summary>
            Gets the "Day" part of the date expressed as a double.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DateTimeExtensions.GetMonth(System.DateTime)">
            <summary>
            Gets the "Month" part of the date expressed as a double.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DateTimeExtensions.GetYear(System.DateTime)">
            <summary>
            Gets the "Year" part of the date expressed as a double.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:Ion.Core.Toolkit.Extensions.System.DoubleExtensions">
            <summary>
            Extensions for the <see cref="T:System.Double" /> type.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.Multiply(System.Windows.Point,System.Windows.Point)">
            <summary>
            DotProduct
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.Multiply(System.Windows.Point,System.Double)">
            <summary>
            Multiply
            </summary>
            <param name="a"></param>
            <param name="factor"></param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.IsRegular(System.Windows.Point)">
            <summary>
            Returns true only if both X and Y values are not NaN, nor Infinity.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.Denoise(System.Double)">
            <summary>
            Removes the noise from this double.
            </summary>
            <param name="value">The value.</param>
            <returns>A double without a noise.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.GrowToMultipleOf(System.Double,System.Double)">
            <summary>
            Grows the specified value to the next multiple of the specified interval.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.ShrinkToMultipleOf(System.Double,System.Double)">
            <summary>
            Shrinks the specified value to the previous multiple of the specified interval.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.IsRegular(System.Nullable{System.Double})">
            <summary>
            Returns true only if the nullable double has a value and that value <see cref="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.IsRegular(System.Double)" />.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.IsRegular(System.Double)">
            <summary>
            Returns true only if the value is not NaN, nor Infinity.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.Clip(System.Double,System.Double,System.Double)">
            <summary>
            (Possibly) clips the value between <paramref name="min" /> and <paramref name="max" />.
            </summary>
            <param name="d">The value to be clipped.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns>The clipped value.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.DoubleExtensions.Clip(System.Int32,System.Int32,System.Int32)">
            <summary>
            (Possibly) clips the value between <paramref name="min" /> and <paramref name="max" />.
            </summary>
            <param name="d">The value to be clipped.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns>The clipped value.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.ObjectExtensions.NameOf(System.Object,System.Linq.Expressions.Expression{System.Func{System.Object}})">
            <summary>
            Gets the property name from an expression like: ()=&gt;whatever.TheProperty.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Extensions.System.TimeSpanExtensions">
            <summary>
            Extensions for the <see cref="T:System.TimeSpan" /> type.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.GetVisualChildrenAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree children of an element and the element itself.
            </returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.GetLogicalChildren(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical children of a framework element using a 
            breadth-first search. For performance reasons this method manually 
            manages the stack instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.GetLogicalDescendents(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical descendents of a framework element using a 
            breadth-first search. For performance reasons this method manually 
            manages the stack instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.AddDoubleClickHandler(System.Windows.UIElement,System.Windows.Input.MouseButtonEventHandler)">
            <summary>
            Adds a double click event handler.
            </summary>
            <param name="element">The Element to listen for double clicks on.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.AddSingleClickHandler(System.Windows.UIElement,System.Windows.Input.MouseButtonEventHandler)">
            <summary>
            Adds a single click event handler.
            </summary>
            <param name="element">The Element to listen for double clicks on.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.RemoveSingleClickHandler(System.Windows.UIElement,System.Windows.Input.MouseButtonEventHandler)">
            <summary>
            Removes a single click event handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.RemoveDoubleClickHandler(System.Windows.UIElement,System.Windows.Input.MouseButtonEventHandler)">
            <summary>
            Removes a double click event handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.TabNext(System.Windows.DependencyObject)">
            <summary>
            Perform an explicit TAB move to the next element
            </summary>
            <param name="parent">The parent item on which children collection the TAB operation will be performed.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.TabPrev(System.Windows.DependencyObject)">
            <summary>
            Perform an explicit TAB move to the previous element
            </summary>
            <param name="parent">The parent item on which children collection the TAB operation will be performed.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.DoTabOperation(System.Windows.Input.FocusNavigationDirection)">
            <summary>
            Perform an explicit TAB move to the another child control
            </summary>
            <param name="direction">The intended direction of the focus traversal, as a value of the enumeration.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.System.Windows.UIElementExtensions.TraverseBreadthFirst``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,System.Boolean})">
            <summary>
            Traverses a tree by accepting an initial value and a function that 
            retrieves the child nodes of a node.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="initialNode">The initial node.</param>
            <param name="getChildNodes">A function that retrieves the child
            nodes of a node.</param>
            <param name="traversePredicate">A predicate that evaluates a node
            and returns a value indicating whether that node and it's children
            should be traversed.</param>
            <returns>A stream of nodes.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Extensions.DelegateExtensions.CheckEventHasNoSubscribers(System.Delegate)">
            <summary>
            Detects whether an event has any subscribers
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Helpers.IExecuteWithObject">
            <summary>
            This interface is meant for the <see cref="T:Ion.Core.Toolkit.Helpers.WeakAction`1" /> class and can be 
            useful if you store multiple WeakAction{T} instances but don't know in advance
            what type T represents.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.IExecuteWithObject.ExecuteWithObject(System.Object)">
            <summary>
            Executes an action.
            </summary>
            <param name="parameter">A parameter passed as an object,
            to be casted to the appropriate type.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Helpers.TaskRunner">
            <summary>
            Executes an action on a background thread on a timer basis
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.TaskRunner.Action">
            <summary>
            Action to perform
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.TaskRunner.Interval">
            <summary>
            Execution interval
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.TaskRunner.IsRunning">
            <summary>
            Gets the running state
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.TaskRunner.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.TaskRunner.Start">
            <summary>
            Starts the runner
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.TaskRunner.Stop">
            <summary>
            Stops the runner
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Helpers.TkWeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of rootInstance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:Ion.Core.Toolkit.Helpers.TkWeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the rootInstance listening for the event.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Helpers.TkWeakEventListener`3._weakSource">
            <summary>
            To hold a reference to source object. With this instance the WeakEventListener 
            can guarantee that the handler get unregistered when listener is released.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Helpers.TkWeakEventListener`3._onEventAction">
            <summary>
            Delegate to the method to call when the event fires.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Helpers.TkWeakEventListener`3._onDetachAction">
            <summary>
            Delegate to the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.TkWeakEventListener`3.#ctor(`0,`1)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Type of the instance subscribing to the event.</param>
            <param name="source">Type of the source generating the event</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.TkWeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.TkWeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.TkWeakEventListener`3.OnEvent(System.Object,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.TkWeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Helpers.WeakAction">
            <summary>
            Stores an <see cref="P:Ion.Core.Toolkit.Helpers.WeakAction.Action" /> without causing a hard reference
            to be created to the Action's owner. The owner can be garbage collected at any time.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakAction.#ctor(System.Object,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Ion.Core.Toolkit.Helpers.WeakAction" /> class.
            </summary>
            <param name="target">The action's owner.</param>
            <param name="action">The action that will be associated to this instance.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakAction.Action">
            <summary>
            Gets the Action associated to this instance.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakAction.IsAlive">
            <summary>
            Gets a value indicating whether the Action's owner is still alive, or if it was collected
            by the Garbage Collector already.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakAction.Target">
            <summary>
            Gets the Action's owner. This object is stored as a <see cref="T:System.WeakReference" />.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakAction.Execute">
            <summary>
            Executes the action. This only happens if the action's owner
            is still alive.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakAction.MarkForDeletion">
            <summary>
            Sets the reference that this instance stores to null.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Helpers.WeakAction`1">
            <summary>
            Stores an <see cref="T:System.Action`1" /> without causing a hard reference
            to be created to the Action's owner. The owner can be garbage collected at any time.
            </summary>
            <typeparam name="T">The type of the Action's parameter.</typeparam>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakAction`1.#ctor(System.Object,System.Action{`0})">
            <summary>
            Initializes a new instance of the WeakAction class.
            </summary>
            <param name="target">The action's owner.</param>
            <param name="action">The action that will be associated to this instance.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakAction`1.Action">
            <summary>
            Gets the Action associated to this instance.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakAction`1.Execute">
            <summary>
            Executes the action. This only happens if the action's owner
            is still alive. The action's parameter is set to default(T).
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakAction`1.Execute(`0)">
            <summary>
            Executes the action. This only happens if the action's owner
            is still alive.
            </summary>
            <param name="parameter">A parameter to be passed to the action.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakAction`1.ExecuteWithObject(System.Object)">
            <summary>
            Executes the action with a parameter of type object. This parameter
            will be casted to T. This method implements <see cref="M:Ion.Core.Toolkit.Helpers.IExecuteWithObject.ExecuteWithObject(System.Object)" />
            and can be useful if you store multiple WeakAction{T} instances but don't know in advance
            what type T represents.
            </summary>
            <param name="parameter">The parameter that will be passed to the action after
            being casted to T.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Helpers.WeakEventListener`3">
             <summary>
             Implements a weak event listener that allows the owner to be garbage
             collected if its only remaining link is an event handler.
             </summary>
             <typeparam name="TSource">Type of source for the event.</typeparam>
             <typeparam name="TTarget">Type of target listening for the event.</typeparam>
             <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
             <example>
             Initially, the code must be used in this way: 
             <para />
             <code>
              <![CDATA[
                 var source = new EventSource();
                 var listener = new EventListener();
            
                 WeakEventListener<EventListener, EventSource, EventArgs>.SubscribeToWeakEvent(listener, source, "Event", listener.OnEvent);
             ]]>
             </code>
             </example>
        </member>
        <member name="T:Ion.Core.Toolkit.Helpers.WeakEventListener`3.OpenInstanceHandler">
            <summary>
            Open instance delegate which allows the creation of an instance method without an actual reference
            to the target.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Helpers.WeakEventListener`3.DefaultEventBindingFlags">
            <summary>
            The default binding flags used to retrieve the events.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Helpers.WeakEventListener`3._weakTarget">
            <summary>
            WeakReference to the target listening for the event.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Helpers.WeakEventListener`3._weakSource">
            <summary>
            To hold a reference to source object. With this instance the WeakEventListener 
            can guarantee that the handler get unregistered when listener is released.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Helpers.WeakEventListener`3._automaticallySubscribedEventName">
            <summary>
            The event name this listener is automatically subscribed to. If this value is <c>null</c>, the
            listener is not automatically registered to any event.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Helpers.WeakEventListener`3._internalEventDelegate">
            <summary>
            Delegate that needs to be unsubscribed when registered automatically.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakEventListener`3.#ctor(`0,`1)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="target">Instance subscribing to the event, should be <c>null</c> for static event handlers.</param>
            <param name="source">The source of the event, should be <c>null</c> for static events.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakEventListener`3.OnStaticEventAction">
            <summary>
            Gets or sets the method to call when the static event fires.
            </summary>
            <value>The on static event action.</value>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakEventListener`3.Target">
            <summary>
            Gets the target or <c>null</c> if there is no target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakEventListener`3.Source">
            <summary>
            Gets the source or <c>null</c> if there is no source.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakEventListener`3.IsSourceAlive">
            <summary>
            Gets a value indicating whether the event source has not yet been garbage collected.
            </summary>
            <value>
            	<c>true</c> if the event source has not yet been garbage collected; otherwise, <c>false</c>.
            </value>
            <remarks>
            In case of static events, this property always returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakEventListener`3.IsTargetAlive">
            <summary>
            Gets a value indicating whether the event target has not yet been garbage collected.
            </summary>
            <value>
            	<c>true</c> if the event target has not yet been garbage collected; otherwise, <c>false</c>.
            </value>
            <remarks>
            In case of static event handlers, this property always returns <c>false</c>.
            </remarks>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakEventListener`3.IsStaticEvent">
            <summary>
            Gets a value indicating whether this instance represents a static event.
            </summary>
            <value>
            	<c>true</c> if this instance represents a static event; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ion.Core.Toolkit.Helpers.WeakEventListener`3.IsStaticEventHandler">
            <summary>
            Gets a value indicating whether this instance represents a static event handler.
            </summary>
            <value>
            	<c>true</c> if this instance represents a static event handler; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakEventListener`3.SubscribeToWeakEvent(`0,`1,System.String,System.EventHandler{`2})">
            <summary>
            Subscribes to a weak event by using one single method. This method also takes care of automatic
            unsubscription of the event.
            </summary>
            <param name="target">Instance subscribing to the event, should be <c>null</c> for static event handlers.</param>
            <param name="source">The source of the event, should be <c>null</c> for static events.</param>
            <param name="eventName">Name of the event.</param>
            <param name="handler">The handler to execute when the event occurs.</param>
            <returns>
            The created event listener 
            </returns>
            <remarks>
            This is a convenience method. This method wraps the "long" subscription code into one single method call.
            </remarks>
            <exception cref="T:System.ArgumentException">The <paramref name="eventName" /> is <c>null</c> or whitespace.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="handler" /> is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="source" /> and <paramref name="target" /> are both <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="eventName" /> does not exist or not accessible.</exception>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakEventListener`3.SubscribeToEvent(System.Object,System.String)">
            <summary>
            Subscribes to the specific event. If the event occurs, the <see cref="M:Ion.Core.Toolkit.Helpers.WeakEventListener`3.OnEvent(System.Object,`2)" /> method will be invoked.
            </summary>
            <param name="source">The source of the event, should be <c>null</c> for static events.</param>
            <param name="eventName">Name of the event.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="eventName" /> is <c>null</c> or whitespace.</exception>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakEventListener`3.UnsubscribeFromEvent(System.Object,System.String)">
            <summary>
            Unsubscribes from the specific event. If the event occurs, the <see cref="M:Ion.Core.Toolkit.Helpers.WeakEventListener`3.OnEvent(System.Object,`2)" /> method will no longer be invoked.
            </summary>
            <param name="source">The source of the event, should be <c>null</c> for static events.</param>
            <param name="eventName">Name of the event.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source" /> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="eventName" /> is <c>null</c> or whitespace.</exception>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakEventListener`3.OnEvent(System.Object,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakEventListener`3.EnsureIsNotNull(System.String,System.Object)">
            <summary>
            Determines whether the specified argument is not <c>null</c>.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <param name="paramValue">Value of the parameter.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="paramValue" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Ion.Core.Toolkit.Helpers.WeakEventListener`3.EnsureIsNotNullOrWhitespace(System.String,System.String)">
            <summary>
            Determines whether the specified argument is not <c>null</c> or a whitespace.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <param name="paramValue">Value of the parameter.</param>
            <exception cref="T:System.ArgumentException">If <paramref name="paramValue" /> is <c>null</c> or a whitespace.</exception>
        </member>
        <member name="T:Ion.Core.Toolkit.ICleanup">
            <summary>
            Defines a common interface for classes that should be cleaned up,
            but without the implications that IDisposable presupposes. An instance
            implementing ICleanup can be cleaned up without being
            disposed and garbage collected.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.ICleanup.Cleanup">
            <summary>
            Cleans up the instance, for example by saving its state,
            removing resources, etc...
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.CacheSettings.#ctor">
            <summary>
            ONLY use this overload if you want a message to stay in cache indefinitely. If you do this
            you must make sure to explicitly remove the message from cache
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.RegisterForMessage``1(System.Action{``0})">
            <summary>
            Register for the message by Type T. No name is given so the one will be generated internally
            </summary>
            <param name="callback">The delegate to invoke when the specified message is raised</param>
            <returns>a MessageToken to be used to unregister for the message and to verify subscription</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.RegisterForMessage``1(System.String,System.Action{``0})">
            <summary>
            Register for the specified message. When the specified message is broadcast the subscribers delegate
            will be invoked
            </summary>
            <param name="message">The message to subscribe to</param>
            <param name="callback">The delegate to invoke when the specified message is raised</param>
            <returns>a MessageToken to be used to unregister for the message and to verify subscription</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.RegisterForMessage``1(System.String,System.Action{``0},System.Boolean)">
            <summary>
            Register for the specified message. When the specified message is broadcast the subscribers delegate
            will be invoked
            </summary>
            <param name="message">The message to subscribe to</param>
            <param name="callback">The delegate to invoke when the specified message is raised</param>
            <param name="excludeCachedMessages">Opt out of receiving cached messages</param>
            <returns>a MessageToken to be used to unregister for the message and to verify subscription</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.RegisterForMessage(System.String,System.Action)">
            <summary>
            Register for a message only by name.
            </summary>
            <param name="message">the message name</param>
            <param name="callback">the handler to raise when the message is broadcast</param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.UnRegisterForMessage(Ion.Core.Toolkit.Messaging.MessageToken)">
            <summary>
            Remove the subscription from the messenger to prevent any future messages from being dispatched to the 
            specified tokens endpoint 
            </summary>
            <param name="token">The token that identifies the subscriber to remove</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.IsSubscribed(Ion.Core.Toolkit.Messaging.MessageToken)">
            <summary>
            Look to see if the specified token is listed as a subscriber
            </summary>
            <param name="token">The token to check</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.IsCached(System.String)">
            <summary>
            Given a message will tell you if there is a message that matches in the cache
            </summary>
            <param name="message">The message to look for in the cache</param>
            <returns>True if there is one ion cache that matches, otherwise false</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.RemoveFromCache(Ion.Core.Toolkit.Messaging.MessageToken)">
            <summary>
            Given a message token the messenger will remove the specified message from cache regardless of 
            what the cache settings are. Use this method when you are caching a message indefinitely or if 
            you want preempt the normal cache expiration pipeline
            </summary>
            <param name="token">The message token returned from the BroadcastMessage method call</param>
            <returns>True if the removal suceeded False if the removal failed (i.e. the message is still in cache)</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.BroadcastMessage``1(``0)">
            <summary>
            Given a parameter the messenger will broadcast this message to all subscribers that are registered
            </summary>
            <typeparam name="T">The type of the parameter (payload) being passed</typeparam>
            <param name="parameter">the payload of the message</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.BroadcastMessage``1(System.String,``0)">
            <summary>
            Given a message key, and a parameter the messenger will broadcast this message to all subscribers that are registered
            </summary>
            <typeparam name="T">The type of the parameter (payload) being passed</typeparam>
            <param name="message">The name of the message</param>
            <param name="parameter">the payload of the message</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.BroadcastMessage(System.String,Ion.Core.Toolkit.Messaging.CacheSettings)">
            <summary>
            Given a message key, and cache settings the messenger will broadcast this message
            to all subscribers that are registered
            </summary>
            <param name="message">The name of the message</param>
            <param name="cacheOptions">The cache settings for this message</param>
            <returns>A message token for the cached message. This token can be used to explicitly remove the message from cache</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Messaging.Messenger.BroadcastMessage``1(System.String,``0,Ion.Core.Toolkit.Messaging.CacheSettings)">
            <summary>
            Given a message key, a parameter, and cache settings the messenger will broadcast this message
            to all subscribers that are registered
            </summary>
            <typeparam name="T">The type of the parameter (payload) being passed</typeparam>
            <param name="message">The name of the message</param>
            <param name="parameter">the payload of the message</param>
            <param name="cacheOptions">The cache settings for this message</param>
            <returns>A message token for the cached message. This token can be used to explicitly remove the message from cache</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.Persistence.IMemento`1">
            <summary>
            Implemented by objects which support the "Memento" pattern.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Persistence.IMemento`1.SaveState">
            <summary>
            Saves the "Memento" object.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Persistence.IMemento`1.RestoreState(`0)">
            <summary>
            Restores the "Memento" object.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Properties.Resources.EXC_DoubleNotRegular">
            <summary>
              Looks up a localized string similar to Must be a regular double..
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Properties.Resources.Exc_DragDropContextLocked">
            <summary>
              Looks up a localized string similar to The DragContext cannot be changed at this time.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Properties.Resources.NumericUpDown_EnsureValidDoubleValue_InvalidDoubleValue">
            <summary>
              Looks up a localized string similar to Invalid double value '{0}': valid value is of double type and within decimal range..
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Properties.Resources.NumericUpDown_EnsureValidIncrementValue_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Increment value '{0}': valid value is of double type, within decimal range, and positive.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Properties.Resources.NumericUpDown_OnDecimalPlacesPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid DecimalPlaces value '{0}': valid value is of int type and within 0 and 15 inclusive..
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Properties.Resources.Spinner_SpinNotValid">
            <summary>
              Looks up a localized string similar to Spin action is not valid at this moment..
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ApplicationThemeClient">
            <summary>
            Wraps the Application.Client into an IThemeSelectorClient interface
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.AsyncPrepare.PreparerBase.Callback">
            <summary>
            An optional user callback; that callback won't be called
            but can be retrieved by the user for a later call
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.PreparerBase.ExecuteUserCallback">
            <summary>
            Execute the specified user callback, if available
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPreparer">
            <summary>
            Receives one or more ThemeParts and prepares them asynchronously
            for a subsequent synchronous load
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPreparer.ThemeParts">
            <summary>
            List of IThemeParts
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPreparer.#ctor(Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPrepareCompletedHandler,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="callback">The callback that will be called on the caller
            when all the parts have been prepared</param>
            <param name="forcePartsLoading">Force parts loading</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPreparer.#ctor(Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPrepareCompletedHandler)">
            <summary>
            Constructor
            </summary>
            <param name="callback">The callback that will be called on the caller
            when all the parts have been prepared</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPreparer.Init(System.Collections.Generic.IEnumerable{Ion.Core.Toolkit.Theming.Interfaces.IThemePart})">
            <summary>
            Initialize the preparer collecting all the Parts to prepare
            </summary>
            <param name="themePart">A list of ThemePart to prepare</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPreparer.Init(Ion.Core.Toolkit.Theming.Interfaces.IThemePart)">
            <summary>
            Initialize the preparer
            </summary>
            <param name="themePart">The part to prepare</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPreparer.Prepare">
            <summary>
            Asynchronously prepare the parts of the theme parts
            </summary>
            <returns>True if the operation started, false otherwise</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPreparer.FinalizeSynchronousLoad">
            <summary>
            Synchronizes with the UI thread and loads the resources of the ThemeParts
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPreparer.ThemePartLoad">
            <summary>
            Generic function used to load theme parts; it checks if the part load should be deferred
            due to its module name
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePartPreparer.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePreparer">
            <summary>
            Receives a Theme and prepares asynchronously all its parts
            for a subseqent synchronous load 
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePreparer.#ctor(Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePrepareCompletedHandler)">
            <summary>
            Constructor
            </summary>
            <param name="callbackDelegate">The callback that will be called on the caller
            when all the parts have been prepared</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePreparer.Init(Ion.Core.Toolkit.Theming.Theme)">
            <summary>
            Initialize the preparer
            </summary>
            <param name="theme">The theme which parts will be loaded</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePreparer.Prepare">
            <summary>
            Asynchronously prepare the parts of the theme
            </summary>
            <returns>True if the operation started, false otherwise</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.AsyncPrepare.ThemePreparer.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.DispatcherResources">
            <summary>
            Collects all the resources related to clients
            belonging to a same Dispatcher.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.DispatcherResources.LoadResource(Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient,Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo)">
            <summary>
            Loads a resource into a client
            </summary>
            <param name="client">The client asking for the resource</param>
            <param name="info">Resource info</param>
            <returns>The rosource or null</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.DispatcherResources.ReleaseResource(Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient,Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo)">
            <summary>
            Removes a resource from a client
            </summary>
            <param name="client">The client releasing the resource</param>
            <param name="info">Resource info</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.DispatcherResources.ReleaseClient(Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient)">
            <summary>
            Releases all the resources of a client
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ResourcesManager">
            <summary>
            Manages clients resources for each Dispatcher
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ResourcesManager.LoadResource(Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient,Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo)">
            <summary>
            Loads a resource into a client
            </summary>
            <param name="client">Client</param>
            <param name="info">Resource info</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ResourcesManager.ReleaseResource(Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient,Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo)">
            <summary>
            Removes a resource from a client
            </summary>
            <param name="client">Client</param>
            <param name="info">Resource info</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ResourcesManager.RemoveClient(Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient)">
            <summary>
            Releases all the resources used by a client
            </summary>
            <param name="client">The client releasing all its resources</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ResourceStore">
            <summary>
            Wraps a single ResourceDictionary and a list
            of clients that are using it.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ResourceStore.AddClient(Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient)">
            <summary>
            <para>Loads the resource into a client.</para>
            <para>If this client already loaded the resource, it does nothing</para>
            </summary>
            <param name="client">The client</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ResourceStore.RemoveClient(Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient)">
            <summary>
            Removes a resource from a client
            </summary>
            <param name="client">The client releasing the resource</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.WindowThemeClient">
            <summary>
            A theme client wrapper that associate a Window and a private
             set of Resources that can be unloaded on demand. 
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.AcceptNullValueAttribute.#ctor(System.Boolean)">
            <summary>
            Define the ThemeControlAttribute
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.AcceptNullValueAttribute.SupportsNullValue">
            <summary>
             Get Whether is there is support for NoColor
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ErrorBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ErrorBrushProperty">
            <summary>
            ErrorBrush Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.WarningBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.WarningBrushProperty">
            <summary>
            WarningBrush Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.InfoBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.InfoBrushProperty">
            <summary>
            InfoBrush Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.DashboardBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.DashboardBackgroundProperty">
            <summary>
            DashboardBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.WidgetMinHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.WidgetMinHeightProperty">
            <summary>
            WidgetMinHeight Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.Background">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.BackgroundProperty">
            <summary>
            Background Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.DisabledOverlayBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.DisabledOverlayBackgroundProperty">
            <summary>
            DisabledOverlayBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.Foreground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ForegroundProperty">
            <summary>
            Foreground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.IconForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.IconForegroundProperty">
            <summary>
            IconForeground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.HighlightForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.HighlightForegroundProperty">
            <summary>
            HighlightForeground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.AccentPrimaryBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.AccentPrimaryBrushProperty">
            <summary>
            AccentPrimaryBrush Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.AccentSecondaryBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.AccentSecondaryBrushProperty">
            <summary>
            AccentSecondaryBrush Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TextBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TextBackgroundProperty">
            <summary>
            TextBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.CaretBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.CaretBrushProperty">
            <summary>
            TextBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.CaptionForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.CaptionForegroundProperty">
            <summary>
            CaptionForeground Dependency Property.
            </summary>
            
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.SecondaryActionForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.SecondaryActionForegroundProperty">
            <summary>
            SecondaryActionBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.SecondaryActionBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.SecondaryActionBackgroundProperty">
            <summary>
            SecondaryActionBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.DisabledForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.DisabledForegroundProperty">
            <summary>
            DisabledForeground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.DisabledBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.DisabledBackgroundProperty">
            <summary>
            DisabledBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.DisabledIconFill">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.DisabledIconFillProperty">
            <summary>
            DisabledBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.EnabledIconFill">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.EnabledIconFillProperty">
            <summary>
            DisabledBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TextSelectionForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TextSelectionForegroundProperty">
            <summary>
            TextSelectionForeground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TextSelectionBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TextSelectionBackgroundProperty">
            <summary>
            TextSelectionBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.FontFamily">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.FontFamilyProperty">
            <summary>
            FontFamily Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.FontSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.FontSizeProperty">
            <summary>
            FontSize Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ControlBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ControlBackgroundProperty">
            <summary>
            ControlBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.SecondaryControlBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.SecondaryControlBackgroundProperty">
            <summary>
            ControlBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ControlBorderBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ControlBorderBrushProperty">
            <summary>
            ControlBorderBrush Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ControlBorderBrushHover">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ControlBorderBrushHoverProperty">
            <summary>
            ControlBorderBrush Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ControlCornerRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.ControlCornerRadiusProperty">
            <summary>
            ControlCornerRadius Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.HeaderBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.HeaderBackgroundProperty">
            <summary>
            HeaderBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.HeaderForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.HeaderForegroundProperty">
            <summary>
            HeaderForeground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.HeaderOverlayBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.HeaderOverlayBrushProperty">
            <summary>
            HeaderOverlayBrush Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableBackgroundProperty">
            <summary>
            TableBackground2 Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableForegroundProperty">
            <summary>
            TableForeground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableRowBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableRowBackgroundProperty">
            <summary>
            TableRowBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableAlternateRowBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableAlternateRowBackgroundProperty">
            <summary>
            TableAlternateRowBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableSelectionBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableSelectionBackgroundProperty">
            <summary>
            TableSelectionBackground Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontFamily">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontFamilyProperty">
            <summary>
            TableFontFamily Dependency Property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontSizeProperty">
            <summary>
            TableFontSize Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontStretchProperty">
            <summary>
            Identifies the TableFontStretch dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontStretch">
            <summary>
            TableFontStretch backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontStyleProperty">
            <summary>
            Identifies the TableFontStyle dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontStyle">
            <summary>
            TableFontStyle backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontWeightProperty">
            <summary>
            Identifies the TableFontWeight dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontWeight">
            <summary>
            TableFontWeight backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableColumnHeaderBackgroundProperty">
            <summary>
            Identifies the TableColumnHeaderBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableColumnHeaderBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableColumnHeaderForegroundProperty">
            <summary>
            Identifies the TableColumnHeaderForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableColumnHeaderForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableColumnHeaderBackgroundMouseOverProperty">
            <summary>
            Identifies the TableColumnHeaderBackgroundMouseOver dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableColumnHeaderBackgroundMouseOver">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableColumnHeaderBackgroundMousePressedProperty">
            <summary>
            Identifies the TableColumnHeaderBackgroundMousePressed dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableColumnHeaderBackgroundMousePressed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFlashingBackgroundProperty">
            <summary>
            Identifies the TableFlashingBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFlashingBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFlashingForegroundProperty">
            <summary>
            Identifies the TableFlashingForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFlashingForeground">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableNegativeValueForeground">
            <summary>
            Brush used for negative values in table, when the formatter enables the negative color (by default is red).
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableNegativeValueForegroundProperty">
            <summary>
            <see cref="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableNegativeValueForeground" /> Dependency Property.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontBrushProperty">
            <summary>
            Identifies the TableFontBrush dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableFontBrush">
            <summary>
            TableFontBrush backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableHorizontalGridLineForegroundProperty">
            <summary>
            Identifies the TableHorizontalGridLineForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableHorizontalGridLineForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableVerticalGridLineForegroundProperty">
            <summary>
            Identifies the TableVerticalGridLineForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.CoreThemeDefaults.TableVerticalGridLineForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.ElementHostThemeDefaults.ElementHostBackgroundProperty">
            <summary>
            Identifies the ElementHostBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.ElementHostThemeDefaults.ElementHostBackground">
            <summary>
            ElementHostBackground backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults">
            <summary>
            Defines the colors used by the ION Brand Logo
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults.Color1Property">
            <summary>
            Identifies the Color1 dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults.Color1">
            <summary>
            Color1 backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults.Color2Property">
            <summary>
            Identifies the Color2 dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults.Color2">
            <summary>
            Color2 backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults.Color3Property">
            <summary>
            Identifies the Color3 dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults.Color3">
            <summary>
            Color3 backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults.NucleusProperty">
            <summary>
            Identifies the Nucleus dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults.Nucleus">
            <summary>
            Nucleus backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults.StandAloneNucleusProperty">
            <summary>
            Identifies the StandAloneNucleus dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonBrandLogoDefaults.StandAloneNucleus">
            <summary>
            StandAloneNucleus backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.Defaults.IONPalette">
            <summary>
            Contains the ION Palette colors
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.Defaults.IonSpacingDefaults">
            <summary>
            ION theme spacing properties
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.IonSpacingDefaults.RegularSpaceProperty">
            <summary>
            Identifies the RegularSpace dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonSpacingDefaults.RegularSpace">
            <summary>
            RegularSpace backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.IonSpacingDefaults.NarrowSpaceProperty">
            <summary>
            Identifies the NarrowSpace dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonSpacingDefaults.NarrowSpace">
            <summary>
            NarrowSpace backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.IonSpacingDefaults.TinySpaceProperty">
            <summary>
            Identifies the TinySpace dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonSpacingDefaults.TinySpace">
            <summary>
            TinySpace backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.Defaults.IonBrandingDefaults">
            <summary>
            ION theme properties 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonBrandingDefaults.AccentColor">
            <summary>
            AccentColor backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonBrandingDefaults.Foreground">
            <summary>
            Foreground backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonBrandingDefaults.Background">
            <summary>
            Background backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults">
            <summary>
            ION theme properties 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.Error">
            <summary>
            Error backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.Warning">
            <summary>
            Warning backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.Info">
            <summary>
            Info backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.MessageNeutral">
            <summary>
            MessageNeutral backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.NeutralProperty">
            <summary>
            Identifies the Neutral dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.Neutral">
            <summary>
            Neutral backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.Foreground">
            <summary>
            The standard text color
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.Title">
            <summary>
            Title backing field
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.IconForeground">
            <summary>
            The standard icon color
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.MutedForeground">
            <summary>
            <para>Standard text color for labels.</para>
            <para>It's the muted version of the foreground color</para>
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.Background">
            <summary>
            The Application background color
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.PageBackground">
            <summary>
            The background color for dialogs and components
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.InputBackground">
            <summary>
            Background color for text-entry widgets
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.Branding">
            <summary>
            ION Branding Color
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.Border">
            <summary>
            Brush to use for controls with border; e.g.: TextBox, ComboBox, Buttons, ...
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.BorderFocused">
            <summary>
            Border color for focused controls
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.PrimaryActionBackground">
            <summary>
            Background brush for primary action "actuators"
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.PrimaryActionForeground">
            <summary>
            Foreground brush for primary action "actuators".
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.SecondaryActionBackground">
            <summary>
            Background brush for secondary action "actuators".
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.SecondaryActionForeground">
            <summary>
            Foreground brush for secondary action "actuators".
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.FontFamily">
            <summary>
            Standard FontFamily
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.IonThemeDefaults.FontSize">
            <summary>
            Standard FontSize
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.ThemeDefaultsBase.XName">
            <summary>
            A user-purpose symbolic name for this ThemeDefault
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.ThemeDefaultsBase.IsGlobalDefaultsSetter">
            <summary>
            True if this theme defaults class is meant to set its defaults as global for the current theme, 
            false otherwise
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.ThemeDefaultsBase.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.ThemeDefaultsBase.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.ThemeDefaultsBase.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.ThemeHiddenAttribute.#ctor(System.Boolean)">
            <summary>
            Define the ThemePage Group 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.ThemeHiddenAttribute.Hidden">
            <summary>
             Get the ThemePage Group 
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.ThemeItemAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Define the ThemeItem pair caption/description 
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.ThemeItemAttribute.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Define the ThemeItem pair caption/description 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.ThemeItemAttribute.Description">
            <summary>
             Get the ThemeItem Descrition 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.ThemeItemAttribute.Caption">
            <summary>
             Get the ThemeItem Caption 
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.ThemePageAttribute.#ctor(System.String)">
            <summary>
            Define the ThemePage Group 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.ThemePageAttribute.Name">
            <summary>
             Get the ThemePage Group 
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.ThemeSectionAttribute.#ctor(System.String)">
            <summary>
            Define the ThemeSection tab 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.ThemeSectionAttribute.Name">
            <summary>
             Get the ThemeSection tab 
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.Defaults.ThemeVisibility">
            <summary><beta><para>[** This API is preliminary and is subject to change **]</para></beta>
            The visibility scope of a theme prorerty in theme editor
            </summary>
            <beta />
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.ThemeVisibility.Basic">
            <summary>
            Defines a theme property that is always show in theme editor.  
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Defaults.ThemeVisibility.Advanced">
            <summary>
             Defines a theme property that is show only in advanced mode
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.ThemeVisibilityModeAttribute.#ctor(Ion.Core.Toolkit.Theming.Defaults.ThemeVisibility)">
            <summary>
            Define the ThemePage Group 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Defaults.ThemeVisibilityModeAttribute.Visibility">
            <summary>
             Get the ThemePage Group 
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.SolidColorBrushExtension.ToArgb(System.Windows.Media.SolidColorBrush)">
            <summary>
            Convert the Brush to a ARGB - Color. 
            </summary>
            <param name="brush">your object</param>
            <returns>#AARRGGBB</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Defaults.SolidColorBrushExtension.FromArgb(System.Windows.Media.SolidColorBrush,System.String)">
            <summary>
            set the current brush to a new color based on the #argb string
            </summary>
            <param name="brush">your object</param>
            <param name="argb">The #ARGB Color</param>
            <returns>the same object as you run the function</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IElementHost.Add(System.Windows.ResourceDictionary)">
            <summary>
            Loads a resource
            </summary>
            <param name="resource">Reosurce to load</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IElementHost.Remove(System.Windows.ResourceDictionary)">
            <summary>
            Removes a resource
            </summary>
            <param name="resource">Resource to load</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IElementHost.Insert(System.Int32,System.Windows.ResourceDictionary)">
            <summary>
            Inserts a resource
            </summary>
            <param name="pos">Position</param>
            <param name="resource">Resource to add</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient">
            <summary>
            Interface for those clients that needs a private instance of resources (multi-thread environments)
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient.LogName">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient.LoadResource(Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo)">
            <summary>
            Implements a local resource load
            </summary>
            <param name="info">Info about the resource location</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient.UnloadResource(Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo)">
            <summary>
            Implements a local resource unload
            </summary>
            <param name="info">Info about the resource location</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient.IsInnerClient(System.Object)">
            <summary>
            Check the inner client
            </summary>
            <param name="client">Object</param>
            <returns>True if the inner client is the passed object, false otherwise</returns>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient.Dispatcher">
            <summary>
            Gets the associated Dispatcher
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient.ResourceDictionaries">
            <summary>
            The resource dictionaries of the client
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelectorClient">
            <summary>
            Contains the functions needed by the ThemeSelector to propagate the themes
            To be implemented only in case of custom theme support
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelectorClient.Add(System.Windows.ResourceDictionary)">
            <summary>
            Loads a resource
            </summary>
            <param name="resource">Reosurce to load</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelectorClient.Remove(System.Windows.ResourceDictionary)">
            <summary>
            Removes a resource
            </summary>
            <param name="resource">Resource to load</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelectorClient.Insert(System.Int32,System.Windows.ResourceDictionary)">
            <summary>
            Inserts a resource
            </summary>
            <param name="pos">Position</param>
            <param name="resource">Resource to add</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelectorClient.CheckResource(System.Windows.ResourceDictionary)">
            <summary>
            Check if a resource dictionary has already been received by a client
            </summary>
            <param name="resource">the resource to check</param>
            <returns>True if the resource is already present among
            the resources of the client, false otherwise</returns>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.ITheme.Key">
            <summary>
            The Theme unique key
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.ITheme.BasedOn">
            <summary>
            Optional, the key of the theme this theme is based on.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.ITheme.IsCustomTheme">
            <summary>
            True if this is a custom theme derived from a base theme
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Theming.Interfaces.ITheme.BasedOnChanged">
            <summary>
            Event raised when the <see cref="P:Ion.Core.Toolkit.Theming.Interfaces.ITheme.BasedOn" /> property changes
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.ITheme.DisplayName">
            <summary>
            The display name of the Theme
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Theming.Interfaces.ITheme.DisplayNameChanged">
            <summary>
            Event raised when the <see cref="E:Ion.Core.Toolkit.Theming.Interfaces.ITheme.DisplayNameChanged" /> property changes
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.ITheme.ThemeParts">
            <summary>
            Get the collection of the theme parts that should be automatically loaded when activated
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Theming.Interfaces.ITheme.Loaded">
            <summary>
            Event raised when the theme is activated
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Theming.Interfaces.ITheme.Unloaded">
            <summary>
            Event raised when the theme is activated
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.ITheme.GetBaseTheme">
            <summary>
            Get the base theme for this theme
            </summary>
            <returns>Base I Theme or null</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.ITheme.GetGlobalDefaultsSetter(System.Type,System.String)">
            <summary>
            Returns the theme defaults set of the specified type if found, a ThemeDefaults instance otherwise
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.ITheme.GetAllGlobalDefaultsSetter">
            <summary>
            Returns all the default setters this theme has.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.ITheme.RegisterThemeDefaults(Ion.Core.Toolkit.Theming.Defaults.ThemeDefaultsBase)">
            <summary>
            Register a global theme defaults set
            </summary>
            <param name="defaults">The defaults to register with the theme</param>
            <exception cref="T:Ion.Core.Toolkit.Theming.ThemeException">Thrown if the defaults object has IsGlobalDefaultsSetter set to false.</exception>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.ITheme.ForceUpdateDefaults">
            <summary>
            For internal use only
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.ITheme.IsBasedOn(Ion.Core.Toolkit.Theming.Interfaces.ITheme)">
            <summary>
            
            </summary>
            <param name="theme"></param>
            <returns></returns>
        </member>
        <member name="E:Ion.Core.Toolkit.Theming.Interfaces.ITheme.PropertyOverriden">
            <summary>
            Event raised when some of the theme properties is overriden
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.IThemeCollection.Item(System.String)">
            <summary>
            Find (or create) a theme by its key
            </summary>
            <param name="key">The theme key</param>
            <returns>A theme placeholder, even if the theme with the given id is not present. In that
            case the theme will be created.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemeCollection.TryGetValue(System.String)">
            <summary>
            Find a theme by its key
            </summary>
            <param name="key">The theme key</param>
            <returns>A theme placeholder, or null if not found.</returns>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.IThemePart.ModuleName">
            <summary>
            Get/set the dependency module name (only load the theme when the module is ready)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemePart.AsyncPrepare">
            <summary>
            Prepares the part to be loaded on a separate thread 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemePart.LoadPart">
            <summary>
            Loads the theme part
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemePart.UnloadPart">
            <summary>
            Unloads the theme part
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.Themes">
            <summary>
            Get the collection of the registered themes
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.SelectedTheme">
            <summary>
            Sets/Gets the active theme
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.DefaultTheme">
            <summary>
            Get the special "default" theme, always present as theme used when no other themes are present
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.SelectedThemeChanging">
            <summary>
            Event raised when the <see cref="P:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.SelectedTheme" /> property value changes and the theme preparation is going to start
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.SelectedThemeChanged">
            <summary>
            Event raised when the <see cref="P:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.SelectedTheme" /> property value changes and the theme preparation has completed
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.SelectedThemeLoaded">
            <summary>
            Event raised when the <see cref="P:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.SelectedTheme" /> property value changes and the theme load has fully completed
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.SetModuleLoaded(System.String)">
            <summary>
            Set the load status for a module
            </summary>
            <param name="module">the name of the module</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Interfaces.IThemeSelector.IsModuleLoaded(System.String)">
            <summary>
            Retrieves the module loaded status
            </summary>
            <param name="module">The module status to retrieve</param>
            <returns>True is the module is registered as loaded with the ThemeSelector, false otherwise</returns>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.IonContentPresenter.ResetChildStyleProperty">
            <summary>
            Identifies the ResetChildStyle dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.IonContentPresenter.ResetChildStyle">
            <summary>
            If set to true will force a TextBlock inside the ContentPresenter to follow the current theme foreground
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.IonContentPresenter.DoNotBindProperty">
            <summary>
            Identifies the DoNotBind dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.IonContentPresenter.DoNotBind">
            <summary>
            DoNotBind backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.IonContentPresenter.ForegroundProperty">
            <summary>
            Identifies the Foreground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.IonContentPresenter.Foreground">
            <summary>
            Foreground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.IonContentPresenter.FontSizeProperty">
            <summary>
            Identifies the FontSize dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.IonContentPresenter.FontSize">
            <summary>
            FontSize backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.IonContentPresenter.IconColorProperty">
            <summary>
            Identifies the IconColor dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.IonContentPresenter.IconColor">
            <summary>
            IconColor backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.IonGridViewRowPresenter.ForegroundProperty">
            <summary>
            Identifies the Foreground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.IonGridViewRowPresenter.Foreground">
            <summary>
            Foreground backing field
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.Resources.ResourceParser">
            <summary>
            Parse streams containing theme resources.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.Resources.ResourceType">
            <summary>
            Enumerates the type of XAML resources
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Resources.ResourceType.Embedded">
            <summary>
            Embedded in the dll (compiled as Page). The default.
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Resources.ResourceType.Application">
            <summary>
            Packed alongside with the Assembly (packed in the xap in Silverlight or in the main HTTP uri)
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.Resources.ResourceType.FileSystem">
            <summary>
            File on disk
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Theme.Load(Ion.Core.AsyncDelegate,System.Boolean)">
            <summary>
            Loads the Theme
            </summary>
            <param name="callback">Callback</param>
            <param name="force">Force theme load</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Theme.Unload">
            <summary>
            Unload the Theme (synchronously)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Theme.OnLoaded">
            <summary>
            Raises the <see cref="E:Ion.Core.Toolkit.Theming.Theme.Loaded" /> event
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Theme.OnUnloaded">
            <summary>
            Raises the <see cref="E:Ion.Core.Toolkit.Theming.Theme.Loaded" /> event
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.Theme.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Theme.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.Theme.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemeChangedEventArgs">
            <summary>
            Theme changed event arguments
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeChangedEventArgs.Theme">
            <summary>
            The new ITheme
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeChangedEventArgs.PreviousTheme">
            <summary>
            The previous ITheme
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeChangingEventArgs.NewTheme">
            <summary>
            The new ITheme
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeChangingEventArgs.CurrentTheme">
            <summary>
            The previous ITheme
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.ThemeChangingEventArgs.Cancel">
            <summary>
            True if the event should be cancealed
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeChangingEventArgs.#ctor(Ion.Core.Toolkit.Theming.Interfaces.ITheme,Ion.Core.Toolkit.Theming.Interfaces.ITheme)">
            <summary>
            Constructor
            </summary>
            <param name="currentTheme">Current theme</param>
            <param name="newTheme">The new theme</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemeClientsManager">
            <summary>
            A manager that propagates all the theme changes to the registered clients
            (ex.: the Application.Current through the ApplicationThemeClient singleton,
             other IThemeSelectorClients...)
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeClientsManager.ResClients">
            <summary>
            the list of clients that implements the IThemeResClients.
            IthemeResClients are those clients that needs a private instance
            of ResourceDictionary related to the current theme parts; this lets
            the desktop applications to register many clients in a multi-threaded
            environment.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeClientsManager.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeClientsManager.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeClientsManager.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemeCollection">
            <summary>
            Specialized collection ot Themes
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeCollection.#ctor(Ion.Core.Toolkit.Theming.ThemeSelector)">
            <summary>
            Constructor
            </summary>
            <param name="owner">The associated ThemeSelector</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeCollection.Item(System.String)">
            <summary>
            Find a theme by its key
            </summary>
            <param name="key">The theme key</param>
            <returns>The theme, if exists</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeCollection.Contains(System.String)">
            <summary>
            Determines if the collection contains the given key
            </summary>
            <param name="key">Key to search for</param>
            <returns>True if exists, false otherwise</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeCollection.TryGetValue(System.String)">
            <summary>
            Tries to retrieve an ITheme
            </summary>
            <param name="key">the ITheme key</param>
            <returns>ITheme or null</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemeException">
            <summary>
            Exception due to theme operations.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.HttpXamlThemePart.#ctor(System.String)">
            <summary>
            Address parameter can be both relative or absolute
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.HttpXamlThemePart.AsyncLoadWebResource(Ion.Core.AsyncResult)">
            <summary>
            Loads asynchronously the resource from a web server
            </summary>
            <param name="result">AsyncResult</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemePart.ThemePartBase">
            <summary>
            Base class for <see cref="T:Ion.Core.Toolkit.Theming.Interfaces.IThemePart" />
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Theming.ThemePart.ThemePartBase.ThemeResourceDictionary">
            <summary>
            Stores the ResourceDictionary corresponding to the current global theme.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.ThemePartBase.IgnoreMissingType">
            <summary>
            Manages the error when a style for an unknown type is found
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.ThemePartBase.Unload">
            <summary>
            Unloads the part
            </summary>
            <remarks>
            Affects the Application dictionary.
            </remarks>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.ThemePartBase.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.ThemePartBase.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.ThemePartBase.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.ThemePartBase.LoadThemeResources(System.IO.Stream)">
            <summary>
            Load a theme from a Stream.
            </summary>
            <param name="stream">A Stream containing the theme to load.</param>
            <remarks>The current Application resource dictionary will be used</remarks>
            <returns>ResourceDictionary corresponding to the loaded theme.</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.ThemePartBase.LoadAndApplyThemeFromStream(System.IO.Stream)">
            <summary>
            Loads and applies a theme from a Stream.
            </summary>
            <param name="stream">Stream containing the theme ResourceDictionary.</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.ResourceType">
            <summary>
            Get/Set the type of the packed Xaml resources
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.AssemblyName">
            <summary>
            Get the assembly that contains the XAML resource
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.XamlPath">
            <summary>
            Get the path of the XAML resource
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.AlwaysLoadUnload">
            <summary>
            Informs if this part should be always loaded/unloaded
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.ThemeAffinity">
            <summary>
            Sets an Äffinity" on a given theme (used to avoid to load parts in case of BasedOn scenario)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.#ctor(System.Reflection.AssemblyName,System.String)">
            <summary>
            Build a theme part from assembly and resource path, only loaded when the specified module is loaded
            </summary>
            <param name="assemblyName">The assembly name that embeds the resource</param>
            <param name="xamlPath">The path in within the assembly</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.#ctor(System.Reflection.Assembly,System.String,System.Boolean,System.String)">
            <summary>
            Build a theme part from assembly and resource path, only loaded when the specified module is loaded
            </summary>
            <param name="assembly">The assembly that embeds the resource</param>
            <param name="xamlPath">The path in within the assembly</param>
            <param name="alwaysLoadUnload">Force load/unload</param>
            <param name="themeAffinity">SEts a theme affinity</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.#ctor(System.Reflection.Assembly,System.String,System.Boolean)">
            <summary>
            Build a theme part from assembly and resource path, only loaded when the specified module is loaded
            </summary>
            <param name="assembly">The assembly that embeds the resource</param>
            <param name="xamlPath">The path in within the assembly</param>
            <param name="alwaysLoadUnload">Force load/unload</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Build a theme part from assembly and resource path, only loaded when the specified module is loaded
            </summary>
            <param name="assembly">The assembly that embeds the resource</param>
            <param name="xamlPath">The path in within the assembly</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.#ctor(System.String)">
            <summary>
            Build a theme part from a file on disk
            </summary>
            <param name="fileName">Full path of the filename to use</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemePart.AssemblyXamlThemePart.Unload">
            <summary>
            Unloads the part
            </summary>
            <remarks>
            Affects the Application dictionary.
            </remarks>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo">
            <summary>
            ThemePartInfo describes a resource that must be loaded
            as a new, not shared object by each IThemeResClient implementor.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo.Key">
            <summary>
            The key of this resource, as a Guid
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo.Type">
            <summary>
            The type of this resource
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo.XamlPath">
            <summary>
            The xaml path, in case of embedded resource
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo.Uri">
            <summary>
            The Uri path, in fase of filesystem resource
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemePart.ThemePartInfo.AssemblyName">
            <summary>
            Resource assembly name
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemeSelector">
            <summary>
            ThemeSelector is the manager class used to publish themes and to switch among them
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelector.Instance">
            <summary>
            The ThemeSelector instance
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.CommonInitialize">
            <summary>
            Immediately called when the singleton is created - both for SL and WPF
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelector.ChangingTheme">
            <summary>
            Indicates that a theme change is in progress
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Theming.ThemeSelector.ModuleSetChanged">
            <summary>
            Notify of a module added or removed from the list of known modules
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelector.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelector.CoreThemeDefaults">
            <summary>
            CoreThemeDefaults instance
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelector.IonThemeDefaults">
            <summary>
            Thread safe IonThemeDefaults instance
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelector.IonSpacingDefaults">
            <summary>
            Thread safe IonSpacingDefaults instance
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelector.IonBrandingDefaults">
            <summary>
            Gets a Thread safe IonBrandingDefaults instance.
            </summary>
            <value>
            The ION branding defaults.
            </value>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelector.IonBrandLogoDefaults">
            <summary>
            Gets a Thread safe IonBrandLogoDefaults instance.
            </summary>
            <value>
            The ION brand logo defaults.
            </value>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.WpfInitialize(System.Boolean,System.Boolean)">
            <summary>
            Loads the custom control templates for the standard widgets
            </summary>
            <param name="themeMainApp">Optionally extends the themes to the whole Application (default: false)</param>
            <param name="themeElementHosts">Optionally extends the themes to the ElementHosts (default: false)</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.Initialize(System.Boolean,System.Boolean)">
            <summary>
            Initialize the themes engine in single thread or multithread mode
            </summary>
            <param name="themeMainApp">
            <para>True if Main Application should be target for themes resources (single thread mode</para>
            <para>False if the Main application won't be themed and the user will manually register
            each single Window or component using <see cref="M:Ion.Core.Toolkit.Theming.ThemeSelector.RegisterThemeClient(System.Windows.Window,System.Boolean)" /></para>
            </param>
            <param name="themeElementHosts">Optionally extends the themes to the ElementHosts (default: true)</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.AddSystemTheme">
            <summary>
            <para>Adds the System theme that defines the templates only for the core.toolkit controls.</para>
            <para>The standard framework controls are not customized.</para>
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.AddDefaultThemes">
            <summary>
            Adds the default Light and Dark themes
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.LoadModernDark">
            <summary>
            Loads the Standard ModernDark theme
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.LoadModernLight">
            <summary>
            Loads the Standard ModernLight theme
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.AddModernThemes">
            <summary>
            Adds the Modern Light and Dark themes
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.SetDefaultTheme(Ion.Core.Toolkit.Theming.Interfaces.ITheme)">
            <summary>
            Sets the DefaultTheme
            </summary>
            <param name="theme">ITheme</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.RegisterThemeClient(System.Windows.Window,System.Boolean)">
            <summary>
            Registers a Window with the ThemeSelector as an independent themes client
            </summary>
            <param name="window">Window to register</param>
            <param name="bindBgAndFg">Automatically binds the window background and foreground to the themes (default=true)</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.RegisterThemeClient(Ion.Core.Toolkit.Theming.ElementHost)">
            <summary>
            === this is a TEMPORARY Function === <para />
            This function will be used for the migration to the Theme Infrastructure in ION.NET <para />
            It will be deprecated when the Themes are definitely integrated in the application.<para />
            Register an ElementHost with the ThemeSelector
            </summary>
            <param name="elementHost">ElementHost to register</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.RegisterThemeClient(Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient)">
            <summary>
            Registers a themes client
            </summary>
            <param name="client">Client to register</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.UnregisterThemeClient(System.Windows.Window)">
            <summary>
            Unregisters a Window with the ThemeSelector
            </summary>
            <param name="window">Window to unregister</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.UnregisterThemeClient(Ion.Core.Toolkit.Theming.ElementHost)">
            <summary>
            === this is a TEMPORARY Function === <para />
            This function will be used for the migration to the Theme Infrastructure in ION.NET <para />
            It will be deprecated when the Themes are definitely integrated in the application.<para />
            Unregister an ElementHost with the ThemeSelector
            </summary>
            <param name="elementHost">ElementHost to unregister</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.UnregisterThemeClient(Ion.Core.Toolkit.Theming.Interfaces.IThemeResClient)">
            <summary>
            Unregisters a themes client
            </summary>
            <param name="client">Client to unregister</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelector.GetThemeClient(System.Windows.FrameworkElement)">
            <summary>
            Wraps a FrameworkElement into an IThemeResClient
            </summary>
            <param name="fe">FrameworkElement</param>
            <returns>IThemeResClient</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemeSelectorMessageHandler">
            <summary>
            ThemeSelector message handler
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemeSelectorMessagePriority">
            <summary>
            Message priority
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemeSelectorMessageType">
            <summary>
            Message type
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThemeSelectorMsgEventArgs">
            <summary>
            ThemeSelector message event arguments
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelectorMsgEventArgs.Message">
            <summary>
            Massage
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelectorMsgEventArgs.Priority">
            <summary>
            Message priority (default is Low)
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Theming.ThemeSelectorMsgEventArgs.Type">
            <summary>
            Message type (default is Info)
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Theming.ThemeSelectorMsgEventArgs.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Theming.ThreadSafeDefaultsFactory">
            <summary>
            Returns a different instance of ThemeDefaults for each dispatcher
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Threading.DispatcherHelper">
            <summary>
            Helper class for dispatcher operations on the UI thread.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Threading.DispatcherHelper.CheckBeginInvokeOnUI(System.Action)">
            <summary>
            Executes an action on the UI thread. If this method is called
            from the UI thread, the action is executed immendiately. If the
            method is called from another thread, the action will be enqueued
            on the UI thread's dispatcher and executed asynchronously.
            <para>For additional operations on the UI thread, you can get a
            reference to the UI thread's dispatcher thanks to the property
            <see cref="P:Ion.Core.Toolkit.Threading.DispatcherHelper.UIDispatcher" /></para>.
            </summary>
            <param name="action">The action that will be executed on the UI
            thread.</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Timer.AggregatedTimerController">
            <summary>
            Internal implementation for IToolkitTimer
            <para>An AggregatedTimerController is an object able to control an AggregatedTimer</para>
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.AggregatedTimerController.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.AggregatedTimerController.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.AggregatedTimerController.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.AggregatedTimer.Interval">
            <summary>
            Timer interval
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.AggregatedTimer.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="interval">Interval, in milliseconds</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.AggregatedTimer.GetController">
            <summary>
            Gets a new controller for this timer
            </summary>
            <returns>An IToolkitTimer</returns>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.AggregatedTimer.IsDisposed">
            <summary>
            IsDisposed status
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.AggregatedTimer.Dispose">
            <summary>
            Standard Dispose
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.AggregatedTimer.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True if disposing, false otherwise</param>
        </member>
        <member name="T:Ion.Core.Toolkit.Timer.IToolkitTimer">
            <summary>
            A managed toolkit timer
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.IToolkitTimer.ID">
            <summary>
            Timer ID
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.IToolkitTimer.Enabled">
            <summary>
            <para>True if the timer is running, false otherwise</para>
            <para>Can be used to start or stop the timer</para>
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.IToolkitTimer.Interval">
            <summary>
            The timer interval in milliseconds
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.IToolkitTimer.Start">
            <summary>
            Starts the timer
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.IToolkitTimer.Stop">
            <summary>
            Stops the timer
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.Timer.IToolkitTimer.Tick">
            <summary>
            Timer tick event
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.IToolkitTimer.TimeConsumed">
            <summary>
            The time spent in this timer
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.IToolkitTimer.TickCount">
            <summary>
            Number of thick events
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Timer.TimerHubStatistics">
            <summary>
            Timer statistics
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.TimerHubStatistics.TickCount">
            <summary>
            number of timer ticks
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.TimerHubStatistics.TimeConsumed">
            <summary>
            Time spent handling the timer events
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Timer.TimerHub">
            <summary>
            <para>A managed timer hub able to handle shared timers.</para>
            <para>DispatcherTimer are used.</para>
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Timer.TimerHub.StartPerformance">
            <summary>
            Function to call to get a time able to calculate a high performance interval
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Timer.TimerHub.ClosePerformace">
            <summary>
            Function to call to get a high performance interval
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Timer.TimerHub.TimerPerformanceThreshold">
            <summary>
            <para>Timer performance threshold</para>
            <para>The expected value is in fraction of 1.0</para>
            <para>0.01 means: exceeding 10% of the timer interval</para>
            <para>is considered a performance hit of the timer handler.</para>
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.TimerHub.GetTimer(System.Int32)">
            <summary>
            Gets a managed timer initialized to a given tick time
            </summary>
            <param name="milliseconds">Timer interval, in milliseconds</param>
            <returns>An <seealso cref="T:Ion.Core.Toolkit.Timer.IToolkitTimer" /></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.TimerHub.GetTimer">
            <summary>
            Gets a managed timer initialized to a value of 250ms
            </summary>
            <returns>An <seealso cref="T:Ion.Core.Toolkit.Timer.IToolkitTimer" /></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Timer.TimerHub.GetStatistics">
            <summary>
            Gets the timers statistics
            </summary>
            <returns>Timers statistics</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.BrushUtilities.CreateLinearGradientBrush(System.Collections.Generic.ICollection{System.Windows.Media.Color},System.Double)">
            <summary>
            Creates a new equispaced <see cref="T:System.Windows.Media.LinearGradientBrush" /> from the specified colors.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.BrushUtilities.CreateLinearGradientBrush(System.Windows.Media.Color,System.Windows.Media.Color,System.Double)">
            <summary>
            Creates a new equispaced <see cref="T:System.Windows.Media.LinearGradientBrush" /> from the specified colors.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.BrushUtilities.ColorToEquispacedGradientCollection(System.Collections.Generic.ICollection{System.Windows.Media.Color})">
            <summary>
            Creates a <see cref="T:System.Windows.Media.GradientStopCollection" /> from the specified colors.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.BrushUtilities.ColorToSolidBrush(System.Windows.Media.Color)">
            <summary>
            Converts a color into a solid brush
            </summary>
            <param name="color">Color</param>
            <returns>A SolidcolorBrush</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.BrushUtilities.ToSolidColorBrush(System.Windows.Media.Color)">
            <summary>
            Converts a color into aSolidColorBrush
            </summary>
            <param name="color">Color</param>
            <returns>A SolidColorBrush</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.BrushUtilities.ToSolidColorBrush(System.String)">
            <summary>
            Creates a SolidColorBrush from a color definition in HTML format
            </summary>
            <param name="htmlColor">HTML Color</param>
            <returns>A SolidColorBrush</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.Utilities.HsvColor">
            <summary>
            Data structure that represents a HSV value.
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.Utilities.ColorUtilities">
            <summary>
            Utilities for the <see cref="T:System.Windows.Media.Color" /> class.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.ColorUtilities.RgbToHsv(System.Byte,System.Byte,System.Byte)">
            <summary>
            Converts from the Red/Green/Blue color space to the Hue/Sat/Val (HSV) color space.
            Algorithm ported from: http://www.codeproject.com/KB/recipes/colorspace1.aspx
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.ColorUtilities.RgbToHsv(System.Windows.Media.Color)">
            <summary>
            Converts from the Red/Green/Blue color space to the Hue/Sat/Val (HSV) color space.
            Algorithm ported from: http://www.codeproject.com/KB/recipes/colorspace1.aspx
            </summary>
            <param name="color">The color to convert.</param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.ColorUtilities.HsvToRgb(Ion.Core.Toolkit.Utilities.HsvColor)">
            <summary>
            Converts from Hue/Sat/Val (HSV) color space to Red/Green/Blue color space.
            Algorithm ported from: http://www.colorjack.com/software/dhtml+color+picker.html
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.ColorUtilities.HsvToRgb(System.Double,System.Double,System.Double)">
            <summary>
            Converts from Hue/Sat/Val (HSV) color space to Red/Green/Blue color space.
            Algorithm ported from: http://www.colorjack.com/software/dhtml+color+picker.html
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.ExpressionUtilities.GetOwnerAndPropertyNameFromLambda(System.Linq.Expressions.Expression{System.Func{System.Object}},System.Object@,System.String@)">
            <summary>
            Gets the propertyname and property object owner from a lambda expression like
            "() =&gt; this.MyProperty"
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Utilities.ExpressionUtilities.GetPropertyNameFromLambda(System.Linq.Expressions.Expression{System.Func{System.Object}})">
            <summary>
            Gets the propertyname from a lambda expression like
            "() =&gt; this.MyProperty"
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Utilities.FontUtilities.DefaultFontFamily">
            <summary>
            The default font family for the application (Portable User Interface)
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Utilities.FontUtilities.DefaultFontWeight">
            <summary>
            The default font weight for the application (Normal)
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Utilities.FontUtilities.DefaultFontStyle">
            <summary>
            The default font style for the application (Normal)
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Utilities.FontUtilities.DefaultFontSize">
            <summary>
            The default font size for the application (11)
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Utilities.FontUtilities.DefaultMinFontSize">
            <summary>
            The default minimum font size for the application (6)
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Utilities.FontUtilities.DefaultMaxFontSize">
            <summary>
            The default maximum font size for the application (100)
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Utilities.FontUtilities.DefaultSerializableFont">
            <summary>
            The default font in a serializable format.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.SetError(Ion.Core.Toolkit.Validation.StateDescriptor)">
            <summary>
            Sets the error state on the control. If the control is already in error state it applies the new settings. The WST template will be shown on the control.
            </summary>
            <param name="state">Validation State descriptor</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.ResetError(System.String)">
            <summary>
            Resets the error state on the control. The WST will be hidden.
            </summary>
            <param name="field">Field to reset</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.SetWarning(Ion.Core.Toolkit.Validation.StateDescriptor)">
            <summary>
            Sets the warning state on the control. If the control is already in warning state it applies the new settings. The WST template will be shown on the control.
            </summary>
            <param name="state">Validation State descriptor</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.ResetWarning(System.String)">
            <summary>
            Resets the warning state on the control. The WST will be hidden.
            </summary>
            <param name="field">Field to reset</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.SetInformation(Ion.Core.Toolkit.Validation.StateDescriptor)">
            <summary>
            Sets the information on the control. If the information is already shown the new data will be shown. The WST template will be shown on the control.
            </summary>
            <param name="state">Validation State descriptor</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.ResetInformation(System.String)">
            <summary>
            Hides the information on the control. The WST will be hidden.
            </summary>
            <param name="field">Field to reset</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.SetCustomState(Ion.Core.Toolkit.Validation.StateDescriptor,System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Sets the custom message on the control. The custom color will be used both for the highlighted border and for the tooltip. If the message is already shown the new data will be shown. The WST template will be shown on the control.
            </summary>
            <param name="state">Validation State descriptor</param>
            <param name="background">Custom background Color</param>
            <param name="foreground">Custom Color</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.SetTooltipState(Ion.Core.Toolkit.Validation.StateDescriptor)">
            <summary>
            Sets the tooltip message on the control. The custom color will be used both for the highlighted border and for the tooltip. If the message is already shown the new data will be shown. The WST template will be shown on the control.
            </summary>
            <param name="state">Validation State descriptor</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.ResetCustomState(System.String)">
            <summary>
            Resets the custom state on the control. The WST will be hidden.
            </summary>
            <param name="field">Field to reset</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.ResetAllStates(System.String)">
            <summary>
            Resets each validation state activeted on the control. The WST will be hidden
            </summary>
            <param name="field">Field to reset</param>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.IonNotifyError.ResetState(System.String,Ion.Core.Toolkit.Validation.ValidationType)">
            <summary>
            reset the state for a given type - if you pass NONE, it reset all the states
            </summary>
            <param name="field"></param>
            <param name="type"></param>
        </member>
        <member name="T:Ion.Core.Toolkit.Validation.StateDescriptor">
            <summary>
            Validation state descriptor class
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.StateDescriptor.TooltipContent">
            <summary>
            Gets or Sets the tooltip content to show on the control.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.StateDescriptor.ShowTooltip">
            <summary>
            Gets or Sets the tooltip showing flag. It it is true a tooltip will be shown on the control.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.StateDescriptor.Field">
            <summary>
            Gets or Sets the Validation Field name
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.StateDescriptor.TooltipPosition">
            <summary>
            Validation Tooltip position. Bottom value is the default one.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.StateDescriptor.MaxTooltipWidth">
            <summary>
            Gets or Sets the max tooltip width
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.StateDescriptor.Type">
            <summary>
            Gets the validation type
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.StateDescriptor.IsDelayed">
            <summary>
            Gets/Sets the delay on the Popup opening
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.StateDescriptor.ShowExtraElement">
            <summary>
            It forces the show 
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.StateDescriptor.CustomBackgroundColor">
            <summary>
            Sets or Gets the custom background color
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.StateDescriptor.CustomForegroundColor">
            <summary>
            Sets or Gets the custom foreground color
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.ValidationTooltipControl.TryRefreshErrorState">
            <summary>
            when you change the theme the visual state does not get re-evalued
            as a side effect AutoDetectedStateVisible flag goes out-of-sync
            this method tries to reconcile the visual state after the them is changed
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.AutoDetectStateProperty">
            <summary>
            Identifies the AutoDetectStateDescriptor dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.AutoDetectState">
            <summary>
            get/set AutoDetectState
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.ValidationTooltipControl.HandleAutoDetectStateDescriptorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AutoDetectStateDescriptor changed handler
            </summary> 
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.AutoDetectedStateVisibleProperty">
            <summary>
            Identifies the StateDescriptionDetectionEnabled dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.AutoDetectedStateVisible">
            <summary>
            get/set StateDescriptionDetectionEnabled
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.Validation.ValidationTooltipControl.HandleAutoDetectedStateVisibleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StateDescriptionDetectionEnabled changed handler
            </summary> 
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.StateDescriptionProperty">
            <summary>
            Identifies the StateDescription dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.StateDescription">
            <summary>
            StateDescription backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.ShowExtraElementProperty">
            <summary>
            Identifies the ShowExtraElement dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.ShowExtraElement">
            <summary>
            ShowExtraElement backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.IsPopupProperty">
            <summary>
            Identifies the IsPopup dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.IsPopup">
            <summary>
            PopupIsOpen backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.IsDelayedProperty">
            <summary>
            Identifies the IsDelayed dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.IsDelayed">
            <summary>
            IsDelayed backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.ControlBackgroundProperty">
            <summary>
            Identifies the ControlBackground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.ControlBackground">
            <summary>
            ControlBackground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.ControlBorderThicknessProperty">
            <summary>
            Identifies the ControlBorderThickness dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.ControlBorderThickness">
            <summary>
            ControlBorderThickness backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.ControlForegroundProperty">
            <summary>
            Identifies the ControlForeground dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.ControlForeground">
            <summary>
            ControlForeground backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.ValidationTooltipContentProperty">
            <summary>
            Identifies the ValidationTooltipContent dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.ValidationTooltipContent">
            <summary>
            ValidationText backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.TargetProperty">
            <summary>
            Identifies the Target dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.Target">
            <summary>
            Target backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipControl.TooltipPositionProperty">
            <summary>
            Identifies the TooltipPosition dependency property.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.Validation.ValidationTooltipControl.TooltipPosition">
            <summary>
            TooltipPosition backing field
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipPosition.Bottom">
            <summary>
            Tooltip on the bottom side of control
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipPosition.Top">
            <summary>
            Tooltip on the top side of control
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipPosition.Left">
            <summary>
            Tooltip on the left side of control
            </summary>
        </member>
        <member name="F:Ion.Core.Toolkit.Validation.ValidationTooltipPosition.Right">
            <summary>
            Tooltip on the right side of control
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.BrushBlend7525ToBrushConverter">
            <summary>
            <para>Converts two SolidColorBrushes into another SolidColorBrush by taking 75% of the first brush (value) and 25% of the second color (parameter)</para>
            <para>The parameter of the value converter must be a SolidColorbrush passed through a StaticResource</para>
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.BrushToBrushParametrizedValueConverter">
            <summary>
            <para>Converts a SolidColorBrush into another SolidColorBrush changing its luminosity</para>
            <para>The parameter of the value converter must be a string representing a double</para>
            <para>ranging in [-1.0, 1.0]</para>
            <para>If the parameter is grater than 0.0 than the color is lightened; a value</para>
            <para>of 1.0 will make the final color White</para>
            <para>If the parameter is less than 0.0 than the color is darkened; a value</para>
            <para>of -1.0 will make the final color Black</para>
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.BrushToContrastBrushValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.ColorExtensions.Luma(System.Windows.Media.Color)">
            <summary>
            Calculates the LUMA value of a color
            </summary>
            <param name="color">Color</param>
            <returns>Luma value</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.BrushToNearBrushValueConverter">
            <summary>
            <para>Converts a brush into another brush introducing a variation in its luminosity.</para>
            <para>The luminosity variation is mandatory and can be specified using the Converter Parameter.</para>
            <para>By default the luminosity diff is 15%: if the base color is dark (Lum less then 50%) the new color is lighter,</para>
            <para>if the color is light (Lum more then 50%) then the new color will be darker.</para>
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.BrushToNearBrushValueConverter.ConvertBrush(System.Windows.Media.Brush,System.Double)">
            <summary>
            Tries to convert a Brush to a near Brush changing its luminosity by a given percentage
            </summary>
            <param name="b">Brush</param>
            <param name="luminosityDiff">Diff percentage</param>
            <returns>A changed brush</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.BrushToNearBrushValueConverter.ConvertColor(System.Windows.Media.Color,System.Double)">
            <summary>
            Converts a Color to a near Color changing its luminosity by a given percentage
            </summary>
            <param name="color">Color to change</param>
            <param name="luminosityDiff">Luminosity percentage diff; a 100% diff will generate a White</param>
            <returns>A changed Color</returns>
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.SpacingTypeToDoubleConverter">
            <summary>  
            A type converter for SpacingType (Narrow, Regular,Tiny) to teh related double values. 
            </summary>  
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.DoubleToVisibilityNegatedValueConverter">
            <summary>
            If the double is grater then 1.0 (so, the control has "some height"...)
            than the visibility returned is Collapsed (dbl2Vis_NEGATED), otherwise
            the visibility returned is Visible.
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.NullOrEmptyStringToCustomStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a null or empty string into a custom string specified through the ConverterParameter.
            If the string is not null or empty, it's returned as it is.
            By default, custom string is "(Empty)"
            </summary>
            <param name="value">The (possibly empty) string to convert</param>
            <param name="targetType"></param>
            <param name="parameter">The custom string to use when converting an empty string.</param>
            <param name="culture"></param>
            <returns>Returns FontStyles.Italic if the boolean is true, FontStyles.Normal if the boolean is false</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.NullOrEmptyStringToCustomStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not supported
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.BoolToFontStyleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a boolean into FontStyles
            </summary>
            <param name="value">The boolean to convert</param>
            <param name="targetType">FontStyles</param>
            <param name="parameter">a Boolean set to true if the logic must be inverted</param>
            <param name="culture"></param>
            <returns>Returns FontStyles.Italic if the boolean is true, FontStyles.Normal if the boolean is false</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.BoolToFontStyleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a FontStyle into a boolean
            </summary>
            <param name="value">The FontStyle to convert</param>
            <param name="targetType">Boolean</param>
            <param name="parameter">a Boolean set to true if the logic must be inverted</param>
            <param name="culture"></param>
            <returns>Returns true if the value is a FontStyles.Italic, false otherwise</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.ColorToSolidBrushConverterHelper.SolidBrushToColor(System.Object,System.String)">
            <summary>
            SolidColorBrush to color
            </summary>
            <param name="value">SCB to convert</param>
            <param name="alpha">An optional alpha value to give to the color in HEX format (00 to FF)</param>
            <returns></returns>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.ColorToSolidBrushConverterHelper.ColorToSolidBrush(System.Object,System.String)">
            <summary>
            Color to SolidColorBrush
            </summary>
            <param name="value">Color to convert</param>
            <param name="alpha">An optional alpha value to give to the SolidColorBrush in HEX format (00 to FF)</param>
            <returns></returns>
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.DoubleToCornerRadiusConverter">
            <exclude />
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.NotificationTypeToContentConverter">
            <exclude />
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.NullableBoolToVisibilityConverter">
            <summary>  
            A type converter from nullable bool to visibility values.  
            </summary> 
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.NegatedNullableBoolToVisibilityConverter">
            <summary>  
            A type converter from negated nullable bool to visibility values.  
            </summary> 
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.SpinnerShapeToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a null or empty string into a custom string specified through the ConverterParameter.
            If the string is not null or empty, it's returned as it is.
            By default, custom string is "(Empty)"
            </summary>
            <param name="value">The (possibly empty) string to convert</param>
            <param name="targetType"></param>
            <param name="parameter">The custom string to use when converting an empty string.</param>
            <param name="culture"></param>
            <returns>Returns FontStyles.Italic if the boolean is true, FontStyles.Normal if the boolean is false</returns>
        </member>
        <member name="M:Ion.Core.Toolkit.ValueConverters.SpinnerShapeToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not supported
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.NegateBoolConverter">
            <summary>  
            A type converter for visibility and boolean values.  
            </summary>  
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.NullableToBoolConverter">
            <summary>  
            A type converter from nullable to boolean values.  
            </summary>  
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.StringValidToBoolValueConverter">
            <summary>
            <para>Returns false if the string is null or empty, true otherwise.</para>
            <para>convert back always return an empty string.</para>
            </summary>
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.BoolToVisibilityConverter">
            <summary>  
            A type converter for visibility and boolean values. 
            Returns <see cref="F:System.Windows.Visibility.Visible" /> if the bool is <c>true</c>, <see cref="F:System.Windows.Visibility.Collapsed" /> otherwise.
            </summary>  
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.NegatedBoolToVisibilityConverter">
            <summary>  
            A type converter for visibility and boolean values. 
            Returns <see cref="F:System.Windows.Visibility.Visible" /> if the bool is <c>false</c>, <see cref="F:System.Windows.Visibility.Collapsed" /> otherwise.
            </summary>   
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.NegatedVisibilityToBoolConverter">
            <summary>  
            A type converter for visibility and boolean values, negated. 
            </summary>  
        </member>
        <member name="T:Ion.Core.Toolkit.ValueConverters.VisibilityToBoolConverter">
            <summary>  
            A type converter for visibility and boolean values.  
            </summary>  
        </member>
        <member name="T:Ion.Core.Toolkit.ViewModelBase">
            <summary>
            A base class for the ViewModel classes in the MVVM pattern.
            <para>The IDisposable implementation of this class is obsolete, and
            should not be used anymore. It will be removed in a future version.
            </para>
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.ViewModelBase.#ctor">
            <summary>
            Initializes a new instance of the ViewModelBase class.
            </summary>
        </member>
        <member name="E:Ion.Core.Toolkit.ViewModelBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.ViewModelBase.IsInDesignModeStatic">
            <summary>
            Gets a value indicating whether the control is in design mode
            (running in Blend or Visual Studio).
            </summary>
        </member>
        <member name="P:Ion.Core.Toolkit.ViewModelBase.IsInDesignMode">
            <summary>
            Gets a value indicating whether the control is in design mode
            (running under Blend or Visual Studio).
            </summary>
        </member>
        <member name="M:Ion.Core.Toolkit.ViewModelBase.OnPropertyChanged(System.Linq.Expressions.Expression{System.Func{System.Object}})">
            <summary>
            Raises the PropertyChanged event if needed.
            </summary>
            <param name="propertyExpression">The lambda expression representing
            the property that changed.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.ViewModelBase.OnPropertyChanged(System.String,System.Boolean,Ion.Core.Toolkit.Messaging.Messenger)">
            <summary>
            Raises the PropertyChanged event if needed.
            </summary>
            <param name="propertyName">The name of the property that
            changed.</param>
            <param name="broadcast">if set to <c>true</c> broadcast the property change using the default <see cref="T:Ion.Core.Toolkit.Messaging.Messenger" />.</param>
            <param name="messenger">The messenger used to broadcast the message.</param>
        </member>
        <member name="M:Ion.Core.Toolkit.ViewModelBase.VerifyPropertyName(System.String)">
            <summary>
            Verifies that a property name exists in this ViewModel. This method
            can be called before the property is used, for instance before
            calling OnPropertyChanged. It avoids errors when a property name
            is changed but some places are missed.
            <para>This method is only active in DEBUG mode.</para>
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:System.Windows.Controls.AutoCompleteFilterMode">
            <summary>
            Specifies how text in the text box portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control is used
            to filter items specified by the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemsSource" />
            property for display in the drop-down.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.None">
            <summary>
            Specifies that no filter is used. All items are returned.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWith">
            <summary>
            Specifies a culture-sensitive, case-insensitive filter where the
            returned items start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCultureIgnoreCase" /> as
            the string comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithCaseSensitive">
            <summary>
            Specifies a culture-sensitive, case-sensitive filter where the
            returned items start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCulture" /> as the string
            comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinal">
            <summary>
            Specifies an ordinal, case-insensitive filter where the returned
            items start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.OrdinalIgnoreCase" /> as the
            string comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive">
            <summary>
            Specifies an ordinal, case-sensitive filter where the returned items
            start with the specified text. The filter uses the
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" />
            method, specifying <see cref="P:System.StringComparer.Ordinal" /> as
            the string comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.Contains">
            <summary>
            Specifies a culture-sensitive, case-insensitive filter where the
            returned items contain the specified text.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.ContainsCaseSensitive">
            <summary>
            Specifies a culture-sensitive, case-sensitive filter where the
            returned items contain the specified text.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinal">
            <summary>
            Specifies an ordinal, case-insensitive filter where the returned
            items contain the specified text.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinalCaseSensitive">
            <summary>
            Specifies an ordinal, case-sensitive filter where the returned items
            contain the specified text.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.Equals">
            <summary>
            Specifies a culture-sensitive, case-insensitive filter where the
            returned items equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCultureIgnoreCase" /> as
            the search comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.EqualsCaseSensitive">
            <summary>
            Specifies a culture-sensitive, case-sensitive filter where the
            returned items equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.CurrentCulture" /> as the string
            comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinal">
            <summary>
            Specifies an ordinal, case-insensitive filter where the returned
            items equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying
            <see cref="P:System.StringComparer.OrdinalIgnoreCase" /> as the
            string comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinalCaseSensitive">
            <summary>
            Specifies an ordinal, case-sensitive filter where the returned items
            equal the specified text. The filter uses the
            <see cref="M:System.String.Equals(System.String,System.StringComparison)" />
            method, specifying <see cref="P:System.StringComparer.Ordinal" /> as
            the string comparison criteria.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AutoCompleteFilterMode.Custom">
            <summary>
            Specifies that a custom filter is used. This mode is used when the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.TextFilter" />
            or
            <see cref="P:System.Windows.Controls.AutoCompleteBox.ItemFilter" />
            properties are set.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.AutoCompleteFilterPredicate`1">
            <summary>
            Represents the filter used by the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control to
            determine whether an item is a possible match for the specified text.
            </summary>
            <returns>true to indicate <paramref name="item" /> is a possible match
            for <paramref name="search" />; otherwise false.</returns>
            <param name="search">The string used as the basis for filtering.</param>
            <param name="item">The item that is compared with the
            <paramref name="search" /> parameter.</param>
            <typeparam name="T">The type used for filtering the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" />. This type can
            be either a string or an object.</typeparam>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.UpDownFormatEventArgs`1">
            <summary>
            Provides data for the IonNumericUpDown.Format event.
            </summary>
            <typeparam name="T">Type of Value property.</typeparam>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.UpDownFormatEventArgs`1.Text">
            <summary>
            Gets or sets the formatted string.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownFormatEventArgs`1.Value">
            <summary>
            Gets or sets the value to be used.
            </summary>
            <value>The parsed value.</value>
        </member>
        <member name="P:System.Windows.Controls.UpDownFormatEventArgs`1.OldText">
            <summary>
            Gets or sets the value to be used.
            </summary>
            <value>The parsed value.</value>
        </member>
        <member name="M:System.Windows.Controls.UpDownFormatEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:System.Windows.Controls.UpDownFormatEventArgs`1" /> class.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ISelectionAdapter">
            <summary>
            Defines an item collection, selection members, and key handling for the
            selection adapter contained in the drop-down portion of an
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.ISelectionAdapter.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>The currently selected item.</value>
        </member>
        <member name="E:System.Windows.Controls.ISelectionAdapter.SelectionChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.ISelectionAdapter.SelectedItem" />
            property value changes.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ISelectionAdapter.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate content for the
            selection adapter.
            </summary>
            <value>The collection that is used to generate content for the
            selection adapter.</value>
        </member>
        <member name="E:System.Windows.Controls.ISelectionAdapter.Commit">
            <summary>
            Occurs when a selected item is not cancelled and is committed as the
            selected item.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.ISelectionAdapter.Cancel">
            <summary>
            Occurs when a selection has been canceled.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ISelectionAdapter.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event that occurs
            when a key is pressed while the drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> has focus.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" />
            that contains data about the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
        </member>
        <member name="M:System.Windows.Controls.ISelectionAdapter.CreateAutomationPeer">
            <summary>
            Returns an automation peer for the selection adapter, for use by the
            Silverlight automation infrastructure.
            </summary>
            <returns>An automation peer for the selection adapter, if one is
            available; otherwise, null.</returns>
        </member>
        <member name="T:System.Windows.Controls.PopulatedEventArgs">
            <summary>
            Provides data for the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populated" />
            event.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.PopulatedEventArgs.Data">
            <summary>
            Gets the list of possible matches added to the drop-down portion of
            the <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control.
            </summary>
            <value>The list of possible matches added to the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" />.</value>
        </member>
        <member name="M:System.Windows.Controls.PopulatedEventArgs.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.PopulatedEventArgs" />.
            </summary>
            <param name="data">The list of possible matches added to the
            drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</param>
        </member>
        <member name="M:System.Windows.Controls.PopulatedEventArgs.#ctor(System.Collections.IEnumerable,System.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.PopulatedEventArgs" />.
            </summary>
            <param name="data">The list of possible matches added to the
            drop-down portion of the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</param>
            <param name="routedEvent">The routed event identifier for this instance.</param>
        </member>
        <member name="T:System.Windows.Controls.PopulatedEventHandler">
            <summary>
            Represents the method that will handle the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populated" />
            event of a <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A
            <see cref="T:System.Windows.Controls.PopulatedEventArgs" /> that
            contains the event data.</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.PopulatingEventArgs">
            <summary>
            Provides data for the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" />
            event.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.PopulatingEventArgs.Parameter">
            <summary>
            Gets the text that is used to determine which items to display in
            the <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control.
            </summary>
            <value>The text that is used to determine which items to display in
            the <see cref="T:System.Windows.Controls.AutoCompleteBox" />.</value>
        </member>
        <member name="P:System.Windows.Controls.PopulatingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" />
            event should be canceled.
            </summary>
            <value>True to cancel the event, otherwise false. The default is
            false.</value>
        </member>
        <member name="M:System.Windows.Controls.PopulatingEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.PopulatingEventArgs" />.
            </summary>
            <param name="parameter">The value of the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.SearchText" />
            property, which is used to filter items for the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</param>
        </member>
        <member name="M:System.Windows.Controls.PopulatingEventArgs.#ctor(System.String,System.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.PopulatingEventArgs" />.
            </summary>
            <param name="parameter">The value of the
            <see cref="P:System.Windows.Controls.AutoCompleteBox.SearchText" />
            property, which is used to filter items for the
            <see cref="T:System.Windows.Controls.AutoCompleteBox" /> control.</param>
            <param name="routedEvent">The routed event identifier for this instance.</param>
        </member>
        <member name="T:System.Windows.Controls.PopulatingEventHandler">
            <summary>
            Represents the method that will handle the
            <see cref="E:System.Windows.Controls.AutoCompleteBox.Populating" />
            event of a <see cref="T:System.Windows.Controls.AutoCompleteBox" />
            control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A
            <see cref="T:System.Windows.Controls.PopulatingEventArgs" /> that
            contains the event data.</param>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.ButtonSpinner">
            <summary>
            Represents a spinner control that includes two Buttons.
            </summary>
            <remarks>
            ButtonSpinner inherits from Spinner. 
            It adds two button template parts and a content property.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ButtonSpinner.ElementIncreaseButtonName">
            <summary>
            Name constant of the IncreaseButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ButtonSpinner.ElementDecreaseButtonName">
            <summary>
            Name constant of the DecreaseButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ButtonSpinner._increaseButton">
            <summary>
            Private field for IncreaseButton template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ButtonSpinner.IncreaseButton">
            <summary>
            Gets or sets the IncreaseButton template part.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ButtonSpinner._decreaseButton">
            <summary>
            Private field for DecreaseButton template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ButtonSpinner.DecreaseButton">
            <summary>
            Gets or sets the DecreaseButton template part.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ButtonSpinner.Content">
            <summary>
            Gets or sets the content that is contained within the button spinner.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ButtonSpinner.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ContentProperty property changed handler.
            </summary>
            <param name="d">ButtonSpinner that changed its Content.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.#ctor">
            <summary>
            Initializes a new instance of the ButtonSpinner class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnApplyTemplate">
            <summary>
            Builds the visual tree for the ButtonSpinner control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnContentChanged(System.Object,System.Object)">
            <summary>
            Occurs when the Content property value changed.
            </summary>
            <param name="oldValue">The old value of the Content property.</param>
            <param name="newValue">The new value of the Content property.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle click event of IncreaseButton and DecreaseButton template parts,
            translating Click to appropriate Spin event.
            </summary>
            <param name="sender">Event sender, should be either IncreaseButton or DecreaseButton template part.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Cancel LeftMouseButtonUp events originating from a button that has
            been changed to disabled.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
            event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that
            contains the event data.
            </param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.OnValidSpinDirectionChanged(System.Windows.Controls.ValidSpinDirections,System.Windows.Controls.ValidSpinDirections)">
            <summary>
            Called when valid spin direction changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.ButtonSpinner.SetButtonUsage">
            <summary>
            Disables or enables the buttons based on the valid spin direction.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1">
            <summary>
            Provides event data for various routed events that track property values
            changing.  Typically the events denote a cancellable action.
            </summary>
            <typeparam name="T">
            The type of the value for the dependency property that is changing.
            </typeparam>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Property">
            <summary>
            Gets the <see cref="T:System.Windows.DependencyProperty" />
            identifier for the property that is changing.
            </summary>
            <value>
            The <see cref="T:System.Windows.DependencyProperty" /> identifier
            for the property that is changing.
            </value>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.OldValue">
            <summary>
            Gets a value that reports the previous value of the changing
            property.
            </summary>
            <value>
            The previous value of the changing property.
            </value>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.NewValue">
            <summary>
            Gets or sets a value that reports the new value of the changing
            property, assuming that the property change is not cancelled.
            </summary>
            <value>
            The new value of the changing property.
            </value>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.IsCancelable">
            <summary>
            Gets a value indicating whether the property change that originated
            the RoutedPropertyChanging event is cancellable.
            </summary>
            <value>
            True if the property change is cancellable. false if the property
            change is not cancellable.
            </value>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Cancel">
            <summary>
            Gets or sets a value indicating whether the property change that
            originated the RoutedPropertyChanging event should be cancelled.
            </summary>
            <value>
            True to cancel the property change; this resets the property to
            <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.OldValue" />.
            false to not cancel the property change; the value changes to
            <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.NewValue" />.
            </value>
            <exception cref="T:System.InvalidOperationException">
            Attempted to cancel in an instance where
            <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.IsCancelable" />
            is false.
            </exception>
        </member>
        <member name="F:System.Windows.Controls.RoutedPropertyChangingEventArgs`1._cancel">
            <summary>
            Private member variable for Cancel property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.InCoercion">
            <summary>
            Gets or sets a value indicating whether internal value coercion is
            acting on the property change that originated the
            RoutedPropertyChanging event.
            </summary>
            <value>
            True if coercion is active. false if coercion is not active.
            </value>
            <remarks>
            This is a total hack to work around the class hierarchy for Value
            coercion in NumericUpDown.
            </remarks>
        </member>
        <member name="M:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.#ctor(System.Windows.DependencyProperty,`0,`0,System.Boolean)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" />
            class.
            </summary>
            <param name="property">
            The <see cref="T:System.Windows.DependencyProperty" /> identifier
            for the property that is changing.
            </param>
            <param name="oldValue">The previous value of the property.</param>
            <param name="newValue">
            The new value of the property, assuming that the property change is
            not cancelled.
            </param>
            <param name="isCancelable">
            True if the property change is cancellable by setting
            <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Cancel" />
            to true in event handling. false if the property change is not
            cancellable.
            </param>
        </member>
        <member name="M:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.#ctor(System.Windows.DependencyProperty,`0,`0,System.Boolean,System.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.RoutedPropertyChangingEventArgs`1" />
            class.
            </summary>
            <param name="property">
            The <see cref="T:System.Windows.DependencyProperty" /> identifier
            for the property that is changing.
            </param>
            <param name="oldValue">The previous value of the property.</param>
            <param name="newValue">
            The new value of the property, assuming that the property change is
            not cancelled.
            </param>
            <param name="isCancelable">
            True if the property change is cancellable by setting
            <see cref="P:System.Windows.Controls.RoutedPropertyChangingEventArgs`1.Cancel" />
            to true in event handling. false if the property change is not
            cancellable.
            </param>
            <param name="routedEvent">The routed event identifier for this instance.</param>
        </member>
        <member name="T:System.Windows.Controls.RoutedPropertyChangingEventHandler`1">
            <summary>
            Represents methods that handle various routed events that track property
            values changing.  Typically the events denote a cancellable action.
            </summary>
            <typeparam name="T">
            The type of the value for the dependency property that is changing.
            </typeparam>
            <param name="sender">
            The object where the initiating property is changing.
            </param>
            <param name="e">Event data for the event.</param>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.SelectorSelectionAdapter">
            <summary>
            Represents the selection adapter contained in the drop-down portion of
            an <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> control.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.SelectorSelectionAdapter._selector">
            <summary>
            The Selector instance.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.SelectorSelectionAdapter.IgnoringSelectionChanged">
            <summary>
            Gets or sets a value indicating whether the selection change event 
            should not be fired.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.SelectorSelectionAdapter.SelectorControl">
            <summary>
            Gets or sets the underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.
            </summary>
            <value>The underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.</value>
        </member>
        <member name="E:System.Windows.Controls.SelectorSelectionAdapter.SelectionChanged">
            <summary>
            Occurs when the
            <see cref="P:System.Windows.Controls.SelectorSelectionAdapter.SelectedItem" />
            property value changes.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.SelectorSelectionAdapter.Commit">
            <summary>
            Occurs when an item is selected and is committed to the underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.SelectorSelectionAdapter.Cancel">
            <summary>
            Occurs when a selection is canceled before it is committed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.SelectorSelectionAdapter" />
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.#ctor(System.Windows.Controls.Primitives.Selector)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.SelectorSelectionAdapter" />
            class with the specified
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.
            </summary>
            <param name="selector">The
            <see cref="T:System.Windows.Controls.Primitives.Selector" /> control
            to wrap as a
            <see cref="T:System.Windows.Controls.SelectorSelectionAdapter" />.</param>
        </member>
        <member name="P:System.Windows.Controls.SelectorSelectionAdapter.SelectedItem">
            <summary>
            Gets or sets the selected item of the selection adapter.
            </summary>
            <value>The selected item of the underlying selection adapter.</value>
        </member>
        <member name="P:System.Windows.Controls.SelectorSelectionAdapter.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the content of
            the selection adapter.
            </summary>
            <value>The collection used to generate content for the selection
            adapter.</value>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.ResetScrollViewer">
            <summary>
            If the control contains a ScrollViewer, this will reset the viewer 
            to be scrolled to the top.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnSelectorMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the mouse left button up event on the selector control.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the SelectionChanged event on the Selector control.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The selection changed event data.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.SelectedIndexIncrement">
            <summary>
            Increments the
            <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" />
            property of the underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.SelectedIndexDecrement">
            <summary>
            Decrements the
            <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" />
            property of the underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event that occurs
            when a key is pressed while the drop-down portion of the
            <see cref="T:Ion.Core.Toolkit.Controls.AutoCompleteBox" /> has focus.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" />
            that contains data about the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnCommit">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.SelectorSelectionAdapter.Commit" />
            event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnCommit(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires the Commit event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnCancel">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.SelectorSelectionAdapter.Cancel" />
            event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.OnCancel(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires the Cancel event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.AfterAdapterAction">
            <summary>
            Change the selection after the actions are complete.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SelectorSelectionAdapter.CreateAutomationPeer">
            <summary>
            Returns an automation peer for the underlying
            <see cref="T:System.Windows.Controls.Primitives.Selector" />
            control, for use by the Silverlight automation infrastructure.
            </summary>
            <returns>An automation peer for use by the Silverlight automation
            infrastructure.</returns>
        </member>
        <member name="T:System.Windows.Controls.SpinDirection">
            <summary>
            Represents spin directions that could be initiated by the end-user.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.SpinDirection.Increase">
            <summary>
            Represents a spin initiated by the end-user in order to Increase a value.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.SpinDirection.Decrease">
            <summary>
            Represents a spin initiated by the end-user in order to Decrease a value.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.SpinEventArgs">
            <summary>
            Provides data for the Spinner.Spin event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.SpinEventArgs.Direction">
            <summary>
            Gets the SpinDirection for the spin that has been initiated by the 
            end-user.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.SpinEventArgs.#ctor(System.Windows.Controls.SpinDirection)">
            <summary>
            Initializes a new instance of the SpinEventArgs class.
            </summary>
            <param name="direction">Spin direction.</param>
        </member>
        <member name="T:System.Windows.Controls.Spinner">
            <summary>
            Base class for controls that represents controls that can spin.
            </summary>
            <remarks>
            Spinner abstract class defines and implements common and focused visual state groups.
            Spinner abstract class defines and implements Spin event and OnSpin method.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.Spinner.ValidSpinDirection">
            <summary>
            Gets or sets the spin direction that is currently valid.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.Spinner.ValidSpinDirectionProperty">
            <summary>
            Identifies the ValidSpinDirection dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Spinner.OnValidSpinDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ValidSpinDirectionProperty property changed handler.
            </summary>
            <param name="d">ButtonSpinner that changed its ValidSpinDirection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:System.Windows.Controls.Spinner.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality. Making it internal for subclass access.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.Spinner.Spin">
            <summary>
            Occurs when spinning is initiated by the end-user.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Spinner.#ctor">
            <summary>
            Initializes a new instance of the Spinner class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Spinner.OnSpin(System.Windows.Controls.SpinEventArgs)">
            <summary>
            Raises the OnSpin event when spinning is initiated by the end-user.
            </summary>
            <param name="e">Spin event args.</param>
        </member>
        <member name="M:System.Windows.Controls.Spinner.OnValidSpinDirectionChanged(System.Windows.Controls.ValidSpinDirections,System.Windows.Controls.ValidSpinDirections)">
            <summary>
            Called when valid spin direction changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:System.Windows.Controls.Spinner.UpdateVisualState(System.Boolean)">
            <summary>
            Update current visual state.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:System.Windows.Controls.Spinner.Ion#Core#Toolkit#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">A value indicating whether to automatically generate transitions to the new state, or instantly transition to the new state.</param>
        </member>
        <member name="T:System.Windows.Controls.UpDownParseErrorEventArgs">
            <summary>
            Provides data for the UpDownBase.ParseError event.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.UpDownParseErrorEventArgs.Text">
            <summary>
            Gets the original string value that failed to parse.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownParseErrorEventArgs.Error">
            <summary>
            Gets the exception that was raised during the initial parsing 
            attempt.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.UpDownParseErrorEventArgs.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the UpDownParseErrorEventArgs class.
            </summary>
            <param name="text">The text that caused the parsing error.</param>
            <param name="error">The exception thrown by ParseValue method.</param>
        </member>
        <member name="T:System.Windows.Controls.UpDownParsingEventArgs`1">
            <summary>
            Provides data for the UpDownBase.Parsing event.
            </summary>
            <typeparam name="T">Type of Value property.</typeparam>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="P:System.Windows.Controls.UpDownParsingEventArgs`1.Text">
            <summary>
            Gets the original string value that will be parsed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.UpDownParsingEventArgs`1.Value">
            <summary>
            Gets or sets the value to be used.
            </summary>
            <value>The parsed value.</value>
        </member>
        <member name="M:System.Windows.Controls.UpDownParsingEventArgs`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:System.Windows.Controls.UpDownParsingEventArgs`1" /> class.
            </summary>
            <param name="text">The text that will be parsed.</param>
        </member>
        <member name="T:System.Windows.Controls.ValidSpinDirections">
            <summary>
            Represents spin directions that are valid.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidSpinDirections.None">
            <summary>
            Can not increase nor decrease.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidSpinDirections.Increase">
            <summary>
            Can increase.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ValidSpinDirections.Decrease">
            <summary>
            Can decrease.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.VisualTreeExtensions">
            <summary>
            A static class providing methods for working with the visual tree.  
            </summary>
        </member>
        <member name="M:System.Windows.Controls.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual children of a framework element.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The visual children of the framework element.</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject,System.String)">
            <summary>
            Retrieves a visual children with a given name
            </summary>
            <param name="obj">The scanned object</param>
            <param name="name">Name</param>
            <returns>The visual children or null</returns>
        </member>
        <member name="M:System.Windows.Controls.VisualTreeExtensions.GetLogicalChildrenBreadthFirst(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical children of a framework element using a 
            breadth-first search.  A visual element is assumed to be a logical 
            child of another visual element if they are in the same namescope.
            For performance reasons this method manually manages the queue 
            instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
